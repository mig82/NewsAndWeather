{
  "android": {
    "accounts": {
      "AccountManager": {
        "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html",
        "!type": "fn(context: +android.content.Context, service: IAccountManager)",
        "KEY_LAST_AUTHENTICATED_TIME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_LAST_AUTHENTICATED_TIME"
        },
        "KEY_ERROR_CODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ERROR_CODE"
        },
        "ERROR_CODE_BAD_ARGUMENTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_BAD_ARGUMENTS"
        },
        "ERROR_CODE_INVALID_RESPONSE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_INVALID_RESPONSE"
        },
        "LOGIN_ACCOUNTS_CHANGED_ACTION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#LOGIN_ACCOUNTS_CHANGED_ACTION"
        },
        "ERROR_CODE_MANAGEMENT_DISABLED_FOR_ACCOUNT_TYPE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_MANAGEMENT_DISABLED_FOR_ACCOUNT_TYPE"
        },
        "KEY_ANDROID_PACKAGE_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ANDROID_PACKAGE_NAME"
        },
        "KEY_CALLER_UID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_CALLER_UID"
        },
        "KEY_AUTHENTICATOR_TYPES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTHENTICATOR_TYPES"
        },
        "AUTHENTICATOR_ATTRIBUTES_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#AUTHENTICATOR_ATTRIBUTES_NAME"
        },
        "KEY_NOTIFY_ON_FAILURE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_NOTIFY_ON_FAILURE"
        },
        "KEY_ACCOUNT_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_NAME"
        },
        "KEY_PASSWORD": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_PASSWORD"
        },
        "KEY_ACCOUNT_MANAGER_RESPONSE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_MANAGER_RESPONSE"
        },
        "KEY_BOOLEAN_RESULT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_BOOLEAN_RESULT"
        },
        "ACTION_AUTHENTICATOR_INTENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ACTION_AUTHENTICATOR_INTENT"
        },
        "KEY_USERDATA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_USERDATA"
        },
        "KEY_CALLER_PID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_CALLER_PID"
        },
        "KEY_INTENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_INTENT"
        },
        "KEY_ACCOUNT_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_TYPE"
        },
        "ERROR_CODE_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_CANCELED"
        },
        "KEY_AUTH_TOKEN_LABEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTH_TOKEN_LABEL"
        },
        "ERROR_CODE_UNSUPPORTED_OPERATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_UNSUPPORTED_OPERATION"
        },
        "KEY_ACCOUNTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNTS"
        },
        "ERROR_CODE_BAD_REQUEST": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_BAD_REQUEST"
        },
        "KEY_AUTH_FAILED_MESSAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTH_FAILED_MESSAGE"
        },
        "ERROR_CODE_REMOTE_EXCEPTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_REMOTE_EXCEPTION"
        },
        "AUTHENTICATOR_META_DATA_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#AUTHENTICATOR_META_DATA_NAME"
        },
        "ERROR_CODE_BAD_AUTHENTICATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_BAD_AUTHENTICATION"
        },
        "ERROR_CODE_USER_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_USER_RESTRICTED"
        },
        "ERROR_CODE_NETWORK_ERROR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#ERROR_CODE_NETWORK_ERROR"
        },
        "KEY_AUTHTOKEN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_AUTHTOKEN"
        },
        "KEY_ACCOUNT_AUTHENTICATOR_RESPONSE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ACCOUNT_AUTHENTICATOR_RESPONSE"
        },
        "KEY_ERROR_MESSAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#KEY_ERROR_MESSAGE"
        },
        "newChooseAccountIntent": {
          "!type": "fn(selectedAccount: +android.accounts.Account, allowableAccounts: +java.util.ArrayList, allowableAccountTypes: +java.newArray, alwaysPromptForAccount: bool, descriptionOverrideText: string, addAccountAuthTokenType: string, addAccountRequiredFeatures: +java.newArray, addAccountOptions: +android.os.Bundle) -> +android.content.Intent",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#newChooseAccountIntent(android.accounts.Account, java.util.ArrayList, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)"
        },
        "sanitizeResult": {
          "!type": "fn(result: +android.os.Bundle) -> +android.os.Bundle",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#sanitizeResult(android.os.Bundle)"
        },
        "get": {
          "!type": "fn(context: +android.content.Context) -> +android.accounts.AccountManager",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#get(android.content.Context)"
        },
        "prototype": {
          "getAuthenticatorTypesAsUser": {
            "!type": "fn(userId: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAuthenticatorTypesAsUser(int)"
          },
          "getAccountsForPackage": {
            "!type": "fn(packageName: string, uid: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsForPackage(java.lang.String, int)"
          },
          "getUserData": {
            "!type": "fn(account: +android.accounts.Account, key: string) -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getUserData(android.accounts.Account, java.lang.String)"
          },
          "setAuthToken": {
            "!type": "fn(account: +android.accounts.Account, authTokenType: string, authToken: string) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#setAuthToken(android.accounts.Account, java.lang.String, java.lang.String)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getAccountsByType": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByType(java.lang.String)"
          },
          "peekAuthToken": {
            "!type": "fn(account: +android.accounts.Account, authTokenType: string) -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#peekAuthToken(android.accounts.Account, java.lang.String)"
          },
          "getAccountsByTypeForPackage": {
            "!type": "fn(type: string, packageName: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByTypeForPackage(java.lang.String, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "removeAccount": {
            "!type": "fn(account: +android.accounts.Account, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "getAuthTokenLabel": {
            "!type": "fn(accountType: string, authTokenType: string, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAuthTokenLabel(java.lang.String, java.lang.String, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "removeOnAccountsUpdatedListener": {
            "!type": "fn(listener: +android.accounts.OnAccountsUpdateListener) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)"
          },
          "getAuthTokenByFeatures": {
            "!type": "fn(accountType: string, authTokenType: string, features: +java.newArray, activity: +android.app.Activity, addAccountOptions: +android.os.Bundle, getAuthTokenOptions: +android.os.Bundle, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAuthTokenByFeatures(java.lang.String, java.lang.String, java.lang.String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "addAccountExplicitly": {
            "!type": "fn(account: +android.accounts.Account, password: string, userdata: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#addAccountExplicitly(android.accounts.Account, java.lang.String, android.os.Bundle)"
          },
          "updateAppPermission": {
            "!type": "fn(account: +android.accounts.Account, authTokenType: string, uid: number, value: bool) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#updateAppPermission(android.accounts.Account, java.lang.String, int, boolean)"
          },
          "hasFeatures": {
            "!type": "fn(account: +android.accounts.Account, features: +java.newArray, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#hasFeatures(android.accounts.Account, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "setUserData": {
            "!type": "fn(account: +android.accounts.Account, key: string, value: string) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#setUserData(android.accounts.Account, java.lang.String, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getAccountsByTypeAndFeatures": {
            "!type": "fn(type: string, features: +java.newArray, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByTypeAndFeatures(java.lang.String, java.lang.String[], android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "editProperties": {
            "!type": "fn(accountType: string, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#editProperties(java.lang.String, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "addSharedAccount": {
            "!type": "fn(account: +android.accounts.Account, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#addSharedAccount(android.accounts.Account, android.os.UserHandle)"
          },
          "getPassword": {
            "!type": "fn(account: +android.accounts.Account) -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getPassword(android.accounts.Account)"
          },
          "invalidateAuthToken": {
            "!type": "fn(accountType: string, authToken: string) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#invalidateAuthToken(java.lang.String, java.lang.String)"
          },
          "getSharedAccounts": {
            "!type": "fn(user: +android.os.UserHandle) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getSharedAccounts(android.os.UserHandle)"
          },
          "clearPassword": {
            "!type": "fn(account: +android.accounts.Account) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#clearPassword(android.accounts.Account)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getAuthToken": {
            "!type": "fn(account: +android.accounts.Account, authTokenType: string, options: +android.os.Bundle, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAuthToken(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "removeSharedAccount": {
            "!type": "fn(account: +android.accounts.Account, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#removeSharedAccount(android.accounts.Account, android.os.UserHandle)"
          },
          "addOnAccountsUpdatedListener": {
            "!type": "fn(listener: +android.accounts.OnAccountsUpdateListener, handler: +android.os.Handler, updateImmediately: bool) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean)"
          },
          "getAccounts": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccounts()"
          },
          "addAccount": {
            "!type": "fn(accountType: string, authTokenType: string, requiredFeatures: +java.newArray, addAccountOptions: +android.os.Bundle, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#addAccount(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "confirmCredentials": {
            "!type": "fn(account: +android.accounts.Account, options: +android.os.Bundle, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "getPreviousName": {
            "!type": "fn(account: +android.accounts.Account) -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getPreviousName(android.accounts.Account)"
          },
          "addAccountAsUser": {
            "!type": "fn(accountType: string, authTokenType: string, requiredFeatures: +java.newArray, addAccountOptions: +android.os.Bundle, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler, userHandle: +android.os.UserHandle) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#addAccountAsUser(java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler, android.os.UserHandle)"
          },
          "setPassword": {
            "!type": "fn(account: +android.accounts.Account, password: string) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#setPassword(android.accounts.Account, java.lang.String)"
          },
          "copyAccountToUser": {
            "!type": "fn(account: +android.accounts.Account, user: +android.os.UserHandle, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#copyAccountToUser(android.accounts.Account, android.os.UserHandle, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "getAccountsByTypeAsUser": {
            "!type": "fn(type: string, userHandle: +android.os.UserHandle) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsByTypeAsUser(java.lang.String, android.os.UserHandle)"
          },
          "notifyAccountAuthenticated": {
            "!type": "fn(account: +android.accounts.Account) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#notifyAccountAuthenticated(android.accounts.Account)"
          },
          "getAccountsAsUser": {
            "!type": "fn(userId: number) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAccountsAsUser(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "blockingGetAuthToken": {
            "!type": "fn(account: +android.accounts.Account, authTokenType: string, notifyAuthFailure: bool) -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#blockingGetAuthToken(android.accounts.Account, java.lang.String, boolean)"
          },
          "removeAccountAsUser": {
            "!type": "fn(account: +android.accounts.Account, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler, userHandle: +android.os.UserHandle) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#removeAccountAsUser(android.accounts.Account, android.accounts.AccountManagerCallback, android.os.Handler, android.os.UserHandle)"
          },
          "getAuthenticatorTypes": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#getAuthenticatorTypes()"
          },
          "renameAccount": {
            "!type": "fn(account: +android.accounts.Account, newName: string, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#renameAccount(android.accounts.Account, java.lang.String, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "removeAccountExplicitly": {
            "!type": "fn(account: +android.accounts.Account) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#removeAccountExplicitly(android.accounts.Account)"
          },
          "updateCredentials": {
            "!type": "fn(account: +android.accounts.Account, authTokenType: string, options: +android.os.Bundle, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#updateCredentials(android.accounts.Account, java.lang.String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler)"
          },
          "confirmCredentialsAsUser": {
            "!type": "fn(account: +android.accounts.Account, options: +android.os.Bundle, activity: +android.app.Activity, callback: +android.accounts.AccountManagerCallback, handler: +android.os.Handler, userHandle: +android.os.UserHandle) -> +android.accounts.AccountManagerFuture",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManager.html#confirmCredentialsAsUser(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback, android.os.Handler, android.os.UserHandle)"
          }
        }
      },
      "AccountAndUser": {
        "!url": "http://developer.android.com/reference/android/accounts/AccountAndUser.html",
        "!type": "fn(account: +android.accounts.Account, userId: number)",
        "prototype": {
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAndUser.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAndUser.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAndUser.html#toString()"
          }
        }
      },
      "AuthenticatorDescription": {
        "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html",
        "!type": "fn(type: string, packageName: string, labelId: number, iconId: number, smallIconId: number, prefId: number, customTokens: bool)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#CREATOR"
        },
        "newKey": {
          "!type": "fn(type: string) -> +android.accounts.AuthenticatorDescription",
          "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#newKey(java.lang.String)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorDescription.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ChooseAccountActivity": {
        "!url": "http://developer.android.com/reference/android/accounts/ChooseAccountActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseAccountActivity.html#onCreate(android.os.Bundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseAccountActivity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "AbstractAccountAuthenticator": {
        "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html",
        "!type": "fn(context: +android.content.Context)",
        "KEY_CUSTOM_TOKEN_EXPIRY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#KEY_CUSTOM_TOKEN_EXPIRY"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "confirmCredentials": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account, options: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#confirmCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)"
          },
          "getAuthTokenLabel": {
            "!type": "fn(authTokenType: string) -> string",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAuthTokenLabel(java.lang.String)"
          },
          "getIBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getIBinder()"
          },
          "addAccount": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, accountType: string, authTokenType: string, requiredFeatures: +java.newArray, options: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#addAccount(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)"
          },
          "addAccountFromCredentials": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account, accountCredentials: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)"
          },
          "getAccountRemovalAllowed": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "updateCredentials": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account, authTokenType: string, options: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#updateCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getAuthToken": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account, authTokenType: string, options: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAuthToken(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "hasFeatures": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account, features: +java.newArray) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#hasFeatures(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String[])"
          },
          "getAccountCredentialsForCloning": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, account: +android.accounts.Account) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)"
          },
          "editProperties": {
            "!type": "fn(response: +android.accounts.AccountAuthenticatorResponse, accountType: string) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#editProperties(android.accounts.AccountAuthenticatorResponse, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Account": {
        "!url": "http://developer.android.com/reference/android/accounts/Account.html",
        "!type": "fn(name: string, type: string)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/accounts/Account.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/accounts/Account.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/accounts/Account.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/Account.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/Account.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/Account.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ChooseTypeAndAccountActivity": {
        "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_ADD_ACCOUNT_OPTIONS_BUNDLE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_ADD_ACCOUNT_AUTH_TOKEN_TYPE_STRING"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_ALLOWABLE_ACCOUNT_TYPES_STRING_ARRAY"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "EXTRA_SELECTED_ACCOUNT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_SELECTED_ACCOUNT"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "REQUEST_CHOOSE_TYPE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#REQUEST_CHOOSE_TYPE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_ALLOWABLE_ACCOUNTS_ARRAYLIST"
        },
        "EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_ADD_ACCOUNT_REQUIRED_FEATURES_STRING_ARRAY"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_ALWAYS_PROMPT_FOR_ACCOUNT"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "REQUEST_NULL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#REQUEST_NULL"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "EXTRA_DESCRIPTION_TEXT_OVERRIDE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#EXTRA_DESCRIPTION_TEXT_OVERRIDE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "REQUEST_ADD_ACCOUNT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#REQUEST_ADD_ACCOUNT"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "onOkButtonClicked": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#onOkButtonClicked(android.view.View)"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "run": {
            "!type": "fn(accountManagerFuture: +android.accounts.AccountManagerFuture) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#run(android.accounts.AccountManagerFuture)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#onCreate(android.os.Bundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "onCancelButtonClicked": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseTypeAndAccountActivity.html#onCancelButtonClicked(android.view.View)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "GrantCredentialsPermissionActivity": {
        "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "EXTRAS_PACKAGES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_PACKAGES"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "EXTRAS_REQUESTING_UID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_REQUESTING_UID"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "EXTRAS_ACCOUNT_TYPE_LABEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_ACCOUNT_TYPE_LABEL"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "EXTRAS_AUTH_TOKEN_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_AUTH_TOKEN_TYPE"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "EXTRAS_RESPONSE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_RESPONSE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "EXTRAS_AUTH_TOKEN_LABEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_AUTH_TOKEN_LABEL"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "EXTRAS_ACCOUNT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#EXTRAS_ACCOUNT"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "setAccountAuthenticatorResult": {
            "!type": "fn(result: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#setAccountAuthenticatorResult(android.os.Bundle)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "onClick": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#onClick(android.view.View)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/accounts/GrantCredentialsPermissionActivity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "AccountAuthenticatorActivity": {
        "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "setAccountAuthenticatorResult": {
            "!type": "fn(result: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorActivity.html#setAccountAuthenticatorResult(android.os.Bundle)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorActivity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "AccountsException": {
        "!url": "http://developer.android.com/reference/android/accounts/AccountsException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "OperationCanceledException": {
        "!url": "http://developer.android.com/reference/android/accounts/OperationCanceledException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CantAddAccountActivity": {
        "!url": "http://developer.android.com/reference/android/accounts/CantAddAccountActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "EXTRA_ERROR_CODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/accounts/CantAddAccountActivity.html#EXTRA_ERROR_CODE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/CantAddAccountActivity.html#onCreate(android.os.Bundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "onCancelButtonClicked": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/CantAddAccountActivity.html#onCancelButtonClicked(android.view.View)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "NetworkErrorException": {
        "!url": "http://developer.android.com/reference/android/accounts/NetworkErrorException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ChooseAccountTypeActivity": {
        "!url": "http://developer.android.com/reference/android/accounts/ChooseAccountTypeActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/ChooseAccountTypeActivity.html#onCreate(android.os.Bundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "AccountAuthenticatorResponse": {
        "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html",
        "!type": "fn(response: IAccountAuthenticatorResponse)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onError": {
            "!type": "fn(errorCode: number, errorMessage: string) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html#onError(int, java.lang.String)"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html#writeToParcel(android.os.Parcel, int)"
          },
          "onRequestContinued": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html#onRequestContinued()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onResult": {
            "!type": "fn(result: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountAuthenticatorResponse.html#onResult(android.os.Bundle)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AuthenticatorException": {
        "!url": "http://developer.android.com/reference/android/accounts/AuthenticatorException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AccountManagerResponse": {
        "!url": "http://developer.android.com/reference/android/accounts/AccountManagerResponse.html",
        "!type": "fn(response: IAccountManagerResponse)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/accounts/AccountManagerResponse.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManagerResponse.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onError": {
            "!type": "fn(errorCode: number, errorMessage: string) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManagerResponse.html#onError(int, java.lang.String)"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManagerResponse.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onResult": {
            "!type": "fn(result: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/accounts/AccountManagerResponse.html#onResult(android.os.Bundle)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      }
    }
  }
}