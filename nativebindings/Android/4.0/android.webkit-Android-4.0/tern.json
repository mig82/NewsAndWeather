{
  "android": {
    "webkit": {
      "WebViewFragment": {
        "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html",
        "!type": "fn()",
        "instantiate": {
          "!type": "fn(context: +android.content.Context, fname: string) -> +android.app.Fragment",
          "!url": "http://developer.android.com/reference/android/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
        },
        "prototype": {
          "getReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReturnTransition()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#hashCode()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isResumed()"
          },
          "setSharedElementReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementReturnTransition(android.transition.Transition)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html#onResume()"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
          },
          "getReenterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReenterTransition()"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getString(int)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html#onDestroy()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getTag": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTag()"
          },
          "isRemoving": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isRemoving()"
          },
          "onDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDetach()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getFragmentManager()"
          },
          "setHasOptionsMenu": {
            "!type": "fn(hasMenu: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setHasOptionsMenu(boolean)"
          },
          "setEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterTransition(android.transition.Transition)"
          },
          "getParentFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getParentFragment()"
          },
          "setInitialSavedState": {
            "!type": "fn(state: +android.app.Fragment.SavedState) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setInitialSavedState(android.app.Fragment.SavedState)"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getId()"
          },
          "getSharedElementReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementReturnTransition()"
          },
          "getAllowEnterTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowEnterTransitionOverlap()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "setMenuVisibility": {
            "!type": "fn(menuVisible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setMenuVisibility(boolean)"
          },
          "isDetached": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isDetached()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#equals(java.lang.Object)"
          },
          "onViewCreated": {
            "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)"
          },
          "getSharedElementEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementEnterTransition()"
          },
          "getEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getEnterTransition()"
          },
          "setUserVisibleHint": {
            "!type": "fn(isVisibleToUser: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setUserVisibleHint(boolean)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreate(android.os.Bundle)"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onLowMemory()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getContext()"
          },
          "getExitTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getExitTransition()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAllowEnterTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
          },
          "setExitSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "isHidden": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isHidden()"
          },
          "onViewStateRestored": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "getView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getView()"
          },
          "setArguments": {
            "!type": "fn(args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setArguments(android.os.Bundle)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getText(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onStop()"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isInLayout()"
          },
          "setSharedElementEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementEnterTransition(android.transition.Transition)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onSaveInstanceState(android.os.Bundle)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivity(android.content.Intent)"
          },
          "getTargetFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetFragment()"
          },
          "getArguments": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getArguments()"
          },
          "isAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isAdded()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onStart()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onTrimMemory(int)"
          },
          "setExitTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitTransition(android.transition.Transition)"
          },
          "getWebView": {
            "!type": "fn() -> +android.webkit.WebView",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html#getWebView()"
          },
          "onDestroyView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html#onDestroyView()"
          },
          "onCreateView": {
            "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
          },
          "getUserVisibleHint": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getUserVisibleHint()"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLoaderManager()"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#unregisterForContextMenu(android.view.View)"
          },
          "getRetainInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getRetainInstance()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#toString()"
          },
          "getHost": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getHost()"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#requestPermissions(java.lang.String[], int)"
          },
          "onInflate": {
            "!type": "fn(attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onInflate(android.util.AttributeSet, android.os.Bundle)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#registerForContextMenu(android.view.View)"
          },
          "getActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getActivity()"
          },
          "getAllowReturnTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowReturnTransitionOverlap()"
          },
          "setTargetFragment": {
            "!type": "fn(fragment: +android.app.Fragment, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setTargetFragment(android.app.Fragment, int)"
          },
          "onDestroyOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroyOptionsMenu()"
          },
          "onActivityCreated": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityCreated(android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onHiddenChanged": {
            "!type": "fn(hidden: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onHiddenChanged(boolean)"
          },
          "setReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReturnTransition(android.transition.Transition)"
          },
          "onAttach": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onAttach(android.content.Context)"
          },
          "setRetainInstance": {
            "!type": "fn(retain: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setRetainInstance(boolean)"
          },
          "setAllowReturnTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
          },
          "getTargetRequestCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetRequestCode()"
          },
          "getChildFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getChildFragmentManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLayoutInflater(android.os.Bundle)"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isVisible()"
          },
          "setEnterSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "onPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewFragment.html#onPause()"
          },
          "setReenterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReenterTransition(android.transition.Transition)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
          },
          "onCreateAnimator": {
            "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.animation.Animator",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateAnimator(int, boolean, int)"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getResources()"
          }
        }
      },
      "HttpAuthHandler": {
        "!url": "http://developer.android.com/reference/android/webkit/HttpAuthHandler.html",
        "!type": "fn()",
        "prototype": {
          "getLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#getLooper()"
          },
          "sendEmptyMessage": {
            "!type": "fn(what: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessage(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "suppressDialog": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/HttpAuthHandler.html#suppressDialog()"
          },
          "handleMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#handleMessage(android.os.Message)"
          },
          "removeCallbacksAndMessages": {
            "!type": "fn(token: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeCallbacksAndMessages(java.lang.Object)"
          },
          "proceed": {
            "!type": "fn(username: string, password: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/HttpAuthHandler.html#proceed(java.lang.String, java.lang.String)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/HttpAuthHandler.html#cancel()"
          },
          "hasCallbacks": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#hasCallbacks(java.lang.Runnable)"
          },
          "sendMessage": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessage(android.os.Message)"
          },
          "removeCallbacks": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeCallbacks(java.lang.Runnable)"
          },
          "dump": {
            "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#dump(android.util.Printer, java.lang.String)"
          },
          "removeMessages": {
            "!type": "fn(what: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeMessages(int)"
          },
          "hasMessages": {
            "!type": "fn(what: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#hasMessages(int)"
          },
          "runWithScissors": {
            "!type": "fn(r: +java.lang.Runnable, timeout: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#runWithScissors(java.lang.Runnable, long)"
          },
          "postDelayed": {
            "!type": "fn(r: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postDelayed(java.lang.Runnable, long)"
          },
          "dispatchMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#dispatchMessage(android.os.Message)"
          },
          "obtainMessage": {
            "!type": "fn() -> +android.os.Message",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#obtainMessage()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "sendEmptyMessageDelayed": {
            "!type": "fn(what: number, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessageDelayed(int, long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getMessageName": {
            "!type": "fn(message: +android.os.Message) -> string",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#getMessageName(android.os.Message)"
          },
          "sendMessageAtTime": {
            "!type": "fn(msg: +android.os.Message, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageAtTime(android.os.Message, long)"
          },
          "postAtTime": {
            "!type": "fn(r: +java.lang.Runnable, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postAtTime(java.lang.Runnable, long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "sendEmptyMessageAtTime": {
            "!type": "fn(what: number, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessageAtTime(int, long)"
          },
          "post": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#post(java.lang.Runnable)"
          },
          "useHttpAuthUsernamePassword": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/HttpAuthHandler.html#useHttpAuthUsernamePassword()"
          },
          "sendMessageDelayed": {
            "!type": "fn(msg: +android.os.Message, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageDelayed(android.os.Message, long)"
          },
          "sendMessageAtFrontOfQueue": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageAtFrontOfQueue(android.os.Message)"
          },
          "postAtFrontOfQueue": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postAtFrontOfQueue(java.lang.Runnable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "FindActionModeCallback": {
        "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html",
        "!type": "fn(context: +android.content.Context)",
        "NoAction": {
          "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.NoAction.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "onPrepareActionMode": {
              "!type": "fn(mode: +android.view.ActionMode, menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.NoAction.html#onPrepareActionMode(android.view.ActionMode, android.view.Menu)"
            },
            "onDestroyActionMode": {
              "!type": "fn(mode: +android.view.ActionMode) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.NoAction.html#onDestroyActionMode(android.view.ActionMode)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onCreateActionMode": {
              "!type": "fn(mode: +android.view.ActionMode, menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.NoAction.html#onCreateActionMode(android.view.ActionMode, android.view.Menu)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "onActionItemClicked": {
              "!type": "fn(mode: +android.view.ActionMode, item: +android.view.MenuItem) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.NoAction.html#onActionItemClicked(android.view.ActionMode, android.view.MenuItem)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "setWebView": {
            "!type": "fn(webView: +android.webkit.WebView) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#setWebView(android.webkit.WebView)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "beforeTextChanged": {
            "!type": "fn(s: +java.lang.CharSequence, start: number, count: number, after: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#beforeTextChanged(java.lang.CharSequence, int, int, int)"
          },
          "onClick": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onClick(android.view.View)"
          },
          "afterTextChanged": {
            "!type": "fn(s: +android.text.Editable) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#afterTextChanged(android.text.Editable)"
          },
          "findAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#findAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onDestroyActionMode": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onDestroyActionMode(android.view.ActionMode)"
          },
          "showSoftInput": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#showSoftInput()"
          },
          "onPrepareActionMode": {
            "!type": "fn(mode: +android.view.ActionMode, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onPrepareActionMode(android.view.ActionMode, android.view.Menu)"
          },
          "updateMatchCount": {
            "!type": "fn(matchIndex: number, matchCount: number, isEmptyFind: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#updateMatchCount(int, int, boolean)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#finish()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "getActionModeGlobalBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#getActionModeGlobalBottom()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onFindResultReceived": {
            "!type": "fn(activeMatchOrdinal: number, numberOfMatches: number, isDoneCounting: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onFindResultReceived(int, int, boolean)"
          },
          "onTextChanged": {
            "!type": "fn(s: +java.lang.CharSequence, start: number, before: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onTextChanged(java.lang.CharSequence, int, int, int)"
          },
          "setText": {
            "!type": "fn(text: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#setText(java.lang.String)"
          },
          "onActionItemClicked": {
            "!type": "fn(mode: +android.view.ActionMode, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onActionItemClicked(android.view.ActionMode, android.view.MenuItem)"
          },
          "onCreateActionMode": {
            "!type": "fn(mode: +android.view.ActionMode, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/FindActionModeCallback.html#onCreateActionMode(android.view.ActionMode, android.view.Menu)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "CacheManager": {
        "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html",
        "!type": "fn()",
        "CacheResult": {
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html",
          "!type": "fn()",
          "prototype": {
            "getHttpStatusCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getHttpStatusCode()"
            },
            "getLocalPath": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getLocalPath()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getExpiresString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getExpiresString()"
            },
            "getEncoding": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getEncoding()"
            },
            "getExpires": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getExpires()"
            },
            "getMimeType": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getMimeType()"
            },
            "getContentLength": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getContentLength()"
            },
            "setEncoding": {
              "!type": "fn(encoding: string) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#setEncoding(java.lang.String)"
            },
            "getOutputStream": {
              "!type": "fn() -> +java.io.OutputStream",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getOutputStream()"
            },
            "getInputStream": {
              "!type": "fn() -> +java.io.InputStream",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getInputStream()"
            },
            "setContentLength": {
              "!type": "fn(contentLength: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#setContentLength(long)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setInputStream": {
              "!type": "fn(stream: +java.io.InputStream) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#setInputStream(java.io.InputStream)"
            },
            "getETag": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getETag()"
            },
            "getLastModified": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getLastModified()"
            },
            "getContentDisposition": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getContentDisposition()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getLocation": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/CacheManager.CacheResult.html#getLocation()"
            }
          }
        },
        "getCacheFileBaseDir": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html#getCacheFileBaseDir()"
        },
        "startCacheTransaction": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html#startCacheTransaction()"
        },
        "getCacheFile": {
          "!type": "fn(url: string, headers: +java.util.Map) -> +android.webkit.CacheManager.CacheResult",
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html#getCacheFile(java.lang.String, java.util.Map)"
        },
        "endCacheTransaction": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html#endCacheTransaction()"
        },
        "saveCacheFile": {
          "!type": "fn(url: string, cacheResult: +android.webkit.CacheManager.CacheResult) -> void",
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html#saveCacheFile(java.lang.String, android.webkit.CacheManager.CacheResult)"
        },
        "cacheDisabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/CacheManager.html#cacheDisabled()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "WebSettings": {
        "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html",
        "!type": "fn()",
        "LayoutAlgorithm": {
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html",
          "NARROW_COLUMNS": {
            "!type": "+android.webkit.WebSettings.LayoutAlgorithm",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html#NARROW_COLUMNS"
          },
          "TEXT_AUTOSIZING": {
            "!type": "+android.webkit.WebSettings.LayoutAlgorithm",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html#TEXT_AUTOSIZING"
          },
          "SINGLE_COLUMN": {
            "!type": "+android.webkit.WebSettings.LayoutAlgorithm",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html#SINGLE_COLUMN"
          },
          "NORMAL": {
            "!type": "+android.webkit.WebSettings.LayoutAlgorithm",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html#NORMAL"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.webkit.WebSettings.LayoutAlgorithm",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.LayoutAlgorithm.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "TextSize": {
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html",
          "SMALLEST": {
            "!type": "+android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#SMALLEST"
          },
          "LARGEST": {
            "!type": "+android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#LARGEST"
          },
          "LARGER": {
            "!type": "+android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#LARGER"
          },
          "SMALLER": {
            "!type": "+android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#SMALLER"
          },
          "NORMAL": {
            "!type": "+android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#NORMAL"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.TextSize.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ZoomDensity": {
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html",
          "MEDIUM": {
            "!type": "+android.webkit.WebSettings.ZoomDensity",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html#MEDIUM"
          },
          "CLOSE": {
            "!type": "+android.webkit.WebSettings.ZoomDensity",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html#CLOSE"
          },
          "FAR": {
            "!type": "+android.webkit.WebSettings.ZoomDensity",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html#FAR"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.webkit.WebSettings.ZoomDensity",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "getValue": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/webkit/WebSettings.ZoomDensity.html#getValue()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "RenderPriority": {
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html",
          "HIGH": {
            "!type": "+android.webkit.WebSettings.RenderPriority",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html#HIGH"
          },
          "NORMAL": {
            "!type": "+android.webkit.WebSettings.RenderPriority",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html#NORMAL"
          },
          "LOW": {
            "!type": "+android.webkit.WebSettings.RenderPriority",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html#LOW"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.webkit.WebSettings.RenderPriority",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.RenderPriority.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "PluginState": {
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html",
          "ON": {
            "!type": "+android.webkit.WebSettings.PluginState",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html#ON"
          },
          "OFF": {
            "!type": "+android.webkit.WebSettings.PluginState",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html#OFF"
          },
          "ON_DEMAND": {
            "!type": "+android.webkit.WebSettings.PluginState",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html#ON_DEMAND"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.webkit.WebSettings.PluginState",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.PluginState.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "MIXED_CONTENT_NEVER_ALLOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#MIXED_CONTENT_NEVER_ALLOW"
        },
        "MIXED_CONTENT_COMPATIBILITY_MODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#MIXED_CONTENT_COMPATIBILITY_MODE"
        },
        "LOAD_CACHE_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#LOAD_CACHE_ONLY"
        },
        "MIXED_CONTENT_ALWAYS_ALLOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#MIXED_CONTENT_ALWAYS_ALLOW"
        },
        "LOAD_NO_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#LOAD_NO_CACHE"
        },
        "LOAD_NORMAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#LOAD_NORMAL"
        },
        "LOAD_CACHE_ELSE_NETWORK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#LOAD_CACHE_ELSE_NETWORK"
        },
        "LOAD_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#LOAD_DEFAULT"
        },
        "getDefaultUserAgent": {
          "!type": "fn(context: +android.content.Context) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultUserAgent(android.content.Context)"
        },
        "prototype": {
          "getDefaultZoom": {
            "!type": "fn() -> +android.webkit.WebSettings.ZoomDensity",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultZoom()"
          },
          "setUseWideViewPort": {
            "!type": "fn(use: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setUseWideViewPort(boolean)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getTextSize": {
            "!type": "fn() -> +android.webkit.WebSettings.TextSize",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getTextSize()"
          },
          "getLightTouchEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getLightTouchEnabled()"
          },
          "setAppCacheMaxSize": {
            "!type": "fn(appCacheMaxSize: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCacheMaxSize(long)"
          },
          "getUseDoubleTree": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getUseDoubleTree()"
          },
          "getJavaScriptCanOpenWindowsAutomatically": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getJavaScriptCanOpenWindowsAutomatically()"
          },
          "getOffscreenPreRaster": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getOffscreenPreRaster()"
          },
          "setUseDoubleTree": {
            "!type": "fn(use: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setUseDoubleTree(boolean)"
          },
          "setSupportMultipleWindows": {
            "!type": "fn(support: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setSupportMultipleWindows(boolean)"
          },
          "setNeedInitialFocus": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setNeedInitialFocus(boolean)"
          },
          "setNavDump": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setNavDump(boolean)"
          },
          "setAcceptThirdPartyCookies": {
            "!type": "fn(accept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAcceptThirdPartyCookies(boolean)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setAllowFileAccess": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess(boolean)"
          },
          "setGeolocationEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setGeolocationEnabled(boolean)"
          },
          "getDatabasePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDatabasePath()"
          },
          "setDefaultFontSize": {
            "!type": "fn(size: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultFontSize(int)"
          },
          "getPluginsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getPluginsEnabled()"
          },
          "getJavaScriptEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getJavaScriptEnabled()"
          },
          "setDisplayZoomControls": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDisplayZoomControls(boolean)"
          },
          "enableSmoothTransition": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#enableSmoothTransition()"
          },
          "getAllowFileAccessFromFileURLs": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowFileAccessFromFileURLs()"
          },
          "getMediaPlaybackRequiresUserGesture": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getMediaPlaybackRequiresUserGesture()"
          },
          "getSansSerifFontFamily": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getSansSerifFontFamily()"
          },
          "setDatabaseEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDatabaseEnabled(boolean)"
          },
          "setUserAgentString": {
            "!type": "fn(ua: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setUserAgentString(java.lang.String)"
          },
          "getSaveFormData": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getSaveFormData()"
          },
          "getAllowContentAccess": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowContentAccess()"
          },
          "setPluginState": {
            "!type": "fn(state: +android.webkit.WebSettings.PluginState) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setPluginState(android.webkit.WebSettings.PluginState)"
          },
          "setPluginsPath": {
            "!type": "fn(pluginsPath: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setPluginsPath(java.lang.String)"
          },
          "setPluginsEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setPluginsEnabled(boolean)"
          },
          "getAllowFileAccess": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowFileAccess()"
          },
          "setSaveFormData": {
            "!type": "fn(save: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setSaveFormData(boolean)"
          },
          "setBlockNetworkLoads": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setBlockNetworkLoads(boolean)"
          },
          "setFantasyFontFamily": {
            "!type": "fn(font: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setFantasyFontFamily(java.lang.String)"
          },
          "getDatabaseEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDatabaseEnabled()"
          },
          "getUseWideViewPort": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getUseWideViewPort()"
          },
          "getUserAgentString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getUserAgentString()"
          },
          "setAllowFileAccessFromFileURLs": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccessFromFileURLs(boolean)"
          },
          "getPluginState": {
            "!type": "fn() -> +android.webkit.WebSettings.PluginState",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getPluginState()"
          },
          "setDatabasePath": {
            "!type": "fn(databasePath: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDatabasePath(java.lang.String)"
          },
          "getPluginsPath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getPluginsPath()"
          },
          "setMinimumLogicalFontSize": {
            "!type": "fn(size: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setMinimumLogicalFontSize(int)"
          },
          "getDefaultTextEncodingName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultTextEncodingName()"
          },
          "setLayoutAlgorithm": {
            "!type": "fn(l: +android.webkit.WebSettings.LayoutAlgorithm) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)"
          },
          "setMediaPlaybackRequiresUserGesture": {
            "!type": "fn(require: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setMediaPlaybackRequiresUserGesture(boolean)"
          },
          "setEnableSmoothTransition": {
            "!type": "fn(enable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setEnableSmoothTransition(boolean)"
          },
          "setBlockNetworkImage": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setBlockNetworkImage(boolean)"
          },
          "getStandardFontFamily": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getStandardFontFamily()"
          },
          "getDefaultFontSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultFontSize()"
          },
          "setSerifFontFamily": {
            "!type": "fn(font: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setSerifFontFamily(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getBlockNetworkLoads": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getBlockNetworkLoads()"
          },
          "setJavaScriptCanOpenWindowsAutomatically": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setJavaScriptCanOpenWindowsAutomatically(boolean)"
          },
          "getFantasyFontFamily": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getFantasyFontFamily()"
          },
          "supportZoom": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#supportZoom()"
          },
          "getLayoutAlgorithm": {
            "!type": "fn() -> +android.webkit.WebSettings.LayoutAlgorithm",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getLayoutAlgorithm()"
          },
          "setUseWebViewBackgroundForOverscrollBackground": {
            "!type": "fn(view: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setUseWebViewBackgroundForOverscrollBackground(boolean)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDisplayZoomControls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDisplayZoomControls()"
          },
          "setBuiltInZoomControls": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setBuiltInZoomControls(boolean)"
          },
          "getSerifFontFamily": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getSerifFontFamily()"
          },
          "getBlockNetworkImage": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getBlockNetworkImage()"
          },
          "getSavePassword": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getSavePassword()"
          },
          "setVideoOverlayForEmbeddedEncryptedVideoEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setVideoOverlayForEmbeddedEncryptedVideoEnabled(boolean)"
          },
          "setTextZoom": {
            "!type": "fn(textZoom: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setTextZoom(int)"
          },
          "getLoadWithOverviewMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getLoadWithOverviewMode()"
          },
          "setOffscreenPreRaster": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setOffscreenPreRaster(boolean)"
          },
          "setDomStorageEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDomStorageEnabled(boolean)"
          },
          "setDefaultFixedFontSize": {
            "!type": "fn(size: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultFixedFontSize(int)"
          },
          "setLoadWithOverviewMode": {
            "!type": "fn(overview: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setLoadWithOverviewMode(boolean)"
          },
          "getUseWebViewBackgroundForOverscrollBackground": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getUseWebViewBackgroundForOverscrollBackground()"
          },
          "getDomStorageEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDomStorageEnabled()"
          },
          "getAcceptThirdPartyCookies": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getAcceptThirdPartyCookies()"
          },
          "setMinimumFontSize": {
            "!type": "fn(size: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setMinimumFontSize(int)"
          },
          "setAppCacheEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCacheEnabled(boolean)"
          },
          "getDefaultFixedFontSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultFixedFontSize()"
          },
          "setAllowContentAccess": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowContentAccess(boolean)"
          },
          "setSavePassword": {
            "!type": "fn(save: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setSavePassword(boolean)"
          },
          "setLoadsImagesAutomatically": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setLoadsImagesAutomatically(boolean)"
          },
          "setFixedFontFamily": {
            "!type": "fn(font: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setFixedFontFamily(java.lang.String)"
          },
          "getLoadsImagesAutomatically": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getLoadsImagesAutomatically()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "setCacheMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setCacheMode(int)"
          },
          "setSansSerifFontFamily": {
            "!type": "fn(font: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setSansSerifFontFamily(java.lang.String)"
          },
          "getMinimumFontSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getMinimumFontSize()"
          },
          "getVideoOverlayForEmbeddedEncryptedVideoEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getVideoOverlayForEmbeddedEncryptedVideoEnabled()"
          },
          "setAppCachePath": {
            "!type": "fn(appCachePath: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCachePath(java.lang.String)"
          },
          "getNavDump": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getNavDump()"
          },
          "setCursiveFontFamily": {
            "!type": "fn(font: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setCursiveFontFamily(java.lang.String)"
          },
          "setTextSize": {
            "!type": "fn(t: +android.webkit.WebSettings.TextSize) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setTextSize(android.webkit.WebSettings.TextSize)"
          },
          "getTextZoom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getTextZoom()"
          },
          "getFixedFontFamily": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getFixedFontFamily()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setStandardFontFamily": {
            "!type": "fn(font: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setStandardFontFamily(java.lang.String)"
          },
          "setMixedContentMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setMixedContentMode(int)"
          },
          "getAllowUniversalAccessFromFileURLs": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowUniversalAccessFromFileURLs()"
          },
          "getCacheMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getCacheMode()"
          },
          "setUserAgent": {
            "!type": "fn(ua: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setUserAgent(int)"
          },
          "getBuiltInZoomControls": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getBuiltInZoomControls()"
          },
          "getMixedContentMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getMixedContentMode()"
          },
          "setLightTouchEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setLightTouchEnabled(boolean)"
          },
          "getCursiveFontFamily": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getCursiveFontFamily()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setGeolocationDatabasePath": {
            "!type": "fn(databasePath: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setGeolocationDatabasePath(java.lang.String)"
          },
          "setDefaultTextEncodingName": {
            "!type": "fn(encoding: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultTextEncodingName(java.lang.String)"
          },
          "setAllowUniversalAccessFromFileURLs": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowUniversalAccessFromFileURLs(boolean)"
          },
          "getUserAgent": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getUserAgent()"
          },
          "setDefaultZoom": {
            "!type": "fn(zoom: +android.webkit.WebSettings.ZoomDensity) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultZoom(android.webkit.WebSettings.ZoomDensity)"
          },
          "setSupportZoom": {
            "!type": "fn(support: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setSupportZoom(boolean)"
          },
          "setJavaScriptEnabled": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setJavaScriptEnabled(boolean)"
          },
          "setRenderPriority": {
            "!type": "fn(priority: +android.webkit.WebSettings.RenderPriority) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#setRenderPriority(android.webkit.WebSettings.RenderPriority)"
          },
          "getMinimumLogicalFontSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#getMinimumLogicalFontSize()"
          },
          "supportMultipleWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebSettings.html#supportMultipleWindows()"
          }
        }
      },
      "WebChromeClient": {
        "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html",
        "!type": "fn()",
        "FileChooserParams": {
          "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html",
          "!type": "fn()",
          "MODE_OPEN_FOLDER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_OPEN_FOLDER"
          },
          "MODE_OPEN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_OPEN"
          },
          "MODE_SAVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_SAVE"
          },
          "MODE_OPEN_MULTIPLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#MODE_OPEN_MULTIPLE"
          },
          "parseResult": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#parseResult(int, android.content.Intent)"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getTitle": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getTitle()"
            },
            "createIntent": {
              "!type": "fn() -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#createIntent()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getMode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getMode()"
            },
            "getAcceptTypes": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getAcceptTypes()"
            },
            "isCaptureEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#isCaptureEnabled()"
            },
            "getFilenameHint": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.FileChooserParams.html#getFilenameHint()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "onJsBeforeUnload": {
            "!type": "fn(view: +android.webkit.WebView, url: string, message: string, result: +android.webkit.JsResult) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onJsBeforeUnload(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "onReachedMaxAppCacheSize": {
            "!type": "fn(requiredStorage: +java.lang.Long, quota: +java.lang.Long, quotaUpdater: +android.webkit.WebStorage.QuotaUpdater) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onReachedMaxAppCacheSize(long, long, android.webkit.WebStorage.QuotaUpdater)"
          },
          "onCloseWindow": {
            "!type": "fn(window: +android.webkit.WebView) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onCloseWindow(android.webkit.WebView)"
          },
          "onPermissionRequestCanceled": {
            "!type": "fn(request: +android.webkit.PermissionRequest) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onPermissionRequestCanceled(android.webkit.PermissionRequest)"
          },
          "onProgressChanged": {
            "!type": "fn(view: +android.webkit.WebView, newProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onProgressChanged(android.webkit.WebView, int)"
          },
          "onJsConfirm": {
            "!type": "fn(view: +android.webkit.WebView, url: string, message: string, result: +android.webkit.JsResult) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onJsConfirm(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)"
          },
          "getVideoLoadingProgressView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#getVideoLoadingProgressView()"
          },
          "onGeolocationPermissionsShowPrompt": {
            "!type": "fn(origin: string, callback: +android.webkit.GeolocationPermissions.Callback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onGeolocationPermissionsShowPrompt(java.lang.String, android.webkit.GeolocationPermissions.Callback)"
          },
          "onJsTimeout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onJsTimeout()"
          },
          "setupAutoFill": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#setupAutoFill(android.os.Message)"
          },
          "onPermissionRequest": {
            "!type": "fn(request: +android.webkit.PermissionRequest) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onPermissionRequest(android.webkit.PermissionRequest)"
          },
          "onJsPrompt": {
            "!type": "fn(view: +android.webkit.WebView, url: string, message: string, defaultValue: string, result: +android.webkit.JsPromptResult) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onJsPrompt(android.webkit.WebView, java.lang.String, java.lang.String, java.lang.String, android.webkit.JsPromptResult)"
          },
          "onShowFileChooser": {
            "!type": "fn(webView: +android.webkit.WebView, filePathCallback: +android.webkit.ValueCallback, fileChooserParams: +android.webkit.WebChromeClient.FileChooserParams) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onShowFileChooser(android.webkit.WebView, android.webkit.ValueCallback, android.webkit.WebChromeClient.FileChooserParams)"
          },
          "onReceivedTitle": {
            "!type": "fn(view: +android.webkit.WebView, title: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onReceivedTitle(android.webkit.WebView, java.lang.String)"
          },
          "getDefaultVideoPoster": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#getDefaultVideoPoster()"
          },
          "onReceivedIcon": {
            "!type": "fn(view: +android.webkit.WebView, icon: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onReceivedIcon(android.webkit.WebView, android.graphics.Bitmap)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onGeolocationPermissionsHidePrompt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onGeolocationPermissionsHidePrompt()"
          },
          "onCreateWindow": {
            "!type": "fn(view: +android.webkit.WebView, isDialog: bool, isUserGesture: bool, resultMsg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onCreateWindow(android.webkit.WebView, boolean, boolean, android.os.Message)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onShowCustomView": {
            "!type": "fn(view: +android.view.View, callback: +android.webkit.WebChromeClient.CustomViewCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onShowCustomView(android.view.View, android.webkit.WebChromeClient.CustomViewCallback)"
          },
          "onRequestFocus": {
            "!type": "fn(view: +android.webkit.WebView) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onRequestFocus(android.webkit.WebView)"
          },
          "onHideCustomView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onHideCustomView()"
          },
          "onJsAlert": {
            "!type": "fn(view: +android.webkit.WebView, url: string, message: string, result: +android.webkit.JsResult) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onJsAlert(android.webkit.WebView, java.lang.String, java.lang.String, android.webkit.JsResult)"
          },
          "openFileChooser": {
            "!type": "fn(uploadFile: +android.webkit.ValueCallback, acceptType: string, capture: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#openFileChooser(android.webkit.ValueCallback, java.lang.String, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onReceivedTouchIconUrl": {
            "!type": "fn(view: +android.webkit.WebView, url: string, precomposed: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onReceivedTouchIconUrl(android.webkit.WebView, java.lang.String, boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getVisitedHistory": {
            "!type": "fn(callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#getVisitedHistory(android.webkit.ValueCallback)"
          },
          "onExceededDatabaseQuota": {
            "!type": "fn(url: string, databaseIdentifier: string, quota: +java.lang.Long, estimatedDatabaseSize: +java.lang.Long, totalQuota: +java.lang.Long, quotaUpdater: +android.webkit.WebStorage.QuotaUpdater) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onExceededDatabaseQuota(java.lang.String, java.lang.String, long, long, long, android.webkit.WebStorage.QuotaUpdater)"
          },
          "onConsoleMessage": {
            "!type": "fn(message: string, lineNumber: number, sourceID: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebChromeClient.html#onConsoleMessage(java.lang.String, int, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "WebViewFactory": {
        "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html",
        "!type": "fn()",
        "LIBLOAD_FAILED_TO_LOAD_LIBRARY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_FAILED_TO_LOAD_LIBRARY"
        },
        "LIBLOAD_FAILED_LISTING_WEBVIEW_PACKAGES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_FAILED_LISTING_WEBVIEW_PACKAGES"
        },
        "LIBLOAD_ADDRESS_SPACE_NOT_RESERVED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_ADDRESS_SPACE_NOT_RESERVED"
        },
        "LIBLOAD_FAILED_WAITING_FOR_RELRO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_FAILED_WAITING_FOR_RELRO"
        },
        "LIBLOAD_FAILED_JNI_CALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_FAILED_JNI_CALL"
        },
        "LIBLOAD_SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_SUCCESS"
        },
        "LIBLOAD_FAILED_TO_OPEN_RELRO_FILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_FAILED_TO_OPEN_RELRO_FILE"
        },
        "LIBLOAD_WRONG_PACKAGE_NAME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#LIBLOAD_WRONG_PACKAGE_NAME"
        },
        "CHROMIUM_WEBVIEW_VMSIZE_SIZE_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#CHROMIUM_WEBVIEW_VMSIZE_SIZE_PROPERTY"
        },
        "onWebViewUpdateInstalled": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#onWebViewUpdateInstalled()"
        },
        "loadWebViewNativeLibraryFromPackage": {
          "!type": "fn(packageName: string) -> number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#loadWebViewNativeLibraryFromPackage(java.lang.String)"
        },
        "prepareWebViewInSystemServer": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#prepareWebViewInSystemServer()"
        },
        "prepareWebViewInZygote": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#prepareWebViewInZygote()"
        },
        "getLoadedPackageInfo": {
          "!type": "fn() -> +android.content.pm.PackageInfo",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#getLoadedPackageInfo()"
        },
        "getWebViewPackageName": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewFactory.html#getWebViewPackageName()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "WebViewDelegate": {
        "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html",
        "prototype": {
          "isTraceTagEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#isTraceTagEnabled()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "callDrawGlFunction": {
            "!type": "fn(canvas: +android.graphics.Canvas, nativeDrawGLFunctor: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#callDrawGlFunction(android.graphics.Canvas, long)"
          },
          "invokeDrawGlFunctor": {
            "!type": "fn(containerView: +android.view.View, nativeDrawGLFunctor: +java.lang.Long, waitForCompletion: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#invokeDrawGlFunctor(android.view.View, long, boolean)"
          },
          "canInvokeDrawGlFunctor": {
            "!type": "fn(containerView: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#canInvokeDrawGlFunctor(android.view.View)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getErrorString": {
            "!type": "fn(context: +android.content.Context, errorCode: number) -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#getErrorString(android.content.Context, int)"
          },
          "setOnTraceEnabledChangeListener": {
            "!type": "fn(listener: +android.webkit.WebViewDelegate.OnTraceEnabledChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#setOnTraceEnabledChangeListener(android.webkit.WebViewDelegate.OnTraceEnabledChangeListener)"
          },
          "detachDrawGlFunctor": {
            "!type": "fn(containerView: +android.view.View, nativeDrawGLFunctor: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#detachDrawGlFunctor(android.view.View, long)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "addWebViewAssetPath": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#addWebViewAssetPath(android.content.Context)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#getApplication()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getPackageId": {
            "!type": "fn(resources: +android.content.res.Resources, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDelegate.html#getPackageId(android.content.res.Resources, java.lang.String)"
          }
        }
      },
      "ConsoleMessage": {
        "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.html",
        "!type": "fn(message: string, sourceId: string, lineNumber: number, msgLevel: +android.webkit.ConsoleMessage.MessageLevel)",
        "MessageLevel": {
          "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html",
          "WARNING": {
            "!type": "+android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#WARNING"
          },
          "DEBUG": {
            "!type": "+android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#DEBUG"
          },
          "LOG": {
            "!type": "+android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#LOG"
          },
          "ERROR": {
            "!type": "+android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#ERROR"
          },
          "TIP": {
            "!type": "+android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#TIP"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.MessageLevel.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "lineNumber": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.html#lineNumber()"
          },
          "messageLevel": {
            "!type": "fn() -> +android.webkit.ConsoleMessage.MessageLevel",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.html#messageLevel()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "sourceId": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.html#sourceId()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "message": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/ConsoleMessage.html#message()"
          }
        }
      },
      "CookieSyncManager": {
        "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html",
        "createInstance": {
          "!type": "fn(context: +android.content.Context) -> +android.webkit.CookieSyncManager",
          "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html#createInstance(android.content.Context)"
        },
        "getInstance": {
          "!type": "fn() -> +android.webkit.CookieSyncManager",
          "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html#getInstance()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "run": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebSyncManager.html#run()"
          },
          "resetSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html#resetSync()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "stopSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html#stopSync()"
          },
          "startSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html#startSync()"
          },
          "sync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieSyncManager.html#sync()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "WebViewClient": {
        "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html",
        "!type": "fn()",
        "ERROR_UNSUPPORTED_SCHEME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_UNSUPPORTED_SCHEME"
        },
        "ERROR_BAD_URL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_BAD_URL"
        },
        "ERROR_UNSUPPORTED_AUTH_SCHEME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_UNSUPPORTED_AUTH_SCHEME"
        },
        "ERROR_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_UNKNOWN"
        },
        "ERROR_AUTHENTICATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_AUTHENTICATION"
        },
        "ERROR_FILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_FILE"
        },
        "ERROR_REDIRECT_LOOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_REDIRECT_LOOP"
        },
        "ERROR_FILE_NOT_FOUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_FILE_NOT_FOUND"
        },
        "ERROR_HOST_LOOKUP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_HOST_LOOKUP"
        },
        "ERROR_TIMEOUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_TIMEOUT"
        },
        "ERROR_PROXY_AUTHENTICATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_PROXY_AUTHENTICATION"
        },
        "ERROR_TOO_MANY_REQUESTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_TOO_MANY_REQUESTS"
        },
        "ERROR_FAILED_SSL_HANDSHAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_FAILED_SSL_HANDSHAKE"
        },
        "ERROR_IO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_IO"
        },
        "ERROR_CONNECT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#ERROR_CONNECT"
        },
        "prototype": {
          "onPageStarted": {
            "!type": "fn(view: +android.webkit.WebView, url: string, favicon: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onPageStarted(android.webkit.WebView, java.lang.String, android.graphics.Bitmap)"
          },
          "onUnhandledInputEvent": {
            "!type": "fn(view: +android.webkit.WebView, event: +android.view.InputEvent) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onUnhandledInputEvent(android.webkit.WebView, android.view.InputEvent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "onReceivedError": {
            "!type": "fn(view: +android.webkit.WebView, errorCode: number, description: string, failingUrl: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onReceivedError(android.webkit.WebView, int, java.lang.String, java.lang.String)"
          },
          "shouldInterceptRequest": {
            "!type": "fn(view: +android.webkit.WebView, url: string) -> +android.webkit.WebResourceResponse",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#shouldInterceptRequest(android.webkit.WebView, java.lang.String)"
          },
          "shouldOverrideKeyEvent": {
            "!type": "fn(view: +android.webkit.WebView, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideKeyEvent(android.webkit.WebView, android.view.KeyEvent)"
          },
          "onTooManyRedirects": {
            "!type": "fn(view: +android.webkit.WebView, cancelMsg: +android.os.Message, continueMsg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onTooManyRedirects(android.webkit.WebView, android.os.Message, android.os.Message)"
          },
          "onReceivedSslError": {
            "!type": "fn(view: +android.webkit.WebView, handler: +android.webkit.SslErrorHandler, error: +android.net.http.SslError) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onReceivedSslError(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)"
          },
          "onPageFinished": {
            "!type": "fn(view: +android.webkit.WebView, url: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onPageFinished(android.webkit.WebView, java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onReceivedLoginRequest": {
            "!type": "fn(view: +android.webkit.WebView, realm: string, account: string, args: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onReceivedLoginRequest(android.webkit.WebView, java.lang.String, java.lang.String, java.lang.String)"
          },
          "onLoadResource": {
            "!type": "fn(view: +android.webkit.WebView, url: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onLoadResource(android.webkit.WebView, java.lang.String)"
          },
          "onScaleChanged": {
            "!type": "fn(view: +android.webkit.WebView, oldScale: +java.lang.Float, newScale: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onScaleChanged(android.webkit.WebView, float, float)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onPageCommitVisible": {
            "!type": "fn(view: +android.webkit.WebView, url: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onPageCommitVisible(android.webkit.WebView, java.lang.String)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "doUpdateVisitedHistory": {
            "!type": "fn(view: +android.webkit.WebView, url: string, isReload: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#doUpdateVisitedHistory(android.webkit.WebView, java.lang.String, boolean)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onReceivedHttpAuthRequest": {
            "!type": "fn(view: +android.webkit.WebView, handler: +android.webkit.HttpAuthHandler, host: string, realm: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onReceivedHttpAuthRequest(android.webkit.WebView, android.webkit.HttpAuthHandler, java.lang.String, java.lang.String)"
          },
          "onFormResubmission": {
            "!type": "fn(view: +android.webkit.WebView, dontResend: +android.os.Message, resend: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onFormResubmission(android.webkit.WebView, android.os.Message, android.os.Message)"
          },
          "onReceivedClientCertRequest": {
            "!type": "fn(view: +android.webkit.WebView, request: +android.webkit.ClientCertRequest) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onReceivedClientCertRequest(android.webkit.WebView, android.webkit.ClientCertRequest)"
          },
          "onReceivedHttpError": {
            "!type": "fn(view: +android.webkit.WebView, request: +android.webkit.WebResourceRequest, errorResponse: +android.webkit.WebResourceResponse) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onReceivedHttpError(android.webkit.WebView, android.webkit.WebResourceRequest, android.webkit.WebResourceResponse)"
          },
          "shouldOverrideUrlLoading": {
            "!type": "fn(view: +android.webkit.WebView, url: string) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onUnhandledKeyEvent": {
            "!type": "fn(view: +android.webkit.WebView, event: +android.view.KeyEvent) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewClient.html#onUnhandledKeyEvent(android.webkit.WebView, android.view.KeyEvent)"
          }
        }
      },
      "WebIconDatabase": {
        "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html",
        "!type": "fn()",
        "getInstance": {
          "!type": "fn() -> +android.webkit.WebIconDatabase",
          "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#getInstance()"
        },
        "prototype": {
          "releaseIconForPageUrl": {
            "!type": "fn(url: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#releaseIconForPageUrl(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "removeAllIcons": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#removeAllIcons()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "open": {
            "!type": "fn(path: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#open(java.lang.String)"
          },
          "bulkRequestIconForPageUrl": {
            "!type": "fn(cr: +android.content.ContentResolver, where: string, listener: +android.webkit.WebIconDatabase.IconListener) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#bulkRequestIconForPageUrl(android.content.ContentResolver, java.lang.String, android.webkit.WebIconDatabase.IconListener)"
          },
          "requestIconForPageUrl": {
            "!type": "fn(url: string, listener: +android.webkit.WebIconDatabase.IconListener) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#requestIconForPageUrl(java.lang.String, android.webkit.WebIconDatabase.IconListener)"
          },
          "retainIconForPageUrl": {
            "!type": "fn(url: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#retainIconForPageUrl(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebIconDatabase.html#close()"
          }
        }
      },
      "WebStorage": {
        "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html",
        "!type": "fn()",
        "Origin": {
          "!url": "http://developer.android.com/reference/android/webkit/WebStorage.Origin.html",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getUsage": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/webkit/WebStorage.Origin.html#getUsage()"
            },
            "getOrigin": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/WebStorage.Origin.html#getOrigin()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getQuota": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/webkit/WebStorage.Origin.html#getQuota()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "getInstance": {
          "!type": "fn() -> +android.webkit.WebStorage",
          "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#getInstance()"
        },
        "prototype": {
          "deleteOrigin": {
            "!type": "fn(origin: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#deleteOrigin(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setQuotaForOrigin": {
            "!type": "fn(origin: string, quota: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#setQuotaForOrigin(java.lang.String, long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getOrigins": {
            "!type": "fn(callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#getOrigins(android.webkit.ValueCallback)"
          },
          "getUsageForOrigin": {
            "!type": "fn(origin: string, callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#getUsageForOrigin(java.lang.String, android.webkit.ValueCallback)"
          },
          "deleteAllData": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#deleteAllData()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getQuotaForOrigin": {
            "!type": "fn(origin: string, callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebStorage.html#getQuotaForOrigin(java.lang.String, android.webkit.ValueCallback)"
          }
        }
      },
      "PluginList": {
        "!url": "http://developer.android.com/reference/android/webkit/PluginList.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/PluginList.html#clear()"
          },
          "removePlugin": {
            "!type": "fn(plugin: +android.webkit.Plugin) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/PluginList.html#removePlugin(android.webkit.Plugin)"
          },
          "getList": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/webkit/PluginList.html#getList()"
          },
          "pluginClicked": {
            "!type": "fn(context: +android.content.Context, position: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/PluginList.html#pluginClicked(android.content.Context, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "addPlugin": {
            "!type": "fn(plugin: +android.webkit.Plugin) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/PluginList.html#addPlugin(android.webkit.Plugin)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Plugin": {
        "!url": "http://developer.android.com/reference/android/webkit/Plugin.html",
        "!type": "fn(name: string, path: string, fileName: string, description: string)",
        "prototype": {
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#getName()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setClickHandler": {
            "!type": "fn(handler: +android.webkit.Plugin.PreferencesClickHandler) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#setClickHandler(android.webkit.Plugin.PreferencesClickHandler)"
          },
          "setPath": {
            "!type": "fn(path: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#setPath(java.lang.String)"
          },
          "setDescription": {
            "!type": "fn(description: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#setDescription(java.lang.String)"
          },
          "setName": {
            "!type": "fn(name: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#setName(java.lang.String)"
          },
          "getDescription": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#getDescription()"
          },
          "setFileName": {
            "!type": "fn(fileName: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#setFileName(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "dispatchClickEvent": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#dispatchClickEvent(android.content.Context)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getFileName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#getFileName()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getPath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/Plugin.html#getPath()"
          }
        }
      },
      "WebResourceError": {
        "!url": "http://developer.android.com/reference/android/webkit/WebResourceError.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getErrorCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceError.html#getErrorCode()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceError.html#getDescription()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DateSorter": {
        "!url": "http://developer.android.com/reference/android/webkit/DateSorter.html",
        "!type": "fn(context: +android.content.Context)",
        "DAY_COUNT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/DateSorter.html#DAY_COUNT"
        },
        "prototype": {
          "getIndex": {
            "!type": "fn(time: +java.lang.Long) -> number",
            "!url": "http://developer.android.com/reference/android/webkit/DateSorter.html#getIndex(long)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getLabel": {
            "!type": "fn(index: number) -> string",
            "!url": "http://developer.android.com/reference/android/webkit/DateSorter.html#getLabel(int)"
          },
          "getBoundary": {
            "!type": "fn(index: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/webkit/DateSorter.html#getBoundary(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "WebView": {
        "!url": "http://developer.android.com/reference/android/webkit/WebView.html",
        "!type": "fn(context: +android.content.Context)",
        "WebViewTransport": {
          "!url": "http://developer.android.com/reference/android/webkit/WebView.WebViewTransport.html",
          "!type": "fn()",
          "prototype": {
            "getWebView": {
              "!type": "fn() -> +android.webkit.WebView",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.WebViewTransport.html#getWebView()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setWebView": {
              "!type": "fn(webview: +android.webkit.WebView) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.WebViewTransport.html#setWebView(android.webkit.WebView)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "VisualStateCallback": {
          "!url": "http://developer.android.com/reference/android/webkit/WebView.VisualStateCallback.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "onComplete": {
              "!type": "fn(requestId: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.VisualStateCallback.html#onComplete(long)"
            }
          }
        },
        "HitTestResult": {
          "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html",
          "!type": "fn()",
          "EMAIL_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#EMAIL_TYPE"
          },
          "EDIT_TEXT_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#EDIT_TEXT_TYPE"
          },
          "GEO_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#GEO_TYPE"
          },
          "SRC_IMAGE_ANCHOR_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#SRC_IMAGE_ANCHOR_TYPE"
          },
          "ANCHOR_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#ANCHOR_TYPE"
          },
          "IMAGE_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#IMAGE_TYPE"
          },
          "UNKNOWN_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#UNKNOWN_TYPE"
          },
          "PHONE_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#PHONE_TYPE"
          },
          "IMAGE_ANCHOR_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#IMAGE_ANCHOR_TYPE"
          },
          "SRC_ANCHOR_TYPE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#SRC_ANCHOR_TYPE"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setType": {
              "!type": "fn(type: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#setType(int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getType": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#getType()"
            },
            "setExtra": {
              "!type": "fn(extra: string) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#setExtra(java.lang.String)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getExtra": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.HitTestResult.html#getExtra()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "PrivateAccess": {
          "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html",
          "!type": "fn()",
          "prototype": {
            "super_requestFocus": {
              "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_requestFocus(int, android.graphics.Rect)"
            },
            "super_dispatchKeyEvent": {
              "!type": "fn(event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_dispatchKeyEvent(android.view.KeyEvent)"
            },
            "super_performAccessibilityAction": {
              "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_performAccessibilityAction(int, android.os.Bundle)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "super_setLayoutParams": {
              "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_setLayoutParams(android.view.ViewGroup.LayoutParams)"
            },
            "awakenScrollBars": {
              "!type": "fn(duration: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#awakenScrollBars(int)"
            },
            "super_onHoverEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_onHoverEvent(android.view.MotionEvent)"
            },
            "super_setFrame": {
              "!type": "fn(left: number, top: number, right: number, bottom: number) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_setFrame(int, int, int, int)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getHorizontalScrollFactor": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#getHorizontalScrollFactor()"
            },
            "overScrollBy": {
              "!type": "fn(deltaX: number, deltaY: number, scrollX: number, scrollY: number, scrollRangeX: number, scrollRangeY: number, maxOverScrollX: number, maxOverScrollY: number, isTouchEvent: bool) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#overScrollBy(int, int, int, int, int, int, int, int, boolean)"
            },
            "super_onDrawVerticalScrollBar": {
              "!type": "fn(canvas: +android.graphics.Canvas, scrollBar: +android.graphics.drawable.Drawable, l: number, t: number, r: number, b: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_onDrawVerticalScrollBar(android.graphics.Canvas, android.graphics.drawable.Drawable, int, int, int, int)"
            },
            "super_getScrollBarStyle": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_getScrollBarStyle()"
            },
            "super_scrollTo": {
              "!type": "fn(scrollX: number, scrollY: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_scrollTo(int, int)"
            },
            "setMeasuredDimension": {
              "!type": "fn(measuredWidth: number, measuredHeight: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#setMeasuredDimension(int, int)"
            },
            "setScrollXRaw": {
              "!type": "fn(scrollX: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#setScrollXRaw(int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getVerticalScrollFactor": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#getVerticalScrollFactor()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getHorizontalScrollbarHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#getHorizontalScrollbarHeight()"
            },
            "super_onGenericMotionEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_onGenericMotionEvent(android.view.MotionEvent)"
            },
            "setScrollYRaw": {
              "!type": "fn(scrollY: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#setScrollYRaw(int)"
            },
            "super_performLongClick": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_performLongClick()"
            },
            "super_computeScroll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#super_computeScroll()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "onScrollChanged": {
              "!type": "fn(l: number, t: number, oldl: number, oldt: number) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebView.PrivateAccess.html#onScrollChanged(int, int, int, int)"
            }
          }
        },
        "OVER_SCROLL_ALWAYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
        },
        "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
        },
        "LAYOUT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
        },
        "ACCESSIBILITY_LIVE_REGION_POLITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
        },
        "SCROLL_INDICATOR_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
        },
        "TEXT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
        },
        "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
        },
        "LAYOUT_MODE_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_DEFAULT"
        },
        "ROTATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
        },
        "ROTATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
        },
        "STATUS_BAR_HIDDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
        },
        "SCROLL_AXIS_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
        },
        "TEXT_ALIGNMENT_VIEW_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
        },
        "TRANSLATION_Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
        },
        "FOCUS_BLOCK_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BLOCK_DESCENDANTS"
        },
        "TRANSLATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
        },
        "INVISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
        },
        "TRANSLATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
        },
        "SCROLL_INDICATOR_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
        },
        "NO_ID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
        },
        "LAYOUT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
        },
        "SOUND_EFFECTS_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
        },
        "TEXT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
        },
        "ALPHA": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
        },
        "SCHEME_GEO": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#SCHEME_GEO"
        },
        "LAYER_TYPE_HARDWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
        },
        "TEXT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
        },
        "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
        },
        "DRAWING_CACHE_QUALITY_HIGH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
        },
        "FOCUS_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
        },
        "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
        },
        "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
        },
        "LAYER_TYPE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
        },
        "TEXT_ALIGNMENT_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
        },
        "STATUS_BAR_DISABLE_BACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
        },
        "PERSISTENT_ALL_CACHES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ALL_CACHES"
        },
        "FOCUSABLES_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
        },
        "SCROLL_AXIS_VERTICAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
        },
        "STATUS_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
        },
        "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
        },
        "DEBUG_DRAW": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#DEBUG_DRAW"
        },
        "SCALE_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
        },
        "SCALE_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
        },
        "SCROLLBAR_POSITION_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
        },
        "STATUS_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
        },
        "LAYOUT_MODE_OPTICAL_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_OPTICAL_BOUNDS"
        },
        "LAYOUT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
        },
        "NAVIGATION_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
        },
        "GONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
        },
        "SCROLLBARS_INSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
        },
        "FOCUS_BACKWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
        },
        "FOCUS_AFTER_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_AFTER_DESCENDANTS"
        },
        "STATUS_BAR_DISABLE_SEARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
        },
        "STATUS_BAR_DISABLE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
        },
        "FOCUSABLES_TOUCH_MODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
        },
        "SYSTEM_UI_LAYOUT_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
        },
        "HAPTIC_FEEDBACK_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
        },
        "STATUS_BAR_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
        },
        "FOCUS_FORWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
        },
        "LAYOUT_MODE_CLIP_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_CLIP_BOUNDS"
        },
        "DRAG_FLAG_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
        },
        "SYSTEM_UI_FLAG_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
        },
        "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
        },
        "STATUS_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
        },
        "MEASURED_STATE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
        },
        "ACCESSIBILITY_LIVE_REGION_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
        },
        "SCROLLBARS_OUTSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
        },
        "TEXT_ALIGNMENT_GRAVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
        },
        "DRAWING_CACHE_QUALITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
        },
        "TEXT_ALIGNMENT_VIEW_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
        },
        "Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Z"
        },
        "Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Y"
        },
        "X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#X"
        },
        "SCROLL_INDICATOR_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
        },
        "VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
        },
        "TEXT_ALIGNMENT_TEXT_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
        },
        "SCROLL_AXIS_HORIZONTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
        },
        "OVER_SCROLL_IF_CONTENT_SCROLLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
        },
        "FOCUS_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
        },
        "OVER_SCROLL_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
        },
        "TEXT_DIRECTION_FIRST_STRONG_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
        },
        "SCROLL_INDICATOR_BOTTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
        },
        "NAVIGATION_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
        },
        "SYSTEM_UI_TRANSPARENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
        },
        "SCREEN_STATE_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
        },
        "PERSISTENT_ANIMATION_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ANIMATION_CACHE"
        },
        "TEXT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_YES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
        },
        "SCROLLBARS_INSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
        },
        "ROTATION": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
        },
        "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
        },
        "SCROLL_INDICATOR_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
        },
        "NAVIGATION_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
        },
        "MEASURED_HEIGHT_STATE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
        },
        "TEXT_DIRECTION_FIRST_STRONG_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
        },
        "KEEP_SCREEN_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
        },
        "TEXT_DIRECTION_FIRST_STRONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
        },
        "STATUS_BAR_DISABLE_CLOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
        },
        "STATUS_BAR_DISABLE_EXPAND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
        },
        "FOCUS_BEFORE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BEFORE_DESCENDANTS"
        },
        "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
        },
        "SCHEME_TEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#SCHEME_TEL"
        },
        "SCREEN_STATE_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
        },
        "TEXT_ALIGNMENT_TEXT_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
        },
        "SYSTEM_UI_FLAG_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
        },
        "FIND_VIEWS_WITH_TEXT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
        },
        "PERSISTENT_NO_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_NO_CACHE"
        },
        "STATUS_BAR_DISABLE_RECENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
        },
        "STATUS_BAR_DISABLE_SYSTEM_INFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
        },
        "DRAWING_CACHE_QUALITY_LOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
        },
        "PERSISTENT_SCROLLING_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_SCROLLING_CACHE"
        },
        "SCHEME_MAILTO": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#SCHEME_MAILTO"
        },
        "SCROLL_INDICATOR_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
        },
        "MEASURED_STATE_TOO_SMALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
        },
        "TEXT_ALIGNMENT_CENTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
        },
        "SCROLLBARS_OUTSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
        },
        "TEXT_DIRECTION_ANY_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
        },
        "LAYER_TYPE_SOFTWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
        },
        "MEASURED_SIZE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
        },
        "mDebugViewAttributes": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
        },
        "SCROLLBAR_POSITION_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
        },
        "LAYOUT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
        },
        "LAYOUT_DIRECTION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
        },
        "SCROLLBAR_POSITION_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
        },
        "RECENT_APPS_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
        },
        "DEBUG_LAYOUT_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
        },
        "SYSTEM_UI_CLEARABLE_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
        },
        "FOCUS_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
        },
        "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
        },
        "SYSTEM_UI_FLAG_LOW_PROFILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
        },
        "DATA_REDUCTION_PROXY_SETTING_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#DATA_REDUCTION_PROXY_SETTING_CHANGED"
        },
        "FOCUS_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
        },
        "enablePlatformNotifications": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#enablePlatformNotifications()"
        },
        "combineMeasuredStates": {
          "!type": "fn(curState: number, newState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
        },
        "enableSlowWholeDocumentDraw": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#enableSlowWholeDocumentDraw()"
        },
        "isLayoutModeOptical": {
          "!type": "fn(o: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
        },
        "findAddress": {
          "!type": "fn(addr: string) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#findAddress(java.lang.String)"
        },
        "disablePlatformNotifications": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#disablePlatformNotifications()"
        },
        "getPluginList": {
          "!type": "fn() -> +android.webkit.PluginList",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getPluginList()"
        },
        "freeMemoryForTests": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#freeMemoryForTests()"
        },
        "resolveSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
        },
        "generateViewId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
        },
        "getChildMeasureSpec": {
          "!type": "fn(spec: number, padding: number, childDimension: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildMeasureSpec(int, int, int)"
        },
        "inflate": {
          "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
          "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
        },
        "resolveSizeAndState": {
          "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
        },
        "getDefaultSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
        },
        "clearClientCertPreferences": {
          "!type": "fn(onCleared: +java.lang.Runnable) -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearClientCertPreferences(java.lang.Runnable)"
        },
        "setWebContentsDebuggingEnabled": {
          "!type": "fn(enabled: bool) -> void",
          "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setWebContentsDebuggingEnabled(boolean)"
        },
        "prototype": {
          "setFitsSystemWindows": {
            "!type": "fn(fitSystemWindows: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
          },
          "dispatchSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSystemUiVisibilityChanged(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "isScrollbarFadingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
          },
          "canGoBack": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#canGoBack()"
          },
          "setPressed": {
            "!type": "fn(pressed: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
          },
          "startAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
          },
          "getDrawingTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
          },
          "resumeTimers": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#resumeTimers()"
          },
          "setHorizontalScrollBarEnabled": {
            "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
          },
          "setTagInternal": {
            "!type": "fn(key: number, tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
          },
          "pauseTimers": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#pauseTimers()"
          },
          "getWebViewProvider": {
            "!type": "fn() -> +android.webkit.WebViewProvider",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getWebViewProvider()"
          },
          "removeCallbacks": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
          },
          "isShown": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onTouchEvent(android.view.MotionEvent)"
          },
          "cancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
          },
          "setTransitionVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
          },
          "getClipChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipChildren()"
          },
          "clearHistory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearHistory()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
          },
          "setVerticalScrollBarEnabled": {
            "!type": "fn(verticalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
          },
          "getRawLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
          },
          "setRight": {
            "!type": "fn(right: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
          },
          "pageDown": {
            "!type": "fn(bottom: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#pageDown(boolean)"
          },
          "getAccessibilityClassName": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getAccessibilityClassName()"
          },
          "getNextFocusDownId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
          },
          "canGoForward": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#canGoForward()"
          },
          "onRequestSendAccessibilityEventInternal": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEventInternal(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "getTransitionName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
          },
          "getTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
          },
          "dispatchNestedFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "setScrollContainer": {
            "!type": "fn(isScrollContainer: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
          },
          "getVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
          },
          "requestFitSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
          },
          "setAccessibilitySelection": {
            "!type": "fn(start: number, end: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
          },
          "getLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
          },
          "dispatchWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowFocusChanged(boolean)"
          },
          "findViewByPredicateInsideOut": {
            "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
          },
          "getForeground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
          },
          "requestChildRectangleOnScreen": {
            "!type": "fn(child: +android.view.View, rect: +android.graphics.Rect, immediate: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)"
          },
          "performAccessibilityActionInternal": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#performAccessibilityActionInternal(int, android.os.Bundle)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
          },
          "getClipToOutline": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
          },
          "isSelected": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
          },
          "scrollBy": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
          },
          "hasNestedScrollingParent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
          },
          "findHierarchyView": {
            "!type": "fn(className: string, hashCode: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#findHierarchyView(java.lang.String, int)"
          },
          "getGlobalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
          },
          "setKeepScreenOn": {
            "!type": "fn(keepScreenOn: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
          },
          "setTranslationZ": {
            "!type": "fn(translationZ: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
          },
          "setTranslationY": {
            "!type": "fn(translationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
          },
          "setTranslationX": {
            "!type": "fn(translationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
          },
          "setDuplicateParentStateEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
          },
          "onFilterTouchEventForSecurity": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
          },
          "clearView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearView()"
          },
          "setWebViewClient": {
            "!type": "fn(client: +android.webkit.WebViewClient) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setWebViewClient(android.webkit.WebViewClient)"
          },
          "setTop": {
            "!type": "fn(top: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
          },
          "getHardwareRenderer": {
            "!type": "fn() -> +android.view.HardwareRenderer",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
          },
          "onInterceptHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptHoverEvent(android.view.MotionEvent)"
          },
          "clearMatches": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearMatches()"
          },
          "getSettings": {
            "!type": "fn() -> +android.webkit.WebSettings",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getSettings()"
          },
          "getLocationInWindow": {
            "!type": "fn(location: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
          },
          "pointInView": {
            "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
          },
          "requestFocusNodeHref": {
            "!type": "fn(hrefMsg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#requestFocusNodeHref(android.os.Message)"
          },
          "setAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
          },
          "loadUrl": {
            "!type": "fn(url: string, additionalHttpHeaders: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#loadUrl(java.lang.String, java.util.Map)"
          },
          "setAnimationMatrix": {
            "!type": "fn(matrix: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
          },
          "getApplicationWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
          },
          "resetRtlProperties": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
          },
          "getDrawingCacheBackgroundColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
          },
          "getMeasuredHeightAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
          },
          "resolveRtlPropertiesIfNeeded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveRtlPropertiesIfNeeded()"
          },
          "transformMatrixToGlobal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
          },
          "goBack": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#goBack()"
          },
          "setClickable": {
            "!type": "fn(clickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
          },
          "offsetLeftAndRight": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
          },
          "getFilterTouchesWhenObscured": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
          },
          "setPictureListener": {
            "!type": "fn(listener: +android.webkit.WebView.PictureListener) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setPictureListener(android.webkit.WebView.PictureListener)"
          },
          "performAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
          },
          "isHorizontalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
          },
          "setBackgroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "createContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
          },
          "addJavascriptInterface": {
            "!type": "fn(object: +java.lang.Object, name: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)"
          },
          "getCameraDistance": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
          },
          "isPressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
          },
          "getScrollBarStyle": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
          },
          "setSoundEffectsEnabled": {
            "!type": "fn(soundEffectsEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
          },
          "canGoBackOrForward": {
            "!type": "fn(steps: number) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#canGoBackOrForward(int)"
          },
          "setLayoutMode": {
            "!type": "fn(layoutMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutMode(int)"
          },
          "setInitialScale": {
            "!type": "fn(scaleInPercent: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setInitialScale(int)"
          },
          "performHapticFeedback": {
            "!type": "fn(feedbackConstant: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "getLayoutMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutMode()"
          },
          "getWindowSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
          },
          "getPersistentDrawingCache": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getPersistentDrawingCache()"
          },
          "animate": {
            "!type": "fn() -> +android.view.ViewPropertyAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
          },
          "flingScroll": {
            "!type": "fn(vx: number, vy: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#flingScroll(int, int)"
          },
          "addView": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View)"
          },
          "getZoomControls": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getZoomControls()"
          },
          "getOnFocusChangeListener": {
            "!type": "fn() -> +android.view.View.OnFocusChangeListener",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
          },
          "isPaddingRelative": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
          },
          "hasOverlappingRendering": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
          },
          "setBottom": {
            "!type": "fn(bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
          },
          "isTextAlignmentInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
          },
          "onHoverChanged": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
          },
          "sendAccessibilityEventInternal": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventInternal(int)"
          },
          "canHaveDisplayList": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
          },
          "onResolveDrawables": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
          },
          "dispatchStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchStartTemporaryDetach()"
          },
          "setLongClickable": {
            "!type": "fn(longClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
          },
          "dispatchNestedScroll": {
            "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
          },
          "getScrollBarFadeDuration": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
          },
          "removeAllViewsInLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViewsInLayout()"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
          },
          "loadDataWithBaseURL": {
            "!type": "fn(baseUrl: string, data: string, mimeType: string, encoding: string, historyUrl: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#loadDataWithBaseURL(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
          },
          "setOnKeyListener": {
            "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
          },
          "sendAccessibilityEventUnchecked": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
          },
          "onCreateInputConnection": {
            "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
          },
          "performContextClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
          },
          "isHovered": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
          },
          "findAll": {
            "!type": "fn(find: string) -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#findAll(java.lang.String)"
          },
          "getScrollBarDefaultDelayBeforeFade": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
          },
          "setVerticalScrollbarPosition": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
          },
          "setVerticalFadingEdgeEnabled": {
            "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
          },
          "setVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVisibility(int)"
          },
          "suppressLayout": {
            "!type": "fn(suppress: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#suppressLayout(boolean)"
          },
          "restoreState": {
            "!type": "fn(inState: +android.os.Bundle) -> +android.webkit.WebBackForwardList",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#restoreState(android.os.Bundle)"
          },
          "postVisualStateCallback": {
            "!type": "fn(requestId: +java.lang.Long, callback: +android.webkit.WebView.VisualStateCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#postVisualStateCallback(long, android.webkit.WebView.VisualStateCallback)"
          },
          "getTranslationZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
          },
          "getKeepScreenOn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
          },
          "getAnimation": {
            "!type": "fn() -> +android.view.animation.Animation",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
          },
          "getTranslationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
          },
          "getTranslationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
          },
          "isPrivateBrowsingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#isPrivateBrowsingEnabled()"
          },
          "getHandler": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
          },
          "setForeground": {
            "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "dispatchWindowVisibilityChanged": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowVisibilityChanged(int)"
          },
          "setForegroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
          },
          "shouldDelayChildPressedState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#shouldDelayChildPressedState()"
          },
          "onInitializeAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "refreshPlugins": {
            "!type": "fn(reloadOpenPages: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#refreshPlugins(boolean)"
          },
          "postOnAnimationDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
          },
          "postInvalidateOnAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
          },
          "resetResolvedLayoutDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedLayoutDirection()"
          },
          "getInverseMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
          },
          "setSystemUiVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
          },
          "isScrollContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
          },
          "onNestedScrollAccepted": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, axes: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScrollAccepted(android.view.View, android.view.View, int)"
          },
          "getLabelFor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
          },
          "isSaveEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
          },
          "onNestedPreFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreFling(android.view.View, float, float)"
          },
          "setRotationY": {
            "!type": "fn(rotationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
          },
          "findViewWithTag": {
            "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
          },
          "setRotationX": {
            "!type": "fn(rotationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
          },
          "getOutlineProvider": {
            "!type": "fn() -> +android.view.ViewOutlineProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
          },
          "setDisabledSystemUiVisibility": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
          },
          "dispatchWindowSystemUiVisiblityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowSystemUiVisiblityChanged(int)"
          },
          "onStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onStartTemporaryDetach()"
          },
          "invalidate": {
            "!type": "fn(dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
          },
          "getForegroundGravity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
          },
          "toGlobalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "clearChildFocus": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearChildFocus(android.view.View)"
          },
          "setAccessibilityDelegate": {
            "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "hackTurnOffWindowResizeAnim": {
            "!type": "fn(off: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
          },
          "onDrawForeground": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
          },
          "setElevation": {
            "!type": "fn(elevation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
          },
          "onNestedScroll": {
            "!type": "fn(target: +android.view.View, dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScroll(android.view.View, int, int, int, int)"
          },
          "freeMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#freeMemory()"
          },
          "isMotionEventSplittingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isMotionEventSplittingEnabled()"
          },
          "notifyViewAccessibilityStateChangedIfNeeded": {
            "!type": "fn(changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
          },
          "getMeasuredWidthAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
          },
          "savePassword": {
            "!type": "fn(host: string, username: string, password: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#savePassword(java.lang.String, java.lang.String, java.lang.String)"
          },
          "setLeft": {
            "!type": "fn(left: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
          },
          "setDrawingCacheBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
          },
          "resolvePadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolvePadding()"
          },
          "isLaidOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
          },
          "setNetworkAvailable": {
            "!type": "fn(networkUp: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setNetworkAvailable(boolean)"
          },
          "outputDirtyFlags": {
            "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
          },
          "canZoomOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#canZoomOut()"
          },
          "hasFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocusable()"
          },
          "getWindowVisibleDisplayFrame": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
          },
          "onChildViewAdded": {
            "!type": "fn(parent: +android.view.View, child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onChildViewAdded(android.view.View, android.view.View)"
          },
          "setDrawingCacheQuality": {
            "!type": "fn(quality: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
          },
          "onFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onFinishTemporaryDetach()"
          },
          "isNestedScrollingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
          },
          "invokeZoomPicker": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#invokeZoomPicker()"
          },
          "getOpticalInsets": {
            "!type": "fn() -> +android.graphics.Insets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
          },
          "setOnFocusChangeListener": {
            "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
          },
          "setOnDragListener": {
            "!type": "fn(l: +android.view.View.OnDragListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
          },
          "cancelLongPress": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
          },
          "getMeasuredState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
          },
          "debugDump": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#debugDump()"
          },
          "setHorizontalFadingEdgeEnabled": {
            "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
          },
          "dispatchDrawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDrawableHotspotChanged(float, float)"
          },
          "dispatchSetSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetSelected(boolean)"
          },
          "onDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
          },
          "requestApplyInsets": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
          },
          "setScrollIndicators": {
            "!type": "fn(indicators: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
          },
          "onStopNestedScroll": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStopNestedScroll(android.view.View)"
          },
          "setScaleY": {
            "!type": "fn(scaleY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
          },
          "setScaleX": {
            "!type": "fn(scaleX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getChildCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildCount()"
          },
          "setNextFocusForwardId": {
            "!type": "fn(nextFocusForwardId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
          },
          "setAccessibilityTraversalBefore": {
            "!type": "fn(beforeId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
          },
          "findFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findFocus()"
          },
          "getTag": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
          },
          "setFocusable": {
            "!type": "fn(focusable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
          },
          "isVerticalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
          },
          "getNextFocusLeftId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
          },
          "onStartNestedScroll": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, nestedScrollAxes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)"
          },
          "isVerticalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "getProgress": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getProgress()"
          },
          "generateLayoutParams": {
            "!type": "fn(attrs: +android.util.AttributeSet) -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/widget/AbsoluteLayout.html#generateLayoutParams(android.util.AttributeSet)"
          },
          "setTransitionAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
          },
          "getMeasuredWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
          },
          "getLocationOnScreen": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
          },
          "encode": {
            "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
          },
          "getTransientView": {
            "!type": "fn(position: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientView(int)"
          },
          "addChildrenForAccessibility": {
            "!type": "fn(outChildren: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addChildrenForAccessibility(java.util.ArrayList)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
          },
          "isTextDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
          },
          "setRotation": {
            "!type": "fn(rotation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
          },
          "getTransientViewCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewCount()"
          },
          "resolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutDirection()"
          },
          "getPaddingRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
          },
          "getZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
          },
          "getNestedScrollAxes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getNestedScrollAxes()"
          },
          "getY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
          },
          "getX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
          },
          "getContentHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getContentHeight()"
          },
          "setPadding": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
          },
          "setLayoutAnimationListener": {
            "!type": "fn(animationListener: +android.view.animation.Animation.AnimationListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)"
          },
          "damageChildDeferred": {
            "!type": "fn(child: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChildDeferred(android.view.View)"
          },
          "setForegroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "getUrl": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getUrl()"
          },
          "gatherTransparentRegion": {
            "!type": "fn(region: +android.graphics.Region) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#gatherTransparentRegion(android.graphics.Region)"
          },
          "showContextMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
          },
          "isHorizontalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
          },
          "onCheckIsTextEditor": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
          },
          "setHorizontalScrollbarOverlay": {
            "!type": "fn(overlay: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setHorizontalScrollbarOverlay(boolean)"
          },
          "setLayoutTransition": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutTransition(android.animation.LayoutTransition)"
          },
          "setOnSystemUiVisibilityChangeListener": {
            "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
          },
          "getOriginalUrl": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getOriginalUrl()"
          },
          "setBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setBackgroundColor(int)"
          },
          "captureTransitioningViews": {
            "!type": "fn(transitioningViews: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#captureTransitioningViews(java.util.List)"
          },
          "setOnHierarchyChangeListener": {
            "!type": "fn(listener: +android.view.ViewGroup.OnHierarchyChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)"
          },
          "setNextFocusRightId": {
            "!type": "fn(nextFocusRightId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
          },
          "makeOptionalFitsSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#makeOptionalFitsSystemWindows()"
          },
          "onPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onPause()"
          },
          "setTag": {
            "!type": "fn(tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
          },
          "onInitializeAccessibilityNodeInfo": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "setVerticalScrollbarOverlay": {
            "!type": "fn(overlay: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setVerticalScrollbarOverlay(boolean)"
          },
          "willNotDraw": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
          },
          "setCameraDistance": {
            "!type": "fn(distance: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
          },
          "removeViewInLayout": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewInLayout(android.view.View)"
          },
          "setTransitionGroup": {
            "!type": "fn(isTransitionGroup: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTransitionGroup(boolean)"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
          },
          "postWebMessage": {
            "!type": "fn(message: +android.webkit.WebMessage, targetOrigin: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#postWebMessage(android.webkit.WebMessage, android.net.Uri)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "startActionModeForChild": {
            "!type": "fn(originalView: +android.view.View, callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startActionModeForChild(android.view.View, android.view.ActionMode.Callback)"
          },
          "getVisibleTitleHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getVisibleTitleHeight()"
          },
          "getPaddingEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
          },
          "getRootWindowInsets": {
            "!type": "fn() -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
          },
          "onNestedPreScroll": {
            "!type": "fn(target: +android.view.View, dx: number, dy: number, consumed: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreScroll(android.view.View, int, int, int[])"
          },
          "setContentDescription": {
            "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasWindowFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onWindowFocusChanged(boolean)"
          },
          "getRootView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
          },
          "getCertificate": {
            "!type": "fn() -> +android.net.http.SslCertificate",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getCertificate()"
          },
          "addOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "setMapTrackballToArrowKeys": {
            "!type": "fn(setMap: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setMapTrackballToArrowKeys(boolean)"
          },
          "getParentForAccessibility": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
          },
          "saveState": {
            "!type": "fn(outState: +android.os.Bundle) -> +android.webkit.WebBackForwardList",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#saveState(android.os.Bundle)"
          },
          "isDirty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
          },
          "requestDisallowInterceptTouchEvent": {
            "!type": "fn(disallowIntercept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
          },
          "focusSearch": {
            "!type": "fn(focused: +android.view.View, direction: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusSearch(android.view.View, int)"
          },
          "findNamedViews": {
            "!type": "fn(namedElements: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findNamedViews(java.util.Map)"
          },
          "post": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
          },
          "announceForAccessibility": {
            "!type": "fn(text: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
          },
          "getTouchscreenBlocksFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTouchscreenBlocksFocus()"
          },
          "getRawTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
          },
          "getHitTestResult": {
            "!type": "fn() -> +android.webkit.WebView.HitTestResult",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getHitTestResult()"
          },
          "zoomIn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#zoomIn()"
          },
          "canResolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
          },
          "setClipToOutline": {
            "!type": "fn(clipToOutline: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
          },
          "getFitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
          },
          "getRawTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
          },
          "getDescendantFocusability": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getDescendantFocusability()"
          },
          "createPrintDocumentAdapter": {
            "!type": "fn() -> +android.print.PrintDocumentAdapter",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#createPrintDocumentAdapter()"
          },
          "isAlwaysDrawnWithCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAlwaysDrawnWithCacheEnabled()"
          },
          "buildLayer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
          },
          "getOutsets": {
            "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
          },
          "setTransitionName": {
            "!type": "fn(transitionName: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
          },
          "getRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
          },
          "getNextFocusUpId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
          },
          "onWindowSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
          },
          "onScreenStateChanged": {
            "!type": "fn(screenState: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
          },
          "setZ": {
            "!type": "fn(z: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
          },
          "setY": {
            "!type": "fn(y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
          },
          "setX": {
            "!type": "fn(x: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
          },
          "getPaddingBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
          },
          "setPivotY": {
            "!type": "fn(pivotY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
          },
          "setPivotX": {
            "!type": "fn(pivotX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
          },
          "setFindListener": {
            "!type": "fn(listener: +android.webkit.WebView.FindListener) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setFindListener(android.webkit.WebView.FindListener)"
          },
          "canZoomIn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#canZoomIn()"
          },
          "loadData": {
            "!type": "fn(data: string, mimeType: string, encoding: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#loadData(java.lang.String, java.lang.String, java.lang.String)"
          },
          "setOnContextClickListener": {
            "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
          },
          "setScrollBarFadeDuration": {
            "!type": "fn(scrollBarFadeDuration: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
          },
          "setActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
          },
          "createWebMessageChannel": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#createWebMessageChannel()"
          },
          "getDrawingCacheQuality": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
          },
          "getBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
          },
          "setPersistentDrawingCache": {
            "!type": "fn(drawingCacheToKeep: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setPersistentDrawingCache(int)"
          },
          "includeForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
          },
          "startLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startLayoutAnimation()"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
          },
          "getLayoutAnimationListener": {
            "!type": "fn() -> +android.view.animation.Animation.AnimationListener",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimationListener()"
          },
          "resolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextDirection()"
          },
          "setOnApplyWindowInsetsListener": {
            "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
          },
          "capturePicture": {
            "!type": "fn() -> +android.graphics.Picture",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#capturePicture()"
          },
          "setStateListAnimator": {
            "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
          },
          "canScrollVertically": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
          },
          "setContextClickable": {
            "!type": "fn(contextClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
          },
          "updateDisplayListIfDirty": {
            "!type": "fn() -> +android.view.RenderNode",
            "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
          },
          "resolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextAlignment()"
          },
          "dispatchKeyEventPreIme": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
          },
          "removeTransientView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeTransientView(android.view.View)"
          },
          "setScrollY": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
          },
          "setScrollX": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
          },
          "setWillNotCacheDrawing": {
            "!type": "fn(willNotCacheDrawing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
          },
          "setHapticFeedbackEnabled": {
            "!type": "fn(hapticFeedbackEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
          },
          "stopLoading": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#stopLoading()"
          },
          "performLongClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#performLongClick()"
          },
          "onHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onHoverEvent(android.view.MotionEvent)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "requestFocus": {
            "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#requestFocus(int, android.graphics.Rect)"
          },
          "getMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
          },
          "hasTransientState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasTransientState()"
          },
          "setAddStatesFromChildren": {
            "!type": "fn(addsStates: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAddStatesFromChildren(boolean)"
          },
          "postOnAnimation": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
          },
          "onInitializeAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setOpticalInsets": {
            "!type": "fn(insets: +android.graphics.Insets) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
          },
          "isClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
          },
          "isLayoutRtl": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
          },
          "setLayoutDirection": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
          },
          "postInvalidateDelayed": {
            "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
          },
          "isInScrollingContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
          },
          "jumpDrawablesToCurrentState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#jumpDrawablesToCurrentState()"
          },
          "notifySubtreeAccessibilityStateChangedIfNeeded": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
          },
          "clearSslPreferences": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearSslPreferences()"
          },
          "setScrollBarDefaultDelayBeforeFade": {
            "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
          },
          "getDrawingRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
          },
          "getBackgroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
          },
          "getTouchables": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
          },
          "getAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
          },
          "restorePicture": {
            "!type": "fn(b: +android.os.Bundle, src: +java.io.File) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#restorePicture(android.os.Bundle, java.io.File)"
          },
          "onNestedPrePerformAccessibilityAction": {
            "!type": "fn(target: +android.view.View, action: number, args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle)"
          },
          "onKeyPreIme": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setScrollBarStyle": {
            "!type": "fn(style: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setScrollBarStyle(int)"
          },
          "getLocalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
          },
          "getSolidColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
          },
          "offsetRectIntoDescendantCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)"
          },
          "toLocalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
          },
          "requestTransitionStart": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransitionStart(android.animation.LayoutTransition)"
          },
          "removeAllViews": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews()"
          },
          "onCloseSystemDialogs": {
            "!type": "fn(reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
          },
          "getVerticalScrollbarWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
          },
          "isAccessibilitySelectionExtendable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
          },
          "getAccessibilityTraversalAfter": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
          },
          "onProvideVirtualStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onProvideVirtualStructure(android.view.ViewStructure)"
          },
          "onChildViewRemoved": {
            "!type": "fn(p: +android.view.View, child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onChildViewRemoved(android.view.View, android.view.View)"
          },
          "canResolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
          },
          "scheduleLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#scheduleLayoutAnimation()"
          },
          "getScrollIndicators": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
          },
          "getScrollBarSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
          },
          "dispatchApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
          },
          "emulateShiftHeld": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#emulateShiftHeld()"
          },
          "getAccessibilityViewId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
          },
          "zoomBy": {
            "!type": "fn(zoomFactor: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#zoomBy(float)"
          },
          "isTransitionGroup": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isTransitionGroup()"
          },
          "transformPointToViewLocal": {
            "!type": "fn(point: +java.newArray, child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#transformPointToViewLocal(float[], android.view.View)"
          },
          "dumpViewHierarchyWithProperties": {
            "!type": "fn(out: +java.io.BufferedWriter, level: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#dumpViewHierarchyWithProperties(java.io.BufferedWriter, int)"
          },
          "onPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "isDrawingCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
          },
          "getOverlay": {
            "!type": "fn() -> +android.view.ViewGroupOverlay",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getOverlay()"
          },
          "onProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
          },
          "setNextFocusDownId": {
            "!type": "fn(nextFocusDownId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
          },
          "evaluateJavascript": {
            "!type": "fn(script: string, resultCallback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#evaluateJavascript(java.lang.String, android.webkit.ValueCallback)"
          },
          "getVerticalScrollbarPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
          },
          "childHasTransientStateChanged": {
            "!type": "fn(child: +android.view.View, childHasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childHasTransientStateChanged(android.view.View, boolean)"
          },
          "pageUp": {
            "!type": "fn(top: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#pageUp(boolean)"
          },
          "onResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onResume()"
          },
          "setFilterTouchesWhenObscured": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
          },
          "getMeasuredHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
          },
          "getFocusables": {
            "!type": "fn(direction: number) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
          },
          "setOnTouchListener": {
            "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
          },
          "clearFormData": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearFormData()"
          },
          "getOverScrollMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
          },
          "endViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#endViewTransition(android.view.View)"
          },
          "refreshDrawableState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
          },
          "requestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "isInEditMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
          },
          "canResolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
          },
          "startViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startViewTransition(android.view.View)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "dispatchUnhandledMove": {
            "!type": "fn(focused: +android.view.View, direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchUnhandledMove(android.view.View, int)"
          },
          "setImportantForAccessibility": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
          },
          "setMotionEventSplittingEnabled": {
            "!type": "fn(split: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setMotionEventSplittingEnabled(boolean)"
          },
          "focusableViewAvailable": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusableViewAvailable(android.view.View)"
          },
          "isLayoutRequested": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
          },
          "invalidateChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChild(android.view.View, android.graphics.Rect)"
          },
          "setSaveFromParentEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
          },
          "findNext": {
            "!type": "fn(forward: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#findNext(boolean)"
          },
          "getTouchIconUrl": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getTouchIconUrl()"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getLayerType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
          },
          "getHotspotBounds": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
          },
          "setScrollbarFadingEnabled": {
            "!type": "fn(fadeScrollbars: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
          },
          "isPaused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#isPaused()"
          },
          "getLayoutTransition": {
            "!type": "fn() -> +android.animation.LayoutTransition",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutTransition()"
          },
          "removeViewAt": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewAt(int)"
          },
          "setBackground": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
          },
          "recomputeViewAttributes": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#recomputeViewAttributes(android.view.View)"
          },
          "getRotation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
          },
          "drawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
          },
          "getNextFocusRightId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
          },
          "getFocusedChild": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getFocusedChild()"
          },
          "isHardwareAccelerated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
          },
          "getBackground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
          },
          "setAlwaysDrawnWithCacheEnabled": {
            "!type": "fn(always: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAlwaysDrawnWithCacheEnabled(boolean)"
          },
          "requestAccessibilityFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
          },
          "removeViews": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViews(int, int)"
          },
          "setAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
          },
          "getAccessibilityNodeProvider": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getAccessibilityNodeProvider()"
          },
          "resetResolvedPadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedPadding()"
          },
          "getScaleY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
          },
          "forceLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
          },
          "isLayoutDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
          },
          "getScaleX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
          },
          "setFocusableInTouchMode": {
            "!type": "fn(focusableInTouchMode: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
          },
          "updateViewLayout": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#updateViewLayout(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "addStatesFromChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addStatesFromChildren()"
          },
          "setAnimationCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAnimationCacheEnabled(boolean)"
          },
          "getTransitionAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
          },
          "getWindowId": {
            "!type": "fn() -> +android.view.WindowId",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
          },
          "transformMatrixToLocal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
          },
          "reload": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#reload()"
          },
          "dispatchFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchFinishTemporaryDetach()"
          },
          "getViewTreeObserver": {
            "!type": "fn() -> +android.view.ViewTreeObserver",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
          },
          "clearAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
          },
          "onPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "unscheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
          },
          "clearCache": {
            "!type": "fn(includeDiskFiles: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#clearCache(boolean)"
          },
          "getVerticalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
          },
          "onViewRemoved": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewRemoved(android.view.View)"
          },
          "requestLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setLayoutAnimation": {
            "!type": "fn(controller: +android.view.animation.LayoutAnimationController) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimation(android.view.animation.LayoutAnimationController)"
          },
          "dispatchNestedPreFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
          },
          "setOnClickListener": {
            "!type": "fn(l: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
          },
          "isTextDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
          },
          "onApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
          },
          "setNextFocusUpId": {
            "!type": "fn(nextFocusUpId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getChildAt": {
            "!type": "fn(index: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildAt(int)"
          },
          "getBackgroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
          },
          "onCancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
          },
          "getHorizontalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
          },
          "sendAccessibilityEvent": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
          },
          "requestImageRef": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#requestImageRef(android.os.Message)"
          },
          "getPaddingLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
          },
          "overlayVerticalScrollbar": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#overlayVerticalScrollbar()"
          },
          "setRevealClip": {
            "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
          },
          "isFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
          },
          "removeViewsInLayout": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewsInLayout(int, int)"
          },
          "onInitializeAccessibilityNodeInfoInternal": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "isAssistBlocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
          },
          "showContextMenuForChild": {
            "!type": "fn(originalView: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#showContextMenuForChild(android.view.View)"
          },
          "getWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
          },
          "startDrag": {
            "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
          },
          "scheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
          },
          "canScrollHorizontally": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
          },
          "onGlobalFocusChanged": {
            "!type": "fn(oldFocus: +android.view.View, newFocus: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onGlobalFocusChanged(android.view.View, android.view.View)"
          },
          "invalidateChildInParent": {
            "!type": "fn(location: +java.newArray, dirty: +android.graphics.Rect) -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChildInParent(int[], android.graphics.Rect)"
          },
          "dispatchNestedPreScroll": {
            "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
          },
          "getLayoutParams": {
            "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
          },
          "getScrollY": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
          },
          "getScrollX": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
          },
          "postDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
          },
          "getKeyDispatcherState": {
            "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
          },
          "goForward": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#goForward()"
          },
          "setMinimumHeight": {
            "!type": "fn(minHeight: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
          },
          "hasFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocus()"
          },
          "scrollTo": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
          },
          "setAccessibilityTraversalAfter": {
            "!type": "fn(afterId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
          },
          "getClipToPadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipToPadding()"
          },
          "isHapticFeedbackEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
          },
          "isFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
          },
          "getTransientViewIndex": {
            "!type": "fn(position: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewIndex(int)"
          },
          "requestRectangleOnScreen": {
            "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
          },
          "isSoundEffectsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
          },
          "overlayHorizontalScrollbar": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#overlayHorizontalScrollbar()"
          },
          "findViewByPredicate": {
            "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
          },
          "setLayerPaint": {
            "!type": "fn(paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
          },
          "setLayoutParams": {
            "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
          },
          "isContextClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
          },
          "isImportantForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
          },
          "dispatchPointerEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
          },
          "invalidateOutline": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
          },
          "getTouchDelegate": {
            "!type": "fn() -> +android.view.TouchDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
          },
          "setHasTransientState": {
            "!type": "fn(hasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
          },
          "getIterableTextForAccessibility": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
          },
          "checkInputConnectionProxy": {
            "!type": "fn(view: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
          },
          "getChildVisibleRect": {
            "!type": "fn(child: +android.view.View, r: +android.graphics.Rect, offset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)"
          },
          "findViewByAccessibilityIdTraversal": {
            "!type": "fn(accessibilityId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewByAccessibilityIdTraversal(int)"
          },
          "clearFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearFocus()"
          },
          "findViewsWithText": {
            "!type": "fn(outViews: +java.util.ArrayList, text: +java.lang.CharSequence, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
          },
          "addTransientView": {
            "!type": "fn(view: +android.view.View, index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTransientView(android.view.View, int)"
          },
          "invalidateDrawable": {
            "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
          },
          "getViewRootImpl": {
            "!type": "fn() -> +android.view.ViewRootImpl",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
          },
          "setOnHoverListener": {
            "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
          },
          "getForegroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
          },
          "setNestedScrollingEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
          },
          "clearAccessibilityFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
          },
          "buildDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
          },
          "zoomOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#zoomOut()"
          },
          "getTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
          },
          "getWindowVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
          },
          "onInterceptTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
          },
          "clearDisappearingChildren": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearDisappearingChildren()"
          },
          "setDescendantFocusability": {
            "!type": "fn(focusability: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setDescendantFocusability(int)"
          },
          "getHttpAuthUsernamePassword": {
            "!type": "fn(host: string, realm: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getHttpAuthUsernamePassword(java.lang.String, java.lang.String)"
          },
          "setId": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
          },
          "setAccessibilityLiveRegion": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
          },
          "getTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
          },
          "setMinimumWidth": {
            "!type": "fn(minWidth: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
          },
          "bringToFront": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
          },
          "isTextAlignmentResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
          },
          "saveWebArchive": {
            "!type": "fn(filename: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#saveWebArchive(java.lang.String)"
          },
          "hasOnClickListeners": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
          },
          "getSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
          },
          "getPivotY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
          },
          "getPivotX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
          },
          "getPaddingStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
          },
          "getStateListAnimator": {
            "!type": "fn() -> +android.animation.StateListAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
          },
          "resolveLayoutParams": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutParams()"
          },
          "dispatchActivityResult": {
            "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
          },
          "setScrollBarSize": {
            "!type": "fn(scrollBarSize: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
          },
          "dispatchDisplayHint": {
            "!type": "fn(hint: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDisplayHint(int)"
          },
          "debug": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
          },
          "getBoundsOnScreen": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
          },
          "setOutlineProvider": {
            "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
          },
          "measure": {
            "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "getMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
          },
          "setOnScrollChangeListener": {
            "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#destroy()"
          },
          "isActionableForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
          },
          "dispatchProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchProvideStructure(android.view.ViewStructure)"
          },
          "draw": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
          },
          "setCertificate": {
            "!type": "fn(certificate: +android.net.http.SslCertificate) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setCertificate(android.net.http.SslCertificate)"
          },
          "callOnClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
          },
          "resetPaddingToInitialValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
          },
          "setClipBounds": {
            "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
          },
          "getRotationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
          },
          "getRotationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
          },
          "getHitRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
          },
          "removeView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeView(android.view.View)"
          },
          "getAccessibilitySelectionEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
          },
          "sendAccessibilityEventUncheckedInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getClipBounds": {
            "!type": "fn() -> +android.graphics.Rect",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
          },
          "addTouchables": {
            "!type": "fn(views: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTouchables(java.util.ArrayList)"
          },
          "getLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
          },
          "dispatchConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchConfigurationChanged(android.content.res.Configuration)"
          },
          "isAttachedToWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "resetResolvedTextDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextDirection()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
          },
          "hasShadow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
          },
          "getElevation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
          },
          "setLeftTopRightBottom": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
          },
          "resetResolvedTextAlignment": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextAlignment()"
          },
          "isSaveFromParentEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
          },
          "willNotCacheDrawing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
          },
          "removeOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "isRootNamespace": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
          },
          "offsetTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
          },
          "setOverScrollMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setOverScrollMode(int)"
          },
          "getDrawableState": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
          },
          "stopNestedScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
          },
          "addOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "onRequestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "removeJavascriptInterface": {
            "!type": "fn(name: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#removeJavascriptInterface(java.lang.String)"
          },
          "dispatchPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getAccessibilitySelectionStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
          },
          "setOnGenericMotionListener": {
            "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
          },
          "postInvalidate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
          },
          "dispatchNestedPrePerformAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
          },
          "isActivated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
          },
          "setWillNotDraw": {
            "!type": "fn(willNotDraw: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
          },
          "getNextFocusForwardId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
          },
          "isAnimationCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAnimationCacheEnabled()"
          },
          "setNextFocusLeftId": {
            "!type": "fn(nextFocusLeftId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
          },
          "requestChildFocus": {
            "!type": "fn(child: +android.view.View, focused: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildFocus(android.view.View, android.view.View)"
          },
          "isLongClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
          },
          "childDrawableStateChanged": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childDrawableStateChanged(android.view.View)"
          },
          "applyDrawableToTransparentRegion": {
            "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
          },
          "getContentWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getContentWidth()"
          },
          "documentHasImages": {
            "!type": "fn(response: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#documentHasImages(android.os.Message)"
          },
          "addFocusables": {
            "!type": "fn(views: +java.util.ArrayList, direction: number, focusableMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addFocusables(java.util.ArrayList, int, int)"
          },
          "isAccessibilityFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
          },
          "getDrawingCache": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
          },
          "showFindDialog": {
            "!type": "fn(text: string, showIme: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#showFindDialog(java.lang.String, boolean)"
          },
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
          },
          "computeScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#computeScroll()"
          },
          "getAccessibilityLiveRegion": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
          },
          "isFocusableInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
          },
          "getMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
          },
          "indexOfChild": {
            "!type": "fn(child: +android.view.View) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#indexOfChild(android.view.View)"
          },
          "dispatchSetActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetActivated(boolean)"
          },
          "setLayerType": {
            "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setLayerType(int, android.graphics.Paint)"
          },
          "isInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
          },
          "isLayoutDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
          },
          "isDuplicateParentStateEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
          },
          "getDisplay": {
            "!type": "fn() -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
          },
          "getFavicon": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getFavicon()"
          },
          "offsetChildrenTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetChildrenTopAndBottom(int)"
          },
          "getForegroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
          },
          "setTouchscreenBlocksFocus": {
            "!type": "fn(touchscreenBlocksFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTouchscreenBlocksFocus(boolean)"
          },
          "getIteratorForGranularity": {
            "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
          },
          "getBaseline": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBaseline()"
          },
          "setFadingEdgeLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
          },
          "fitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
          },
          "setSaveEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
          },
          "setClipChildren": {
            "!type": "fn(clipChildren: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipChildren(boolean)"
          },
          "createAccessibilityNodeInfo": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
          },
          "getParent": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
          },
          "bringChildToFront": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#bringChildToFront(android.view.View)"
          },
          "setHovered": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "getAccessibilityWindowId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
          },
          "findAllAsync": {
            "!type": "fn(find: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#findAllAsync(java.lang.String)"
          },
          "requestUnbufferedDispatch": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
          },
          "onNestedFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedFling(android.view.View, float, float, boolean)"
          },
          "startNestedScroll": {
            "!type": "fn(axes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
          },
          "onRtlPropertiesChanged": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onRtlPropertiesChanged(int)"
          },
          "playSoundEffect": {
            "!type": "fn(soundConstant: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
          },
          "requestFocusFromTouch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
          },
          "createAccessibilityNodeInfoInternal": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
          },
          "setClipToPadding": {
            "!type": "fn(clipToPadding: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipToPadding(boolean)"
          },
          "isLayoutSuppressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isLayoutSuppressed()"
          },
          "setHttpAuthUsernamePassword": {
            "!type": "fn(host: string, realm: string, username: string, password: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setHttpAuthUsernamePassword(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
          },
          "getScale": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getScale()"
          },
          "setIsRootNamespace": {
            "!type": "fn(isRoot: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
          },
          "destroyDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
          },
          "copyBackForwardList": {
            "!type": "fn() -> +android.webkit.WebBackForwardList",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#copyBackForwardList()"
          },
          "setForegroundGravity": {
            "!type": "fn(gravity: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundGravity(int)"
          },
          "getContentDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
          },
          "setTouchDelegate": {
            "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
          },
          "getTitle": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#getTitle()"
          },
          "setOnCreateContextMenuListener": {
            "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
          },
          "getAccessibilityTraversalBefore": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getAccessibilityDelegate": {
            "!type": "fn() -> +android.view.View.AccessibilityDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
          },
          "setLabelFor": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
          },
          "setOnLongClickListener": {
            "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
          },
          "setBackgroundDrawable": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "setWebChromeClient": {
            "!type": "fn(client: +android.webkit.WebChromeClient) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setWebChromeClient(android.webkit.WebChromeClient)"
          },
          "setDownloadListener": {
            "!type": "fn(listener: +android.webkit.DownloadListener) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#setDownloadListener(android.webkit.DownloadListener)"
          },
          "damageChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChild(android.view.View, android.graphics.Rect)"
          },
          "notifySubtreeAccessibilityStateChanged": {
            "!type": "fn(child: +android.view.View, source: +android.view.View, changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int)"
          },
          "computeSystemWindowInsets": {
            "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
          },
          "savePicture": {
            "!type": "fn(b: +android.os.Bundle, dest: +java.io.File) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#savePicture(android.os.Bundle, java.io.File)"
          },
          "offsetDescendantRectToMyCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)"
          },
          "getLayoutAnimation": {
            "!type": "fn() -> +android.view.animation.LayoutAnimationController",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimation()"
          },
          "setPaddingRelative": {
            "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
          },
          "removeOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "goBackOrForward": {
            "!type": "fn(steps: number) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#goBackOrForward(int)"
          },
          "isOpaque": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
          },
          "performClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performClick()"
          },
          "setTextDirection": {
            "!type": "fn(textDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
          },
          "getFocusedRect": {
            "!type": "fn(r: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
          },
          "setBackgroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
          },
          "setDrawingCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
          },
          "onViewAdded": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewAdded(android.view.View)"
          },
          "setAssistBlocked": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
          },
          "layout": {
            "!type": "fn(l: number, t: number, r: number, b: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#layout(int, int, int, int)"
          },
          "isForegroundInsidePadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
          },
          "dispatchDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDragEvent(android.view.DragEvent)"
          },
          "setTextAlignment": {
            "!type": "fn(textAlignment: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
          },
          "setBackgroundResource": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
          },
          "getPaddingTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
          },
          "getImportantForAccessibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
          },
          "requestTransparentRegion": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransparentRegion(android.view.View)"
          },
          "postUrl": {
            "!type": "fn(url: string, postData: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebView.html#postUrl(java.lang.String, byte[])"
          }
        }
      },
      "MimeTypeMap": {
        "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html",
        "getSingleton": {
          "!type": "fn() -> +android.webkit.MimeTypeMap",
          "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html#getSingleton()"
        },
        "getFileExtensionFromUrl": {
          "!type": "fn(url: string) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html#getFileExtensionFromUrl(java.lang.String)"
        },
        "prototype": {
          "hasExtension": {
            "!type": "fn(extension: string) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html#hasExtension(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "hasMimeType": {
            "!type": "fn(mimeType: string) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html#hasMimeType(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMimeTypeFromExtension": {
            "!type": "fn(extension: string) -> string",
            "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html#getMimeTypeFromExtension(java.lang.String)"
          },
          "getExtensionFromMimeType": {
            "!type": "fn(mimeType: string) -> string",
            "!url": "http://developer.android.com/reference/android/webkit/MimeTypeMap.html#getExtensionFromMimeType(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "WebBackForwardList": {
        "!url": "http://developer.android.com/reference/android/webkit/WebBackForwardList.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getCurrentIndex": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebBackForwardList.html#getCurrentIndex()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getItemAtIndex": {
            "!type": "fn(index: number) -> +android.webkit.WebHistoryItem",
            "!url": "http://developer.android.com/reference/android/webkit/WebBackForwardList.html#getItemAtIndex(int)"
          },
          "getCurrentItem": {
            "!type": "fn() -> +android.webkit.WebHistoryItem",
            "!url": "http://developer.android.com/reference/android/webkit/WebBackForwardList.html#getCurrentItem()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebBackForwardList.html#getSize()"
          }
        }
      },
      "SslErrorHandler": {
        "!url": "http://developer.android.com/reference/android/webkit/SslErrorHandler.html",
        "!type": "fn()",
        "prototype": {
          "getLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#getLooper()"
          },
          "sendEmptyMessage": {
            "!type": "fn(what: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessage(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "handleMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#handleMessage(android.os.Message)"
          },
          "removeCallbacksAndMessages": {
            "!type": "fn(token: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeCallbacksAndMessages(java.lang.Object)"
          },
          "proceed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/SslErrorHandler.html#proceed()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/SslErrorHandler.html#cancel()"
          },
          "hasCallbacks": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#hasCallbacks(java.lang.Runnable)"
          },
          "sendMessage": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessage(android.os.Message)"
          },
          "removeCallbacks": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeCallbacks(java.lang.Runnable)"
          },
          "dump": {
            "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#dump(android.util.Printer, java.lang.String)"
          },
          "removeMessages": {
            "!type": "fn(what: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeMessages(int)"
          },
          "hasMessages": {
            "!type": "fn(what: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#hasMessages(int)"
          },
          "runWithScissors": {
            "!type": "fn(r: +java.lang.Runnable, timeout: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#runWithScissors(java.lang.Runnable, long)"
          },
          "postDelayed": {
            "!type": "fn(r: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postDelayed(java.lang.Runnable, long)"
          },
          "dispatchMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#dispatchMessage(android.os.Message)"
          },
          "obtainMessage": {
            "!type": "fn() -> +android.os.Message",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#obtainMessage()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "sendEmptyMessageDelayed": {
            "!type": "fn(what: number, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessageDelayed(int, long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getMessageName": {
            "!type": "fn(message: +android.os.Message) -> string",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#getMessageName(android.os.Message)"
          },
          "sendMessageAtTime": {
            "!type": "fn(msg: +android.os.Message, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageAtTime(android.os.Message, long)"
          },
          "postAtTime": {
            "!type": "fn(r: +java.lang.Runnable, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postAtTime(java.lang.Runnable, long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "sendEmptyMessageAtTime": {
            "!type": "fn(what: number, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessageAtTime(int, long)"
          },
          "post": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#post(java.lang.Runnable)"
          },
          "sendMessageDelayed": {
            "!type": "fn(msg: +android.os.Message, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageDelayed(android.os.Message, long)"
          },
          "sendMessageAtFrontOfQueue": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageAtFrontOfQueue(android.os.Message)"
          },
          "postAtFrontOfQueue": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postAtFrontOfQueue(java.lang.Runnable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "WebViewDatabase": {
        "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html",
        "!type": "fn()",
        "getInstance": {
          "!type": "fn(context: +android.content.Context) -> +android.webkit.WebViewDatabase",
          "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#getInstance(android.content.Context)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "clearUsernamePassword": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearUsernamePassword()"
          },
          "hasFormData": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasFormData()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hasUsernamePassword": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasUsernamePassword()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "clearHttpAuthUsernamePassword": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearHttpAuthUsernamePassword()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "clearFormData": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#clearFormData()"
          },
          "hasHttpAuthUsernamePassword": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/WebViewDatabase.html#hasHttpAuthUsernamePassword()"
          }
        }
      },
      "WebHistoryItem": {
        "!url": "http://developer.android.com/reference/android/webkit/WebHistoryItem.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebHistoryItem.html#getId()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getFavicon": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/webkit/WebHistoryItem.html#getFavicon()"
          },
          "getTitle": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebHistoryItem.html#getTitle()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getUrl": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebHistoryItem.html#getUrl()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getOriginalUrl": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebHistoryItem.html#getOriginalUrl()"
          }
        }
      },
      "URLUtil": {
        "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html",
        "!type": "fn()",
        "composeSearchUrl": {
          "!type": "fn(inQuery: string, template: string, queryPlaceHolder: string) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#composeSearchUrl(java.lang.String, java.lang.String, java.lang.String)"
        },
        "decode": {
          "!type": "fn(url: +java.newArray) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#decode(byte[])"
        },
        "guessUrl": {
          "!type": "fn(inUrl: string) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#guessUrl(java.lang.String)"
        },
        "isDataUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isDataUrl(java.lang.String)"
        },
        "isAboutUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isAboutUrl(java.lang.String)"
        },
        "isJavaScriptUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isJavaScriptUrl(java.lang.String)"
        },
        "stripAnchor": {
          "!type": "fn(url: string) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#stripAnchor(java.lang.String)"
        },
        "isHttpUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isHttpUrl(java.lang.String)"
        },
        "isFileUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isFileUrl(java.lang.String)"
        },
        "isNetworkUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isNetworkUrl(java.lang.String)"
        },
        "isResourceUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isResourceUrl(java.lang.String)"
        },
        "isCookielessProxyUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isCookielessProxyUrl(java.lang.String)"
        },
        "guessFileName": {
          "!type": "fn(url: string, contentDisposition: string, mimeType: string) -> string",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#guessFileName(java.lang.String, java.lang.String, java.lang.String)"
        },
        "isHttpsUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isHttpsUrl(java.lang.String)"
        },
        "isContentUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isContentUrl(java.lang.String)"
        },
        "isValidUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isValidUrl(java.lang.String)"
        },
        "isAssetUrl": {
          "!type": "fn(url: string) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/URLUtil.html#isAssetUrl(java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "PermissionRequest": {
        "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html",
        "!type": "fn()",
        "RESOURCE_PROTECTED_MEDIA_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#RESOURCE_PROTECTED_MEDIA_ID"
        },
        "RESOURCE_MIDI_SYSEX": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#RESOURCE_MIDI_SYSEX"
        },
        "RESOURCE_AUDIO_CAPTURE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#RESOURCE_AUDIO_CAPTURE"
        },
        "RESOURCE_VIDEO_CAPTURE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#RESOURCE_VIDEO_CAPTURE"
        },
        "prototype": {
          "grant": {
            "!type": "fn(resources: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#grant(java.lang.String[])"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "deny": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#deny()"
          },
          "getOrigin": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#getOrigin()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getResources": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/PermissionRequest.html#getResources()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "JsDialogHelper": {
        "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html",
        "!type": "fn(result: +android.webkit.JsPromptResult, type: number, defaultValue: string, message: string, url: string)",
        "UNLOAD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html#UNLOAD"
        },
        "CONFIRM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html#CONFIRM"
        },
        "ALERT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html#ALERT"
        },
        "PROMPT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html#PROMPT"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "invokeCallback": {
            "!type": "fn(client: +android.webkit.WebChromeClient, webView: +android.webkit.WebView) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html#invokeCallback(android.webkit.WebChromeClient, android.webkit.WebView)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "showDialog": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/JsDialogHelper.html#showDialog(android.content.Context)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "JsPromptResult": {
        "!url": "http://developer.android.com/reference/android/webkit/JsPromptResult.html",
        "!type": "fn(receiver: +android.webkit.JsResult.ResultReceiver)",
        "prototype": {
          "confirm": {
            "!type": "fn(result: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/JsPromptResult.html#confirm(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/JsResult.html#getResult()"
          },
          "getStringResult": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/JsPromptResult.html#getStringResult()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/JsResult.html#cancel()"
          }
        }
      },
      "WebMessage": {
        "!url": "http://developer.android.com/reference/android/webkit/WebMessage.html",
        "!type": "fn(data: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPorts": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/WebMessage.html#getPorts()"
          },
          "getData": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebMessage.html#getData()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PluginData": {
        "!url": "http://developer.android.com/reference/android/webkit/PluginData.html",
        "!type": "fn(stream: +java.io.InputStream, length: +java.lang.Long, headers: +java.util.Map, code: number)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInputStream": {
            "!type": "fn() -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/android/webkit/PluginData.html#getInputStream()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getStatusCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/PluginData.html#getStatusCode()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getContentLength": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/webkit/PluginData.html#getContentLength()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getHeaders": {
            "!type": "fn() -> +java.util.Map",
            "!url": "http://developer.android.com/reference/android/webkit/PluginData.html#getHeaders()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "UrlInterceptRegistry": {
        "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html",
        "!type": "fn()",
        "registerHandler": {
          "!type": "fn(handler: +android.webkit.UrlInterceptHandler) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html#registerHandler(android.webkit.UrlInterceptHandler)"
        },
        "getPluginData": {
          "!type": "fn(url: string, headers: +java.util.Map) -> +android.webkit.PluginData",
          "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html#getPluginData(java.lang.String, java.util.Map)"
        },
        "urlInterceptDisabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html#urlInterceptDisabled()"
        },
        "getSurrogate": {
          "!type": "fn(url: string, headers: +java.util.Map) -> +android.webkit.CacheManager.CacheResult",
          "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html#getSurrogate(java.lang.String, java.util.Map)"
        },
        "unregisterHandler": {
          "!type": "fn(handler: +android.webkit.UrlInterceptHandler) -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html#unregisterHandler(android.webkit.UrlInterceptHandler)"
        },
        "setUrlInterceptDisabled": {
          "!type": "fn(disabled: bool) -> void",
          "!url": "http://developer.android.com/reference/android/webkit/UrlInterceptRegistry.html#setUrlInterceptDisabled(boolean)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "JsResult": {
        "!url": "http://developer.android.com/reference/android/webkit/JsResult.html",
        "!type": "fn(receiver: +android.webkit.JsResult.ResultReceiver)",
        "prototype": {
          "confirm": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/JsResult.html#confirm()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/JsResult.html#getResult()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/JsResult.html#cancel()"
          }
        }
      },
      "GeolocationPermissions": {
        "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html",
        "!type": "fn()",
        "getInstance": {
          "!type": "fn() -> +android.webkit.GeolocationPermissions",
          "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html#getInstance()"
        },
        "prototype": {
          "allow": {
            "!type": "fn(origin: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html#allow(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getOrigins": {
            "!type": "fn(callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html#getOrigins(android.webkit.ValueCallback)"
          },
          "clear": {
            "!type": "fn(origin: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html#clear(java.lang.String)"
          },
          "clearAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html#clearAll()"
          },
          "getAllowed": {
            "!type": "fn(origin: string, callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/GeolocationPermissions.html#getAllowed(java.lang.String, android.webkit.ValueCallback)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "WebMessagePort": {
        "!url": "http://developer.android.com/reference/android/webkit/WebMessagePort.html",
        "!type": "fn()",
        "WebMessageCallback": {
          "!url": "http://developer.android.com/reference/android/webkit/WebMessagePort.WebMessageCallback.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "onMessage": {
              "!type": "fn(port: +android.webkit.WebMessagePort, message: +android.webkit.WebMessage) -> void",
              "!url": "http://developer.android.com/reference/android/webkit/WebMessagePort.WebMessageCallback.html#onMessage(android.webkit.WebMessagePort, android.webkit.WebMessage)"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setWebMessageCallback": {
            "!type": "fn(callback: +android.webkit.WebMessagePort.WebMessageCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebMessagePort.html#setWebMessageCallback(android.webkit.WebMessagePort.WebMessageCallback)"
          },
          "postMessage": {
            "!type": "fn(message: +android.webkit.WebMessage) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebMessagePort.html#postMessage(android.webkit.WebMessage)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebMessagePort.html#close()"
          }
        }
      },
      "ClientCertRequest": {
        "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getPrincipals": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#getPrincipals()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getPort": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#getPort()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getKeyTypes": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#getKeyTypes()"
          },
          "ignore": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#ignore()"
          },
          "proceed": {
            "!type": "fn(privateKey: +java.security.PrivateKey, chain: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#proceed(java.security.PrivateKey, java.security.cert.X509Certificate[])"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getHost": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#getHost()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/ClientCertRequest.html#cancel()"
          }
        }
      },
      "WebResourceResponse": {
        "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html",
        "!type": "fn(mimeType: string, encoding: string, data: +java.io.InputStream)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getEncoding": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#getEncoding()"
          },
          "getStatusCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#getStatusCode()"
          },
          "getMimeType": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#getMimeType()"
          },
          "setData": {
            "!type": "fn(data: +java.io.InputStream) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#setData(java.io.InputStream)"
          },
          "setEncoding": {
            "!type": "fn(encoding: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#setEncoding(java.lang.String)"
          },
          "setMimeType": {
            "!type": "fn(mimeType: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#setMimeType(java.lang.String)"
          },
          "setResponseHeaders": {
            "!type": "fn(headers: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#setResponseHeaders(java.util.Map)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getData": {
            "!type": "fn() -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#getData()"
          },
          "getResponseHeaders": {
            "!type": "fn() -> +java.util.Map",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#getResponseHeaders()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getReasonPhrase": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#getReasonPhrase()"
          },
          "setStatusCodeAndReasonPhrase": {
            "!type": "fn(statusCode: number, reasonPhrase: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/WebResourceResponse.html#setStatusCodeAndReasonPhrase(int, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "CookieManager": {
        "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html",
        "!type": "fn()",
        "getInstance": {
          "!type": "fn() -> +android.webkit.CookieManager",
          "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#getInstance()"
        },
        "setAcceptFileSchemeCookies": {
          "!type": "fn(accept: bool) -> void",
          "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#setAcceptFileSchemeCookies(boolean)"
        },
        "allowFileSchemeCookies": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#allowFileSchemeCookies()"
        },
        "prototype": {
          "removeSessionCookie": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#removeSessionCookie()"
          },
          "removeAllCookies": {
            "!type": "fn(callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#removeAllCookies(android.webkit.ValueCallback)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "acceptCookie": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#acceptCookie()"
          },
          "removeAllCookie": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#removeAllCookie()"
          },
          "hasCookies": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#hasCookies()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "removeExpiredCookie": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#removeExpiredCookie()"
          },
          "setCookie": {
            "!type": "fn(url: string, value: string) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#setCookie(java.lang.String, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#flush()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "removeSessionCookies": {
            "!type": "fn(callback: +android.webkit.ValueCallback) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#removeSessionCookies(android.webkit.ValueCallback)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getCookie": {
            "!type": "fn(url: string) -> string",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#getCookie(java.lang.String)"
          },
          "setAcceptCookie": {
            "!type": "fn(accept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#setAcceptCookie(boolean)"
          },
          "setAcceptThirdPartyCookies": {
            "!type": "fn(webview: +android.webkit.WebView, accept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#setAcceptThirdPartyCookies(android.webkit.WebView, boolean)"
          },
          "acceptThirdPartyCookies": {
            "!type": "fn(webview: +android.webkit.WebView) -> bool",
            "!url": "http://developer.android.com/reference/android/webkit/CookieManager.html#acceptThirdPartyCookies(android.webkit.WebView)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      }
    }
  }
}