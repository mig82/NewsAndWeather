{
  "android": {
    "os": {
      "DeadObjectException": {
        "!url": "http://developer.android.com/reference/android/os/DeadObjectException.html",
        "!type": "fn()",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "rethrowAsRuntimeException": {
            "!type": "fn() -> +java.lang.RuntimeException",
            "!url": "http://developer.android.com/reference/android/os/RemoteException.html#rethrowAsRuntimeException()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Message": {
        "!url": "http://developer.android.com/reference/android/os/Message.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/Message.html#CREATOR"
        },
        "updateCheckRecycle": {
          "!type": "fn(targetSdkVersion: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Message.html#updateCheckRecycle(int)"
        },
        "obtain": {
          "!type": "fn() -> +android.os.Message",
          "!url": "http://developer.android.com/reference/android/os/Message.html#obtain()"
        },
        "prototype": {
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#writeToParcel(android.os.Parcel, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "copyFrom": {
            "!type": "fn(o: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#copyFrom(android.os.Message)"
          },
          "getCallback": {
            "!type": "fn() -> +java.lang.Runnable",
            "!url": "http://developer.android.com/reference/android/os/Message.html#getCallback()"
          },
          "setData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#setData(android.os.Bundle)"
          },
          "isAsynchronous": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Message.html#isAsynchronous()"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Message.html#describeContents()"
          },
          "peekData": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/Message.html#peekData()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getData": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/Message.html#getData()"
          },
          "setAsynchronous": {
            "!type": "fn(async: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#setAsynchronous(boolean)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTarget": {
            "!type": "fn(target: +android.os.Handler) -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#setTarget(android.os.Handler)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Message.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getWhen": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/Message.html#getWhen()"
          },
          "getTarget": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/os/Message.html#getTarget()"
          },
          "sendToTarget": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#sendToTarget()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "recycle": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Message.html#recycle()"
          }
        }
      },
      "StrictMode": {
        "!url": "http://developer.android.com/reference/android/os/StrictMode.html",
        "ThreadPolicy": {
          "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html",
          "Builder": {
            "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html",
            "!type": "fn()",
            "prototype": {
              "penaltyLog": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyLog()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "penaltyDeath": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDeath()"
              },
              "penaltyFlashScreen": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyFlashScreen()"
              },
              "penaltyDropBox": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDropBox()"
              },
              "permitNetwork": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitNetwork()"
              },
              "detectNetwork": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectNetwork()"
              },
              "detectResourceMismatches": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectResourceMismatches()"
              },
              "permitCustomSlowCalls": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitCustomSlowCalls()"
              },
              "penaltyDeathOnNetwork": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDeathOnNetwork()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "permitResourceMismatches": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitResourceMismatches()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "permitDiskReads": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitDiskReads()"
              },
              "build": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#build()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "detectAll": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "detectDiskReads": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectDiskReads()"
              },
              "permitAll": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitAll()"
              },
              "detectDiskWrites": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectDiskWrites()"
              },
              "penaltyDialog": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#penaltyDialog()"
              },
              "detectCustomSlowCalls": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#detectCustomSlowCalls()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "permitDiskWrites": {
                "!type": "fn() -> +android.os.StrictMode.ThreadPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.Builder.html#permitDiskWrites()"
              }
            }
          },
          "LAX": {
            "!type": "+android.os.StrictMode.ThreadPolicy",
            "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html#LAX"
          },
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/os/StrictMode.ThreadPolicy.html#toString()"
            }
          }
        },
        "VmPolicy": {
          "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.html",
          "Builder": {
            "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html",
            "!type": "fn()",
            "prototype": {
              "detectLeakedClosableObjects": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectLeakedClosableObjects()"
              },
              "penaltyLog": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyLog()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "penaltyDeath": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDeath()"
              },
              "penaltyDropBox": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDropBox()"
              },
              "detectCleartextNetwork": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectCleartextNetwork()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "detectLeakedRegistrationObjects": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectLeakedRegistrationObjects()"
              },
              "setClassInstanceLimit": {
                "!type": "fn(klass: +java.lang.Class, instanceLimit: number) -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#setClassInstanceLimit(java.lang.Class, int)"
              },
              "build": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#build()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "detectAll": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "detectLeakedSqlLiteObjects": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectLeakedSqlLiteObjects()"
              },
              "detectActivityLeaks": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectActivityLeaks()"
              },
              "detectFileUriExposure": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#detectFileUriExposure()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "penaltyDeathOnCleartextNetwork": {
                "!type": "fn() -> +android.os.StrictMode.VmPolicy.Builder",
                "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.Builder.html#penaltyDeathOnCleartextNetwork()"
              }
            }
          },
          "LAX": {
            "!type": "+android.os.StrictMode.VmPolicy",
            "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.html#LAX"
          },
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/os/StrictMode.VmPolicy.html#toString()"
            }
          }
        },
        "StrictModeViolation": {
          "!url": "http://developer.android.com/reference/android/os/StrictMode.StrictModeViolation.html",
          "!type": "fn(policyState: number, policyViolated: number, message: string)",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "StrictModeNetworkViolation": {
          "!url": "http://developer.android.com/reference/android/os/StrictMode.StrictModeNetworkViolation.html",
          "!type": "fn(policyMask: number)",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "Span": {
          "!url": "http://developer.android.com/reference/android/os/StrictMode.Span.html",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "finish": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/StrictMode.Span.html#finish()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "ViolationInfo": {
          "!url": "http://developer.android.com/reference/android/os/StrictMode.ViolationInfo.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "dump": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/StrictMode.ViolationInfo.html#dump(android.util.Printer, java.lang.String)"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/StrictMode.ViolationInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/StrictMode.ViolationInfo.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "NETWORK_POLICY_ACCEPT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#NETWORK_POLICY_ACCEPT"
        },
        "NETWORK_POLICY_REJECT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#NETWORK_POLICY_REJECT"
        },
        "DETECT_VM_ACTIVITY_LEAKS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_VM_ACTIVITY_LEAKS"
        },
        "VISUAL_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#VISUAL_PROPERTY"
        },
        "PENALTY_DEATH_ON_CLEARTEXT_NETWORK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_DEATH_ON_CLEARTEXT_NETWORK"
        },
        "PENALTY_DROPBOX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_DROPBOX"
        },
        "DETECT_VM_REGISTRATION_LEAKS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_VM_REGISTRATION_LEAKS"
        },
        "DETECT_NETWORK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_NETWORK"
        },
        "PENALTY_GATHER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_GATHER"
        },
        "DETECT_RESOURCE_MISMATCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_RESOURCE_MISMATCH"
        },
        "PENALTY_DEATH_ON_NETWORK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_DEATH_ON_NETWORK"
        },
        "DETECT_DISK_READ": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_DISK_READ"
        },
        "DETECT_VM_CLOSABLE_LEAKS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_VM_CLOSABLE_LEAKS"
        },
        "DETECT_VM_CURSOR_LEAKS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_VM_CURSOR_LEAKS"
        },
        "PENALTY_LOG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_LOG"
        },
        "PENALTY_FLASH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_FLASH"
        },
        "PENALTY_DEATH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_DEATH"
        },
        "NETWORK_POLICY_LOG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#NETWORK_POLICY_LOG"
        },
        "DETECT_CUSTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_CUSTOM"
        },
        "DISABLE_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DISABLE_PROPERTY"
        },
        "DETECT_DISK_WRITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#DETECT_DISK_WRITE"
        },
        "PENALTY_DIALOG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#PENALTY_DIALOG"
        },
        "onFileUriExposed": {
          "!type": "fn(location: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onFileUriExposed(java.lang.String)"
        },
        "onCleartextNetworkDetected": {
          "!type": "fn(firstPacket: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onCleartextNetworkDetected(byte[])"
        },
        "enableDefaults": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#enableDefaults()"
        },
        "onSqliteObjectLeaked": {
          "!type": "fn(message: string, originStack: +java.lang.Throwable) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onSqliteObjectLeaked(java.lang.String, java.lang.Throwable)"
        },
        "onIntentReceiverLeaked": {
          "!type": "fn(originStack: +java.lang.Throwable) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onIntentReceiverLeaked(java.lang.Throwable)"
        },
        "vmRegistrationLeaksEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#vmRegistrationLeaksEnabled()"
        },
        "vmFileUriExposureEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#vmFileUriExposureEnabled()"
        },
        "vmSqliteObjectLeaksEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#vmSqliteObjectLeaksEnabled()"
        },
        "getVmPolicy": {
          "!type": "fn() -> +android.os.StrictMode.VmPolicy",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#getVmPolicy()"
        },
        "enableDeathOnNetwork": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#enableDeathOnNetwork()"
        },
        "enterCriticalSpan": {
          "!type": "fn(name: string) -> +android.os.StrictMode.Span",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#enterCriticalSpan(java.lang.String)"
        },
        "decrementExpectedActivityCount": {
          "!type": "fn(klass: +java.lang.Class) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#decrementExpectedActivityCount(java.lang.Class)"
        },
        "incrementExpectedActivityCount": {
          "!type": "fn(klass: +java.lang.Class) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#incrementExpectedActivityCount(java.lang.Class)"
        },
        "noteDiskWrite": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#noteDiskWrite()"
        },
        "noteDiskRead": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#noteDiskRead()"
        },
        "conditionallyEnableDebugLogging": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#conditionallyEnableDebugLogging()"
        },
        "trackActivity": {
          "!type": "fn(instance: +java.lang.Object) -> +java.lang.Object",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#trackActivity(java.lang.Object)"
        },
        "onServiceConnectionLeaked": {
          "!type": "fn(originStack: +java.lang.Throwable) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onServiceConnectionLeaked(java.lang.Throwable)"
        },
        "setVmPolicy": {
          "!type": "fn(policy: +android.os.StrictMode.VmPolicy) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#setVmPolicy(android.os.StrictMode.VmPolicy)"
        },
        "vmClosableObjectLeaksEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#vmClosableObjectLeaksEnabled()"
        },
        "onVmPolicyViolation": {
          "!type": "fn(message: string, originStack: +java.lang.Throwable) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onVmPolicyViolation(java.lang.String, java.lang.Throwable)"
        },
        "conditionallyCheckInstanceCounts": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#conditionallyCheckInstanceCounts()"
        },
        "noteResourceMismatch": {
          "!type": "fn(tag: +java.lang.Object) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#noteResourceMismatch(java.lang.Object)"
        },
        "vmCleartextNetworkEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#vmCleartextNetworkEnabled()"
        },
        "onWebViewMethodCalledOnWrongThread": {
          "!type": "fn(originStack: +java.lang.Throwable) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#onWebViewMethodCalledOnWrongThread(java.lang.Throwable)"
        },
        "allowThreadDiskReads": {
          "!type": "fn() -> +android.os.StrictMode.ThreadPolicy",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#allowThreadDiskReads()"
        },
        "setThreadPolicy": {
          "!type": "fn(policy: +android.os.StrictMode.ThreadPolicy) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#setThreadPolicy(android.os.StrictMode.ThreadPolicy)"
        },
        "noteSlowCall": {
          "!type": "fn(name: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#noteSlowCall(java.lang.String)"
        },
        "getThreadPolicyMask": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#getThreadPolicyMask()"
        },
        "allowThreadDiskWrites": {
          "!type": "fn() -> +android.os.StrictMode.ThreadPolicy",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#allowThreadDiskWrites()"
        },
        "getThreadPolicy": {
          "!type": "fn() -> +android.os.StrictMode.ThreadPolicy",
          "!url": "http://developer.android.com/reference/android/os/StrictMode.html#getThreadPolicy()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "ServiceManager": {
        "!url": "http://developer.android.com/reference/android/os/ServiceManager.html",
        "!type": "fn()",
        "checkService": {
          "!type": "fn(name: string) -> +android.os.IBinder",
          "!url": "http://developer.android.com/reference/android/os/ServiceManager.html#checkService(java.lang.String)"
        },
        "listServices": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/ServiceManager.html#listServices()"
        },
        "getService": {
          "!type": "fn(name: string) -> +android.os.IBinder",
          "!url": "http://developer.android.com/reference/android/os/ServiceManager.html#getService(java.lang.String)"
        },
        "addService": {
          "!type": "fn(name: string, service: +android.os.IBinder) -> void",
          "!url": "http://developer.android.com/reference/android/os/ServiceManager.html#addService(java.lang.String, android.os.IBinder)"
        },
        "initServiceCache": {
          "!type": "fn(cache: +java.util.Map) -> void",
          "!url": "http://developer.android.com/reference/android/os/ServiceManager.html#initServiceCache(java.util.Map)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "SystemPropertiesTest": {
        "!url": "http://developer.android.com/reference/android/os/SystemPropertiesTest.html",
        "!type": "fn()",
        "prototype": {
          "testProperties": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/SystemPropertiesTest.html#testProperties()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "PowerManagerInternal": {
        "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html",
        "!type": "fn()",
        "WAKEFULNESS_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#WAKEFULNESS_AWAKE"
        },
        "WAKEFULNESS_DOZING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#WAKEFULNESS_DOZING"
        },
        "WAKEFULNESS_DREAMING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#WAKEFULNESS_DREAMING"
        },
        "WAKEFULNESS_ASLEEP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#WAKEFULNESS_ASLEEP"
        },
        "wakefulnessToString": {
          "!type": "fn(wakefulness: number) -> string",
          "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#wakefulnessToString(int)"
        },
        "isInteractive": {
          "!type": "fn(wakefulness: number) -> bool",
          "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#isInteractive(int)"
        },
        "prototype": {
          "setButtonBrightnessOverrideFromWindowManager": {
            "!type": "fn(brightness: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setButtonBrightnessOverrideFromWindowManager(int)"
          },
          "setUserActivityTimeoutOverrideFromWindowManager": {
            "!type": "fn(timeoutMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setUserActivityTimeoutOverrideFromWindowManager(long)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "uidGone": {
            "!type": "fn(uid: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#uidGone(int)"
          },
          "setDozeOverrideFromDreamManager": {
            "!type": "fn(screenState: number, screenBrightness: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setDozeOverrideFromDreamManager(int, int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "registerLowPowerModeObserver": {
            "!type": "fn(listener: +android.os.PowerManagerInternal.LowPowerModeListener) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#registerLowPowerModeObserver(android.os.PowerManagerInternal.LowPowerModeListener)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getLowPowerModeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#getLowPowerModeEnabled()"
          },
          "updateUidProcState": {
            "!type": "fn(uid: number, procState: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#updateUidProcState(int, int)"
          },
          "setDeviceIdleTempWhitelist": {
            "!type": "fn(appids: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setDeviceIdleTempWhitelist(int[])"
          },
          "setScreenBrightnessOverrideFromWindowManager": {
            "!type": "fn(brightness: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setScreenBrightnessOverrideFromWindowManager(int)"
          },
          "setMaximumScreenOffTimeoutFromDeviceAdmin": {
            "!type": "fn(timeMs: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setMaximumScreenOffTimeoutFromDeviceAdmin(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setDeviceIdleMode": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setDeviceIdleMode(boolean)"
          },
          "setDeviceIdleWhitelist": {
            "!type": "fn(appids: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerInternal.html#setDeviceIdleWhitelist(int[])"
          }
        }
      },
      "WorkSource": {
        "!url": "http://developer.android.com/reference/android/os/WorkSource.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/WorkSource.html#CREATOR"
        },
        "prototype": {
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#writeToParcel(android.os.Parcel, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setReturningDiffs": {
            "!type": "fn(other: +android.os.WorkSource) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#setReturningDiffs(android.os.WorkSource)"
          },
          "addReturningNewbs": {
            "!type": "fn(other: +android.os.WorkSource) -> +android.os.WorkSource",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#addReturningNewbs(android.os.WorkSource)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#describeContents()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "diff": {
            "!type": "fn(other: +android.os.WorkSource) -> bool",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#diff(android.os.WorkSource)"
          },
          "set": {
            "!type": "fn(other: +android.os.WorkSource) -> void",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#set(android.os.WorkSource)"
          },
          "stripNames": {
            "!type": "fn() -> +android.os.WorkSource",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#stripNames()"
          },
          "getName": {
            "!type": "fn(index: number) -> string",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#getName(int)"
          },
          "add": {
            "!type": "fn(other: +android.os.WorkSource) -> bool",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#add(android.os.WorkSource)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#size()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#hashCode()"
          },
          "get": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#get(int)"
          },
          "clearNames": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#clearNames()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(other: +android.os.WorkSource) -> bool",
            "!url": "http://developer.android.com/reference/android/os/WorkSource.html#remove(android.os.WorkSource)"
          }
        }
      },
      "NullVibrator": {
        "!url": "http://developer.android.com/reference/android/os/NullVibrator.html",
        "getInstance": {
          "!type": "fn() -> +android.os.NullVibrator",
          "!url": "http://developer.android.com/reference/android/os/NullVibrator.html#getInstance()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "hasVibrator": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/NullVibrator.html#hasVibrator()"
          },
          "vibrate": {
            "!type": "fn(uid: number, opPkg: string, milliseconds: +java.lang.Long, attributes: +android.media.AudioAttributes) -> void",
            "!url": "http://developer.android.com/reference/android/os/NullVibrator.html#vibrate(int, java.lang.String, long, android.media.AudioAttributes)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/NullVibrator.html#cancel()"
          }
        }
      },
      "Parcel": {
        "!url": "http://developer.android.com/reference/android/os/Parcel.html",
        "STRING_CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/Parcel.html#STRING_CREATOR"
        },
        "getGlobalAllocCount": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Parcel.html#getGlobalAllocCount()"
        },
        "obtain": {
          "!type": "fn() -> +android.os.Parcel",
          "!url": "http://developer.android.com/reference/android/os/Parcel.html#obtain()"
        },
        "getGlobalAllocSize": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Parcel.html#getGlobalAllocSize()"
        },
        "prototype": {
          "writeString": {
            "!type": "fn(val: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeString(java.lang.String)"
          },
          "dataCapacity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#dataCapacity()"
          },
          "readSparseArray": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +android.util.SparseArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readSparseArray(java.lang.ClassLoader)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "createTypedArrayList": {
            "!type": "fn(c: +android.os.Parcelable.Creator) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createTypedArrayList(android.os.Parcelable.Creator)"
          },
          "readSize": {
            "!type": "fn() -> +android.util.Size",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readSize()"
          },
          "writePersistableBundle": {
            "!type": "fn(val: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writePersistableBundle(android.os.PersistableBundle)"
          },
          "writeLongArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeLongArray(long[])"
          },
          "readByte": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readByte()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "writeBlob": {
            "!type": "fn(b: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeBlob(byte[])"
          },
          "readTypedArray": {
            "!type": "fn(val: +java.newArray, c: +android.os.Parcelable.Creator) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readTypedArray(T[], android.os.Parcelable.Creator)"
          },
          "createIntArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createIntArray()"
          },
          "readLongArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readLongArray(long[])"
          },
          "readStringArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readStringArray(java.lang.String[])"
          },
          "restoreAllowFds": {
            "!type": "fn(lastValue: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#restoreAllowFds(boolean)"
          },
          "readTypedObject": {
            "!type": "fn(c: +android.os.Parcelable.Creator) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readTypedObject(android.os.Parcelable.Creator)"
          },
          "writeStrongInterface": {
            "!type": "fn(val: +android.os.IInterface) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeStrongInterface(android.os.IInterface)"
          },
          "readStringList": {
            "!type": "fn(list: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readStringList(java.util.List)"
          },
          "createLongArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createLongArray()"
          },
          "readHashMap": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +java.util.HashMap",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readHashMap(java.lang.ClassLoader)"
          },
          "readParcelableArray": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readParcelableArray(java.lang.ClassLoader)"
          },
          "enforceInterface": {
            "!type": "fn(interfaceName: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#enforceInterface(java.lang.String)"
          },
          "marshall": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#marshall()"
          },
          "setDataCapacity": {
            "!type": "fn(size: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#setDataCapacity(int)"
          },
          "writeDouble": {
            "!type": "fn(val: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeDouble(double)"
          },
          "writeArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeArray(java.lang.Object[])"
          },
          "readArrayMap": {
            "!type": "fn(outVal: +android.util.ArrayMap, loader: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readArrayMap(android.util.ArrayMap, java.lang.ClassLoader)"
          },
          "writeFloat": {
            "!type": "fn(val: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeFloat(float)"
          },
          "readRawFileDescriptor": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readRawFileDescriptor()"
          },
          "readValue": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readValue(java.lang.ClassLoader)"
          },
          "writeFileDescriptor": {
            "!type": "fn(val: +java.io.FileDescriptor) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeFileDescriptor(java.io.FileDescriptor)"
          },
          "readBlob": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readBlob()"
          },
          "writeCharSequenceArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeCharSequenceArray(java.lang.CharSequence[])"
          },
          "writeBinderArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeBinderArray(android.os.IBinder[])"
          },
          "hasFileDescriptors": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#hasFileDescriptors()"
          },
          "readFileDescriptor": {
            "!type": "fn() -> +android.os.ParcelFileDescriptor",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readFileDescriptor()"
          },
          "readFloatArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readFloatArray(float[])"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "writeDoubleArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeDoubleArray(double[])"
          },
          "readParcelableCreator": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readParcelableCreator(java.lang.ClassLoader)"
          },
          "createBinderArrayList": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createBinderArrayList()"
          },
          "createTypedArray": {
            "!type": "fn(c: +android.os.Parcelable.Creator) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createTypedArray(android.os.Parcelable.Creator)"
          },
          "writeSerializable": {
            "!type": "fn(s: +java.io.Serializable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeSerializable(java.io.Serializable)"
          },
          "readParcelable": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +android.os.Parcelable",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readParcelable(java.lang.ClassLoader)"
          },
          "readSizeF": {
            "!type": "fn() -> +android.util.SizeF",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readSizeF()"
          },
          "writeCharSequenceList": {
            "!type": "fn(val: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeCharSequenceList(java.util.ArrayList)"
          },
          "writeTypedArray": {
            "!type": "fn(val: +java.newArray, parcelableFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeTypedArray(T[], int)"
          },
          "writeLong": {
            "!type": "fn(val: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeLong(long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeParcelableArray": {
            "!type": "fn(value: +java.newArray, parcelableFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeParcelableArray(T[], int)"
          },
          "readCharSequence": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readCharSequence()"
          },
          "createBinderArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createBinderArray()"
          },
          "readString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readString()"
          },
          "writeStrongBinder": {
            "!type": "fn(val: +android.os.IBinder) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeStrongBinder(android.os.IBinder)"
          },
          "writeStringList": {
            "!type": "fn(val: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeStringList(java.util.List)"
          },
          "createDoubleArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createDoubleArray()"
          },
          "readBinderList": {
            "!type": "fn(list: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readBinderList(java.util.List)"
          },
          "writeBundle": {
            "!type": "fn(val: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeBundle(android.os.Bundle)"
          },
          "writeArrayMap": {
            "!type": "fn(val: +android.util.ArrayMap) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeArrayMap(android.util.ArrayMap)"
          },
          "writeCharArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeCharArray(char[])"
          },
          "readBooleanArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readBooleanArray(boolean[])"
          },
          "readArrayList": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readArrayList(java.lang.ClassLoader)"
          },
          "writeInt": {
            "!type": "fn(val: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeInt(int)"
          },
          "readPersistableBundle": {
            "!type": "fn() -> +android.os.PersistableBundle",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readPersistableBundle()"
          },
          "writeMap": {
            "!type": "fn(val: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeMap(java.util.Map)"
          },
          "readCreator": {
            "!type": "fn(creator: +android.os.Parcelable.Creator, loader: +java.lang.ClassLoader) -> +android.os.Parcelable",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readCreator(android.os.Parcelable.Creator, java.lang.ClassLoader)"
          },
          "readLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readLong()"
          },
          "writeTypedList": {
            "!type": "fn(val: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeTypedList(java.util.List)"
          },
          "createFloatArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createFloatArray()"
          },
          "writeFloatArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeFloatArray(float[])"
          },
          "readIntArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readIntArray(int[])"
          },
          "pushAllowFds": {
            "!type": "fn(allowFds: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#pushAllowFds(boolean)"
          },
          "readArray": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readArray(java.lang.ClassLoader)"
          },
          "writeByteArray": {
            "!type": "fn(b: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeByteArray(byte[])"
          },
          "writeSparseArray": {
            "!type": "fn(val: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeSparseArray(android.util.SparseArray)"
          },
          "readFloat": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readFloat()"
          },
          "writeTypedObject": {
            "!type": "fn(val: +android.os.Parcelable, parcelableFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeTypedObject(T, int)"
          },
          "readTypedList": {
            "!type": "fn(list: +java.util.List, c: +android.os.Parcelable.Creator) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readTypedList(java.util.List, android.os.Parcelable.Creator)"
          },
          "readCharSequenceList": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readCharSequenceList()"
          },
          "readBinderArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readBinderArray(android.os.IBinder[])"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "readByteArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readByteArray(byte[])"
          },
          "readDouble": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readDouble()"
          },
          "writeList": {
            "!type": "fn(val: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeList(java.util.List)"
          },
          "createCharArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createCharArray()"
          },
          "readDoubleArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readDoubleArray(double[])"
          },
          "unmarshall": {
            "!type": "fn(data: +java.newArray, offset: number, length: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#unmarshall(byte[], int, int)"
          },
          "readCharArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readCharArray(char[])"
          },
          "getBlobAshmemSize": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#getBlobAshmemSize()"
          },
          "writeStringArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeStringArray(java.lang.String[])"
          },
          "readSparseBooleanArray": {
            "!type": "fn() -> +android.util.SparseBooleanArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readSparseBooleanArray()"
          },
          "createStringArrayList": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createStringArrayList()"
          },
          "dataSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#dataSize()"
          },
          "recycle": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#recycle()"
          },
          "writeParcelable": {
            "!type": "fn(p: +android.os.Parcelable, parcelableFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeParcelable(android.os.Parcelable, int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "createByteArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createByteArray()"
          },
          "dataAvail": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#dataAvail()"
          },
          "writeSparseBooleanArray": {
            "!type": "fn(val: +android.util.SparseBooleanArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeSparseBooleanArray(android.util.SparseBooleanArray)"
          },
          "writeParcelableCreator": {
            "!type": "fn(p: +android.os.Parcelable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeParcelableCreator(android.os.Parcelable)"
          },
          "readCharSequenceArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readCharSequenceArray()"
          },
          "writeSize": {
            "!type": "fn(val: +android.util.Size) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeSize(android.util.Size)"
          },
          "writeException": {
            "!type": "fn(e: +java.lang.Exception) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeException(java.lang.Exception)"
          },
          "writeByte": {
            "!type": "fn(val: +java.lang.Byte) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeByte(byte)"
          },
          "readSerializable": {
            "!type": "fn() -> +java.io.Serializable",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readSerializable()"
          },
          "writeValue": {
            "!type": "fn(v: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeValue(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "createStringArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createStringArray()"
          },
          "dataPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#dataPosition()"
          },
          "readList": {
            "!type": "fn(outVal: +java.util.List, loader: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readList(java.util.List, java.lang.ClassLoader)"
          },
          "writeIntArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeIntArray(int[])"
          },
          "writeBinderList": {
            "!type": "fn(val: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeBinderList(java.util.List)"
          },
          "writeNoException": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeNoException()"
          },
          "writeBooleanArray": {
            "!type": "fn(val: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeBooleanArray(boolean[])"
          },
          "appendFrom": {
            "!type": "fn(parcel: +android.os.Parcel, offset: number, length: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#appendFrom(android.os.Parcel, int, int)"
          },
          "readStrongBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readStrongBinder()"
          },
          "writeSizeF": {
            "!type": "fn(val: +android.util.SizeF) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeSizeF(android.util.SizeF)"
          },
          "writeCharSequence": {
            "!type": "fn(val: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeCharSequence(java.lang.CharSequence)"
          },
          "readExceptionCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readExceptionCode()"
          },
          "setDataPosition": {
            "!type": "fn(pos: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#setDataPosition(int)"
          },
          "createBooleanArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#createBooleanArray()"
          },
          "writeInterfaceToken": {
            "!type": "fn(interfaceName: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#writeInterfaceToken(java.lang.String)"
          },
          "readInt": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readInt()"
          },
          "setDataSize": {
            "!type": "fn(size: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#setDataSize(int)"
          },
          "readBundle": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readBundle()"
          },
          "readMap": {
            "!type": "fn(outVal: +java.util.Map, loader: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readMap(java.util.Map, java.lang.ClassLoader)"
          },
          "readException": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Parcel.html#readException()"
          }
        }
      },
      "ResultReceiver": {
        "!url": "http://developer.android.com/reference/android/os/ResultReceiver.html",
        "!type": "fn(handler: +android.os.Handler)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/ResultReceiver.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ResultReceiver.html#describeContents()"
          },
          "send": {
            "!type": "fn(resultCode: number, resultData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/ResultReceiver.html#send(int, android.os.Bundle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ResultReceiver.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "RegistrantList": {
        "!url": "http://developer.android.com/reference/android/os/RegistrantList.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "get": {
            "!type": "fn(index: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#get(int)"
          },
          "notifyRegistrants": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#notifyRegistrants()"
          },
          "remove": {
            "!type": "fn(h: +android.os.Handler) -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#remove(android.os.Handler)"
          },
          "removeCleared": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#removeCleared()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notifyResult": {
            "!type": "fn(result: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#notifyResult(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "add": {
            "!type": "fn(h: +android.os.Handler, what: number, obj: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#add(android.os.Handler, int, java.lang.Object)"
          },
          "addUnique": {
            "!type": "fn(h: +android.os.Handler, what: number, obj: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#addUnique(android.os.Handler, int, java.lang.Object)"
          },
          "notifyException": {
            "!type": "fn(exception: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#notifyException(java.lang.Throwable)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/RegistrantList.html#size()"
          }
        }
      },
      "PerformanceCollector": {
        "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html",
        "!type": "fn()",
        "METRIC_KEY_GLOBAL_FREED_SIZE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_GLOBAL_FREED_SIZE"
        },
        "METRIC_KEY_JAVA_SHARED_DIRTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_JAVA_SHARED_DIRTY"
        },
        "METRIC_KEY_JAVA_PRIVATE_DIRTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_JAVA_PRIVATE_DIRTY"
        },
        "METRIC_KEY_NATIVE_PRIVATE_DIRTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_NATIVE_PRIVATE_DIRTY"
        },
        "METRIC_KEY_NATIVE_FREE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_NATIVE_FREE"
        },
        "METRIC_KEY_OTHER_PSS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_OTHER_PSS"
        },
        "METRIC_KEY_OTHER_SHARED_DIRTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_OTHER_SHARED_DIRTY"
        },
        "METRIC_KEY_JAVA_ALLOCATED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_JAVA_ALLOCATED"
        },
        "METRIC_KEY_NATIVE_SIZE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_NATIVE_SIZE"
        },
        "METRIC_KEY_NATIVE_ALLOCATED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_NATIVE_ALLOCATED"
        },
        "METRIC_KEY_GC_INVOCATION_COUNT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_GC_INVOCATION_COUNT"
        },
        "METRIC_KEY_LABEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_LABEL"
        },
        "METRIC_KEY_GLOBAL_ALLOC_COUNT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_GLOBAL_ALLOC_COUNT"
        },
        "METRIC_KEY_PRE_SENT_TRANSACTIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_PRE_SENT_TRANSACTIONS"
        },
        "METRIC_KEY_PRE_RECEIVED_TRANSACTIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_PRE_RECEIVED_TRANSACTIONS"
        },
        "METRIC_KEY_JAVA_PSS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_JAVA_PSS"
        },
        "METRIC_KEY_NATIVE_PSS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_NATIVE_PSS"
        },
        "METRIC_KEY_OTHER_PRIVATE_DIRTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_OTHER_PRIVATE_DIRTY"
        },
        "METRIC_KEY_ITERATIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_ITERATIONS"
        },
        "METRIC_KEY_CPU_TIME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_CPU_TIME"
        },
        "METRIC_KEY_EXECUTION_TIME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_EXECUTION_TIME"
        },
        "METRIC_KEY_JAVA_FREE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_JAVA_FREE"
        },
        "METRIC_KEY_GLOBAL_FREED_COUNT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_GLOBAL_FREED_COUNT"
        },
        "METRIC_KEY_GLOBAL_ALLOC_SIZE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_GLOBAL_ALLOC_SIZE"
        },
        "METRIC_KEY_JAVA_SIZE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_JAVA_SIZE"
        },
        "METRIC_KEY_NATIVE_SHARED_DIRTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_NATIVE_SHARED_DIRTY"
        },
        "METRIC_KEY_SENT_TRANSACTIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_SENT_TRANSACTIONS"
        },
        "METRIC_KEY_RECEIVED_TRANSACTIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#METRIC_KEY_RECEIVED_TRANSACTIONS"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "addIteration": {
            "!type": "fn(label: string) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#addIteration(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "addMeasurement": {
            "!type": "fn(label: string, value: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#addMeasurement(java.lang.String, long)"
          },
          "beginSnapshot": {
            "!type": "fn(label: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#beginSnapshot(java.lang.String)"
          },
          "startTiming": {
            "!type": "fn(label: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#startTiming(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "stopTiming": {
            "!type": "fn(label: string) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#stopTiming(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "endSnapshot": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#endSnapshot()"
          },
          "setPerformanceResultsWriter": {
            "!type": "fn(writer: +android.os.PerformanceCollector.PerformanceResultsWriter) -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollector.html#setPerformanceResultsWriter(android.os.PerformanceCollector.PerformanceResultsWriter)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "OperationCanceledException": {
        "!url": "http://developer.android.com/reference/android/os/OperationCanceledException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IdleHandlerTest": {
        "!url": "http://developer.android.com/reference/android/os/IdleHandlerTest.html",
        "!type": "fn()",
        "prototype": {
          "testOneShotLater": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/IdleHandlerTest.html#testOneShotLater()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testOneShotFirst": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/IdleHandlerTest.html#testOneShotFirst()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testRepeatedLater": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/IdleHandlerTest.html#testRepeatedLater()"
          },
          "testRepeatedFirst": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/IdleHandlerTest.html#testRepeatedFirst()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InputMethodSubtypeSwitchingControllerTest": {
        "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeSwitchingControllerTest.html",
        "!type": "fn()",
        "prototype": {
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testControllerImplWithUserAction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeSwitchingControllerTest.html#testControllerImplWithUserAction()"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testControllerImpl": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeSwitchingControllerTest.html#testControllerImpl()"
          },
          "testImeSubtypeListItem": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeSwitchingControllerTest.html#testImeSubtypeListItem()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "HandlerTester": {
        "!url": "http://developer.android.com/reference/android/os/HandlerTester.html",
        "!type": "fn()",
        "NORM_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#NORM_PRIORITY"
        },
        "MAX_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MAX_PRIORITY"
        },
        "MIN_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MIN_PRIORITY"
        },
        "interrupted": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupted()"
        },
        "getAllStackTraces": {
          "!type": "fn() -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getAllStackTraces()"
        },
        "yield": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#yield()"
        },
        "currentThread": {
          "!type": "fn() -> +java.lang.Thread",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#currentThread()"
        },
        "dumpStack": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#dumpStack()"
        },
        "getDefaultUncaughtExceptionHandler": {
          "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getDefaultUncaughtExceptionHandler()"
        },
        "holdsLock": {
          "!type": "fn(object: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#holdsLock(java.lang.Object)"
        },
        "sleep": {
          "!type": "fn(time: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#sleep(long)"
        },
        "enumerate": {
          "!type": "fn(threads: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#enumerate(java.lang.Thread[])"
        },
        "setDefaultUncaughtExceptionHandler": {
          "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
        },
        "activeCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#activeCount()"
        },
        "prototype": {
          "handleMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerTester.html#handleMessage(android.os.Message)"
          },
          "pushInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#pushInterruptAction$(java.lang.Runnable)"
          },
          "interrupt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupt()"
          },
          "failure": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerTester.html#failure()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "popInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#popInterruptAction$(java.lang.Runnable)"
          },
          "getThreadGroup": {
            "!type": "fn() -> +java.lang.ThreadGroup",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getThreadGroup()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getStackTrace()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setDaemon": {
            "!type": "fn(isDaemon: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDaemon(boolean)"
          },
          "go": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerTester.html#go()"
          },
          "resume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#resume()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isInterrupted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isInterrupted()"
          },
          "join": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#join()"
          },
          "getPriority": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getPriority()"
          },
          "doTest": {
            "!type": "fn(timeout: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerTester.html#doTest(long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setUncaughtExceptionHandler": {
            "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
          },
          "stop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#stop()"
          },
          "parkUntil$": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkUntil$(long)"
          },
          "getContextClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getContextClassLoader()"
          },
          "isAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isAlive()"
          },
          "run": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerTester.html#run()"
          },
          "start": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#start()"
          },
          "setPriority": {
            "!type": "fn(priority: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setPriority(int)"
          },
          "isDaemon": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isDaemon()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#checkAccess()"
          },
          "suspend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#suspend()"
          },
          "countStackFrames": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#countStackFrames()"
          },
          "unpark$": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#unpark$()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getName()"
          },
          "success": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerTester.html#success()"
          },
          "setName": {
            "!type": "fn(threadName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setName(java.lang.String)"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#destroy()"
          },
          "parkFor$": {
            "!type": "fn(nanos: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkFor$(long)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUncaughtExceptionHandler": {
            "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getUncaughtExceptionHandler()"
          },
          "getState": {
            "!type": "fn() -> +java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getState()"
          },
          "getId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getId()"
          },
          "setContextClassLoader": {
            "!type": "fn(cl: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setContextClassLoader(java.lang.ClassLoader)"
          }
        }
      },
      "ServiceManagerNative": {
        "!url": "http://developer.android.com/reference/android/os/ServiceManagerNative.html",
        "!type": "fn()",
        "blockUntilThreadAvailable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#blockUntilThreadAvailable()"
        },
        "getThreadStrictModePolicy": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getThreadStrictModePolicy()"
        },
        "setDumpDisabled": {
          "!type": "fn(msg: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setDumpDisabled(java.lang.String)"
        },
        "clearCallingIdentity": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"
        },
        "flushPendingCommands": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"
        },
        "setThreadStrictModePolicy": {
          "!type": "fn(policyMask: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setThreadStrictModePolicy(int)"
        },
        "asInterface": {
          "!type": "fn(obj: +android.os.IBinder) -> +android.os.IServiceManager",
          "!url": "http://developer.android.com/reference/android/os/ServiceManagerNative.html#asInterface(android.os.IBinder)"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"
        },
        "getCallingPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingPid()"
        },
        "isProxy": {
          "!type": "fn(iface: +android.os.IInterface) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#isProxy(android.os.IInterface)"
        },
        "joinThreadPool": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"
        },
        "getCallingUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUid()"
        },
        "restoreCallingIdentity": {
          "!type": "fn(token: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "linkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "dumpAsync": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor, java.lang.String[])"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor, java.lang.String[])"
          },
          "attachInterface": {
            "!type": "fn(owner: +android.os.IInterface, descriptor: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface, java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isBinderAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onTransact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/ServiceManagerNative.html#onTransact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unlinkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "transact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#transact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "asBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/ServiceManagerNative.html#asBinder()"
          },
          "getInterfaceDescriptor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"
          },
          "pingBinder": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#pingBinder()"
          },
          "queryLocalInterface": {
            "!type": "fn(descriptor: string) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "ProcessTest": {
        "!url": "http://developer.android.com/reference/android/os/ProcessTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testProcessGetUidFromName": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ProcessTest.html#testProcessGetUidFromName()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testProcessGetUidFromNameFailure": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ProcessTest.html#testProcessGetUidFromNameFailure()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CancellationSignal": {
        "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html",
        "!type": "fn()",
        "createTransport": {
          "!type": "fn() -> ICancellationSignal",
          "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#createTransport()"
        },
        "fromTransport": {
          "!type": "fn(transport: ICancellationSignal) -> +android.os.CancellationSignal",
          "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#fromTransport(ICancellationSignal)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "isCanceled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#isCanceled()"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.os.CancellationSignal.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#setOnCancelListener(android.os.CancellationSignal.OnCancelListener)"
          },
          "throwIfCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#throwIfCanceled()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setRemote": {
            "!type": "fn(remote: ICancellationSignal) -> void",
            "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#setRemote(ICancellationSignal)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CancellationSignal.html#cancel()"
          }
        }
      },
      "RemoteMailException": {
        "!url": "http://developer.android.com/reference/android/os/RemoteMailException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Environment": {
        "!url": "http://developer.android.com/reference/android/os/Environment.html",
        "!type": "fn()",
        "UserEnvironment": {
          "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html",
          "!type": "fn(userId: number)",
          "prototype": {
            "buildExternalStorageAndroidDataDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAndroidDataDirs()"
            },
            "buildExternalStorageAppObbDirs": {
              "!type": "fn(packageName: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAppObbDirs(java.lang.String)"
            },
            "buildExternalStorageAppFilesDirs": {
              "!type": "fn(packageName: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAppFilesDirs(java.lang.String)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getExternalDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#getExternalDirs()"
            },
            "buildExternalStoragePublicDirs": {
              "!type": "fn(type: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStoragePublicDirs(java.lang.String)"
            },
            "buildExternalStorageAppDataDirs": {
              "!type": "fn(packageName: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAppDataDirs(java.lang.String)"
            },
            "buildExternalStorageAppCacheDirs": {
              "!type": "fn(packageName: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAppCacheDirs(java.lang.String)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getExternalStoragePublicDirectory": {
              "!type": "fn(type: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#getExternalStoragePublicDirectory(java.lang.String)"
            },
            "buildExternalStorageAndroidObbDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAndroidObbDirs()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "buildExternalStorageAppMediaDirs": {
              "!type": "fn(packageName: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#buildExternalStorageAppMediaDirs(java.lang.String)"
            },
            "getExternalStorageDirectory": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/os/Environment.UserEnvironment.html#getExternalStorageDirectory()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "DIRECTORY_PODCASTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_PODCASTS"
        },
        "DIRECTORY_ALARMS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_ALARMS"
        },
        "MEDIA_REMOVED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_REMOVED"
        },
        "DIRECTORY_PICTURES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_PICTURES"
        },
        "MEDIA_UNMOUNTED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_UNMOUNTED"
        },
        "MEDIA_NOFS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_NOFS"
        },
        "MEDIA_UNKNOWN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_UNKNOWN"
        },
        "DIRECTORY_DCIM": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DCIM"
        },
        "MEDIA_BAD_REMOVAL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_BAD_REMOVAL"
        },
        "MEDIA_SHARED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_SHARED"
        },
        "DIRECTORY_NOTIFICATIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_NOTIFICATIONS"
        },
        "MEDIA_MOUNTED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_MOUNTED"
        },
        "MEDIA_EJECTING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_EJECTING"
        },
        "DIRECTORY_MUSIC": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_MUSIC"
        },
        "DIRECTORY_RINGTONES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_RINGTONES"
        },
        "DIR_ANDROID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIR_ANDROID"
        },
        "DIRECTORY_DOCUMENTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DOCUMENTS"
        },
        "DIRECTORY_DOWNLOADS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_DOWNLOADS"
        },
        "DIRECTORY_ANDROID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_ANDROID"
        },
        "DIRECTORY_MOVIES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#DIRECTORY_MOVIES"
        },
        "MEDIA_CHECKING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_CHECKING"
        },
        "MEDIA_MOUNTED_READ_ONLY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_MOUNTED_READ_ONLY"
        },
        "MEDIA_UNMOUNTABLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#MEDIA_UNMOUNTABLE"
        },
        "isExternalStorageRemovable": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#isExternalStorageRemovable()"
        },
        "buildExternalStorageAndroidDataDirs": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildExternalStorageAndroidDataDirs()"
        },
        "buildPath": {
          "!type": "fn(base: +java.io.File, segments: +java.newArray) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildPath(java.io.File, java.lang.String[])"
        },
        "buildExternalStorageAppFilesDirs": {
          "!type": "fn(packageName: string) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildExternalStorageAppFilesDirs(java.lang.String)"
        },
        "buildExternalStorageAppObbDirs": {
          "!type": "fn(packageName: string) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildExternalStorageAppObbDirs(java.lang.String)"
        },
        "initForCurrentUser": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#initForCurrentUser()"
        },
        "getDownloadCacheDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getDownloadCacheDirectory()"
        },
        "getSecureDataDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getSecureDataDirectory()"
        },
        "getOemDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getOemDirectory()"
        },
        "getStorageState": {
          "!type": "fn(path: +java.io.File) -> string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getStorageState(java.io.File)"
        },
        "buildExternalStorageAppDataDirs": {
          "!type": "fn(packageName: string) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildExternalStorageAppDataDirs(java.lang.String)"
        },
        "setUserRequired": {
          "!type": "fn(userRequired: bool) -> void",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#setUserRequired(boolean)"
        },
        "getUserSystemDirectory": {
          "!type": "fn(userId: number) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getUserSystemDirectory(int)"
        },
        "buildExternalStorageAppCacheDirs": {
          "!type": "fn(packageName: string) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildExternalStorageAppCacheDirs(java.lang.String)"
        },
        "getSystemSecureDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getSystemSecureDirectory()"
        },
        "getLegacyExternalStorageDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getLegacyExternalStorageDirectory()"
        },
        "isEncryptedFilesystemEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#isEncryptedFilesystemEnabled()"
        },
        "maybeTranslateEmulatedPathToInternal": {
          "!type": "fn(path: +java.io.File) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#maybeTranslateEmulatedPathToInternal(java.io.File)"
        },
        "getRootDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getRootDirectory()"
        },
        "getExternalStoragePublicDirectory": {
          "!type": "fn(type: string) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getExternalStoragePublicDirectory(java.lang.String)"
        },
        "isExternalStorageEmulated": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#isExternalStorageEmulated()"
        },
        "getLegacyExternalStorageObbDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getLegacyExternalStorageObbDirectory()"
        },
        "getDataUserPackageDirectory": {
          "!type": "fn(volumeUuid: string, userId: number, packageName: string) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getDataUserPackageDirectory(java.lang.String, int, java.lang.String)"
        },
        "getVendorDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getVendorDirectory()"
        },
        "getDataUserDirectory": {
          "!type": "fn(volumeUuid: string) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getDataUserDirectory(java.lang.String)"
        },
        "buildExternalStorageAppMediaDirs": {
          "!type": "fn(packageName: string) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildExternalStorageAppMediaDirs(java.lang.String)"
        },
        "getDataDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getDataDirectory()"
        },
        "getExternalStorageState": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getExternalStorageState()"
        },
        "getUserConfigDirectory": {
          "!type": "fn(userId: number) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getUserConfigDirectory(int)"
        },
        "getExternalStorageDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getExternalStorageDirectory()"
        },
        "getStorageDirectory": {
          "!type": "fn() -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getStorageDirectory()"
        },
        "buildPaths": {
          "!type": "fn(base: +java.newArray, segments: +java.newArray) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#buildPaths(java.io.File[], java.lang.String[])"
        },
        "getDataAppDirectory": {
          "!type": "fn(volumeUuid: string) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/Environment.html#getDataAppDirectory(java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Debug": {
        "!url": "http://developer.android.com/reference/android/os/Debug.html",
        "MemoryInfo": {
          "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html",
          "!type": "fn()",
          "NUM_OTHER_STATS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#NUM_OTHER_STATS"
          },
          "OTHER_DALVIK_ACCOUNTING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_ACCOUNTING"
          },
          "OTHER_DALVIK_OTHER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_OTHER"
          },
          "OTHER_APK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_APK"
          },
          "OTHER_UNKNOWN_MAP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_UNKNOWN_MAP"
          },
          "offsetSharedDirty": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetSharedDirty"
          },
          "OTHER_DALVIK_NORMAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_NORMAL"
          },
          "OTHER_DALVIK_NON_MOVING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_NON_MOVING"
          },
          "OTHER_DEX": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DEX"
          },
          "OTHER_DALVIK_LINEARALLOC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_LINEARALLOC"
          },
          "OTHER_OAT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_OAT"
          },
          "OTHER_GL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_GL"
          },
          "OTHER_ASHMEM": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_ASHMEM"
          },
          "offsetSwappablePss": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetSwappablePss"
          },
          "OTHER_SO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_SO"
          },
          "OTHER_ART": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_ART"
          },
          "OTHER_DALVIK_LARGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_LARGE"
          },
          "offsetPrivateDirty": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetPrivateDirty"
          },
          "offsetSharedClean": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetSharedClean"
          },
          "HEAP_UNKNOWN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#HEAP_UNKNOWN"
          },
          "offsetSwappedOut": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetSwappedOut"
          },
          "NUM_CATEGORIES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#NUM_CATEGORIES"
          },
          "HEAP_NATIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#HEAP_NATIVE"
          },
          "OTHER_TTF": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_TTF"
          },
          "NUM_DVK_STATS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#NUM_DVK_STATS"
          },
          "OTHER_GRAPHICS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_GRAPHICS"
          },
          "OTHER_DALVIK_INDIRECT_REFERENCE_TABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_INDIRECT_REFERENCE_TABLE"
          },
          "OTHER_DALVIK_CODE_CACHE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_CODE_CACHE"
          },
          "OTHER_GL_DEV": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_GL_DEV"
          },
          "OTHER_DALVIK_ZYGOTE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_DALVIK_ZYGOTE"
          },
          "offsetPrivateClean": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetPrivateClean"
          },
          "OTHER_STACK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_STACK"
          },
          "OTHER_UNKNOWN_DEV": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_UNKNOWN_DEV"
          },
          "OTHER_OTHER_MEMTRACK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_OTHER_MEMTRACK"
          },
          "offsetPss": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#offsetPss"
          },
          "HEAP_DALVIK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#HEAP_DALVIK"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#CREATOR"
          },
          "OTHER_JAR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_JAR"
          },
          "OTHER_CURSOR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#OTHER_CURSOR"
          },
          "getOtherLabel": {
            "!type": "fn(which: number) -> string",
            "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherLabel(int)"
          },
          "prototype": {
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#describeContents()"
            },
            "getOtherPrivateClean": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherPrivateClean(int)"
            },
            "getTotalPrivateDirty": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalPrivateDirty()"
            },
            "getSummaryNativeHeap": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryNativeHeap()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getOtherSharedDirty": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherSharedDirty(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getSummaryPrivateOther": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryPrivateOther()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getSummaryTotalSwap": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryTotalSwap()"
            },
            "getSummaryGraphics": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryGraphics()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getTotalUss": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalUss()"
            },
            "getOtherPrivate": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherPrivate(int)"
            },
            "getTotalPrivateClean": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalPrivateClean()"
            },
            "getSummaryJavaHeap": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryJavaHeap()"
            },
            "getSummaryStack": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryStack()"
            },
            "getOtherSharedClean": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherSharedClean(int)"
            },
            "getMemoryStats": {
              "!type": "fn() -> +java.util.Map",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getMemoryStats()"
            },
            "getSummaryTotalPss": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryTotalPss()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getMemoryStat": {
              "!type": "fn(statName: string) -> string",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getMemoryStat(java.lang.String)"
            },
            "getOtherSwappablePss": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherSwappablePss(int)"
            },
            "getTotalSharedDirty": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalSharedDirty()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "getOtherPss": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherPss(int)"
            },
            "getOtherSwappedOut": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherSwappedOut(int)"
            },
            "getOtherPrivateDirty": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getOtherPrivateDirty(int)"
            },
            "getTotalSwappedOut": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalSwappedOut()"
            },
            "getSummarySystem": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummarySystem()"
            },
            "getSummaryCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getSummaryCode()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getTotalPss": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalPss()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#readFromParcel(android.os.Parcel)"
            },
            "getTotalSwappablePss": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalSwappablePss()"
            },
            "getTotalSharedClean": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.MemoryInfo.html#getTotalSharedClean()"
            }
          }
        },
        "InstructionCount": {
          "!url": "http://developer.android.com/reference/android/os/Debug.InstructionCount.html",
          "!type": "fn()",
          "prototype": {
            "globalTotal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.InstructionCount.html#globalTotal()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "collect": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/os/Debug.InstructionCount.html#collect()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "globalMethodInvocations": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/Debug.InstructionCount.html#globalMethodInvocations()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "resetAndStart": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/os/Debug.InstructionCount.html#resetAndStart()"
            }
          }
        },
        "MEMINFO_VM_ALLOC_USED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_VM_ALLOC_USED"
        },
        "SHOW_CLASSLOADER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#SHOW_CLASSLOADER"
        },
        "MEMINFO_MAPPED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_MAPPED"
        },
        "MEMINFO_TOTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_TOTAL"
        },
        "MEMINFO_PAGE_TABLES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_PAGE_TABLES"
        },
        "SHOW_FULL_DETAIL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#SHOW_FULL_DETAIL"
        },
        "MEMINFO_SWAP_FREE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_SWAP_FREE"
        },
        "MEMINFO_CACHED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_CACHED"
        },
        "MEMINFO_COUNT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_COUNT"
        },
        "MEMINFO_FREE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_FREE"
        },
        "MEMINFO_SWAP_TOTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_SWAP_TOTAL"
        },
        "TRACE_COUNT_ALLOCS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#TRACE_COUNT_ALLOCS"
        },
        "MEMINFO_BUFFERS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_BUFFERS"
        },
        "MEMINFO_ZRAM_TOTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_ZRAM_TOTAL"
        },
        "MEMINFO_SLAB": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_SLAB"
        },
        "SHOW_INITIALIZED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#SHOW_INITIALIZED"
        },
        "MEMINFO_KERNEL_STACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_KERNEL_STACK"
        },
        "MEMINFO_SHMEM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#MEMINFO_SHMEM"
        },
        "getMemoryInfo": {
          "!type": "fn(memoryInfo: +android.os.Debug.MemoryInfo) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getMemoryInfo(android.os.Debug.MemoryInfo)"
        },
        "getGlobalGcInvocationCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalGcInvocationCount()"
        },
        "resetGlobalAllocSize": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalAllocSize()"
        },
        "waitForDebugger": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#waitForDebugger()"
        },
        "resetGlobalExternalFreedSize": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalFreedSize()"
        },
        "resetThreadAllocSize": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetThreadAllocSize()"
        },
        "resetThreadExternalAllocSize": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetThreadExternalAllocSize()"
        },
        "getGlobalFreedCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalFreedCount()"
        },
        "resetGlobalExternalFreedCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalFreedCount()"
        },
        "getGlobalExternalFreedSize": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalFreedSize()"
        },
        "getGlobalExternalAllocCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalAllocCount()"
        },
        "setFieldsOn": {
          "!type": "fn(cl: +java.lang.Class) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#setFieldsOn(java.lang.Class)"
        },
        "getBinderReceivedTransactions": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getBinderReceivedTransactions()"
        },
        "getThreadExternalAllocSize": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getThreadExternalAllocSize()"
        },
        "enableEmulatorTraceOutput": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#enableEmulatorTraceOutput()"
        },
        "setAllocationLimit": {
          "!type": "fn(limit: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#setAllocationLimit(int)"
        },
        "getGlobalExternalFreedCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalFreedCount()"
        },
        "startMethodTracingDdms": {
          "!type": "fn(bufferSize: number, flags: number, samplingEnabled: bool, intervalUs: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#startMethodTracingDdms(int, int, boolean, int)"
        },
        "getBinderLocalObjectCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getBinderLocalObjectCount()"
        },
        "resetGlobalClassInitTime": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalClassInitTime()"
        },
        "resetThreadExternalAllocCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetThreadExternalAllocCount()"
        },
        "getBinderSentTransactions": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getBinderSentTransactions()"
        },
        "getNativeHeapFreeSize": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getNativeHeapFreeSize()"
        },
        "stopNativeTracing": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#stopNativeTracing()"
        },
        "getThreadAllocCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getThreadAllocCount()"
        },
        "getPss": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getPss()"
        },
        "getRuntimeStats": {
          "!type": "fn() -> +java.util.Map",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getRuntimeStats()"
        },
        "getCaller": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getCaller()"
        },
        "stopAllocCounting": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#stopAllocCounting()"
        },
        "getMethodTracingMode": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getMethodTracingMode()"
        },
        "getCallers": {
          "!type": "fn(depth: number) -> string",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getCallers(int)"
        },
        "getGlobalAllocSize": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalAllocSize()"
        },
        "dumpService": {
          "!type": "fn(name: string, fd: +java.io.FileDescriptor, args: +java.newArray) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#dumpService(java.lang.String, java.io.FileDescriptor, java.lang.String[])"
        },
        "getGlobalClassInitTime": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalClassInitTime()"
        },
        "getThreadAllocSize": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getThreadAllocSize()"
        },
        "getThreadExternalAllocCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getThreadExternalAllocCount()"
        },
        "resetGlobalAllocCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalAllocCount()"
        },
        "resetGlobalExternalAllocSize": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalAllocSize()"
        },
        "getLoadedClassCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getLoadedClassCount()"
        },
        "dumpHprofDataDdms": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#dumpHprofDataDdms()"
        },
        "getNativeHeapAllocatedSize": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getNativeHeapAllocatedSize()"
        },
        "isDebuggerConnected": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#isDebuggerConnected()"
        },
        "stopMethodTracing": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#stopMethodTracing()"
        },
        "getVmFeatureList": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getVmFeatureList()"
        },
        "getGlobalExternalAllocSize": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalAllocSize()"
        },
        "resetGlobalFreedCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalFreedCount()"
        },
        "setGlobalAllocationLimit": {
          "!type": "fn(limit: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#setGlobalAllocationLimit(int)"
        },
        "waitingForDebugger": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#waitingForDebugger()"
        },
        "changeDebugPort": {
          "!type": "fn(port: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#changeDebugPort(int)"
        },
        "getRuntimeStat": {
          "!type": "fn(statName: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getRuntimeStat(java.lang.String)"
        },
        "getBinderProxyObjectCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getBinderProxyObjectCount()"
        },
        "cacheRegisterMap": {
          "!type": "fn(classAndMethodDesc: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#cacheRegisterMap(java.lang.String)"
        },
        "printLoadedClasses": {
          "!type": "fn(flags: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#printLoadedClasses(int)"
        },
        "resetGlobalFreedSize": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalFreedSize()"
        },
        "getBinderDeathObjectCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getBinderDeathObjectCount()"
        },
        "resetAllCounts": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetAllCounts()"
        },
        "countInstancesOfClass": {
          "!type": "fn(cls: +java.lang.Class) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#countInstancesOfClass(java.lang.Class)"
        },
        "startNativeTracing": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#startNativeTracing()"
        },
        "resetThreadGcInvocationCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetThreadGcInvocationCount()"
        },
        "resetThreadAllocCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetThreadAllocCount()"
        },
        "getNativeHeapSize": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getNativeHeapSize()"
        },
        "getThreadGcInvocationCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getThreadGcInvocationCount()"
        },
        "dumpNativeBacktraceToFile": {
          "!type": "fn(pid: number, file: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#dumpNativeBacktraceToFile(int, java.lang.String)"
        },
        "getGlobalClassInitCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalClassInitCount()"
        },
        "getMemInfo": {
          "!type": "fn(outSizes: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getMemInfo(long[])"
        },
        "dumpHprofData": {
          "!type": "fn(fileName: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#dumpHprofData(java.lang.String)"
        },
        "startAllocCounting": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#startAllocCounting()"
        },
        "dumpNativeHeap": {
          "!type": "fn(fd: +java.io.FileDescriptor) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#dumpNativeHeap(java.io.FileDescriptor)"
        },
        "threadCpuTimeNanos": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#threadCpuTimeNanos()"
        },
        "dumpReferenceTables": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#dumpReferenceTables()"
        },
        "resetGlobalClassInitCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalClassInitCount()"
        },
        "startMethodTracing": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#startMethodTracing()"
        },
        "resetGlobalGcInvocationCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalGcInvocationCount()"
        },
        "startMethodTracingSampling": {
          "!type": "fn(traceName: string, bufferSize: number, intervalUs: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#startMethodTracingSampling(java.lang.String, int, int)"
        },
        "getGlobalAllocCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalAllocCount()"
        },
        "getGlobalFreedSize": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#getGlobalFreedSize()"
        },
        "resetGlobalExternalAllocCount": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalAllocCount()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "RemoteCallback": {
        "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html",
        "!type": "fn(handler: +android.os.Handler)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(otherObj: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html#writeToParcel(android.os.Parcel, int)"
          },
          "sendResult": {
            "!type": "fn(bundle: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html#sendResult(android.os.Bundle)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallback.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ParcelFileDescriptor": {
        "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html",
        "!type": "fn(wrapped: +android.os.ParcelFileDescriptor)",
        "AutoCloseInputStream": {
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseInputStream.html",
          "!type": "fn(pfd: +android.os.ParcelFileDescriptor)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "read": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#read()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "available": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#available()"
            },
            "getChannel": {
              "!type": "fn() -> +java.nio.channels.FileChannel",
              "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#getChannel()"
            },
            "mark": {
              "!type": "fn(readlimit: number) -> void",
              "!url": "http://developer.android.com/reference/java/io/InputStream.html#mark(int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "reset": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/io/InputStream.html#reset()"
            },
            "markSupported": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/java/io/InputStream.html#markSupported()"
            },
            "getFD": {
              "!type": "fn() -> +java.io.FileDescriptor",
              "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#getFD()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "skip": {
              "!type": "fn(byteCount: +java.lang.Long) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/java/io/FileInputStream.html#skip(long)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseInputStream.html#close()"
            }
          }
        },
        "AutoCloseOutputStream": {
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseOutputStream.html",
          "!type": "fn(pfd: +android.os.ParcelFileDescriptor)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getChannel": {
              "!type": "fn() -> +java.nio.channels.FileChannel",
              "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#getChannel()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getFD": {
              "!type": "fn() -> +java.io.FileDescriptor",
              "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#getFD()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/io/OutputStream.html#flush()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.AutoCloseOutputStream.html#close()"
            },
            "write": {
              "!type": "fn(buffer: +java.newArray, byteOffset: number, byteCount: number) -> void",
              "!url": "http://developer.android.com/reference/java/io/FileOutputStream.html#write(byte[], int, int)"
            }
          }
        },
        "FileDescriptorDetachedException": {
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.FileDescriptorDetachedException.html",
          "!type": "fn()",
          "prototype": {
            "initCause": {
              "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
            },
            "getLocalizedMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
            },
            "getStackTrace": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
            },
            "printStackTrace": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
            },
            "addSuppressed": {
              "!type": "fn(throwable: +java.lang.Throwable) -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "fillInStackTrace": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
            },
            "setStackTrace": {
              "!type": "fn(trace: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
            },
            "getSuppressed": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
            },
            "getCause": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
            },
            "getMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "MODE_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_CREATE"
        },
        "MODE_WRITE_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_WRITE_ONLY"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_WORLD_WRITEABLE"
        },
        "MODE_READ_WRITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_READ_WRITE"
        },
        "MODE_READ_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_READ_ONLY"
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#CREATOR"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_WORLD_READABLE"
        },
        "MODE_TRUNCATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_TRUNCATE"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#MODE_APPEND"
        },
        "dup": {
          "!type": "fn(orig: +java.io.FileDescriptor) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#dup(java.io.FileDescriptor)"
        },
        "fromDatagramSocket": {
          "!type": "fn(datagramSocket: +java.net.DatagramSocket) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromDatagramSocket(java.net.DatagramSocket)"
        },
        "parseMode": {
          "!type": "fn(mode: string) -> number",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#parseMode(java.lang.String)"
        },
        "createReliablePipe": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createReliablePipe()"
        },
        "createSocketPair": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createSocketPair()"
        },
        "fromFd": {
          "!type": "fn(fd: number) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromFd(int)"
        },
        "open": {
          "!type": "fn(file: +java.io.File, mode: number) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#open(java.io.File, int)"
        },
        "fromSocket": {
          "!type": "fn(socket: +java.net.Socket) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromSocket(java.net.Socket)"
        },
        "createReliableSocketPair": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createReliableSocketPair()"
        },
        "createPipe": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createPipe()"
        },
        "fromData": {
          "!type": "fn(data: +java.newArray, name: string) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromData(byte[], java.lang.String)"
        },
        "adoptFd": {
          "!type": "fn(fd: number) -> +android.os.ParcelFileDescriptor",
          "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#adoptFd(int)"
        },
        "prototype": {
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#writeToParcel(android.os.Parcel, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStatSize": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#getStatSize()"
          },
          "checkError": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#checkError()"
          },
          "closeWithError": {
            "!type": "fn(msg: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#closeWithError(java.lang.String)"
          },
          "getFileDescriptor": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#getFileDescriptor()"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#describeContents()"
          },
          "getFd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#getFd()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#close()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "canDetectErrors": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#canDetectErrors()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "dup": {
            "!type": "fn() -> +android.os.ParcelFileDescriptor",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#dup()"
          },
          "seekTo": {
            "!type": "fn(pos: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#seekTo(long)"
          },
          "releaseResources": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#releaseResources()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "detachFd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#detachFd()"
          }
        }
      },
      "Messenger": {
        "!url": "http://developer.android.com/reference/android/os/Messenger.html",
        "!type": "fn(target: +android.os.Handler)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/Messenger.html#CREATOR"
        },
        "writeMessengerOrNullToParcel": {
          "!type": "fn(messenger: +android.os.Messenger, out: +android.os.Parcel) -> void",
          "!url": "http://developer.android.com/reference/android/os/Messenger.html#writeMessengerOrNullToParcel(android.os.Messenger, android.os.Parcel)"
        },
        "readMessengerOrNullFromParcel": {
          "!type": "fn(in: +android.os.Parcel) -> +android.os.Messenger",
          "!url": "http://developer.android.com/reference/android/os/Messenger.html#readMessengerOrNullFromParcel(android.os.Parcel)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(otherObj: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Messenger.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Messenger.html#describeContents()"
          },
          "send": {
            "!type": "fn(message: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Messenger.html#send(android.os.Message)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/Messenger.html#getBinder()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Messenger.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Messenger.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "FileObserver": {
        "!url": "http://developer.android.com/reference/android/os/FileObserver.html",
        "!type": "fn(path: string)",
        "MOVED_FROM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#MOVED_FROM"
        },
        "ALL_EVENTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#ALL_EVENTS"
        },
        "ATTRIB": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#ATTRIB"
        },
        "CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#CREATE"
        },
        "CLOSE_WRITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#CLOSE_WRITE"
        },
        "DELETE_SELF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#DELETE_SELF"
        },
        "OPEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#OPEN"
        },
        "MOVE_SELF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#MOVE_SELF"
        },
        "CLOSE_NOWRITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#CLOSE_NOWRITE"
        },
        "DELETE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#DELETE"
        },
        "MOVED_TO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#MOVED_TO"
        },
        "MODIFY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#MODIFY"
        },
        "ACCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileObserver.html#ACCESS"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "startWatching": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileObserver.html#startWatching()"
          },
          "stopWatching": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileObserver.html#stopWatching()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onEvent": {
            "!type": "fn(event: number, path: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/FileObserver.html#onEvent(int, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "BatteryManager": {
        "!url": "http://developer.android.com/reference/android/os/BatteryManager.html",
        "!type": "fn()",
        "ACTION_DISCHARGING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#ACTION_DISCHARGING"
        },
        "BATTERY_PROPERTY_CHARGE_COUNTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CHARGE_COUNTER"
        },
        "EXTRA_TEMPERATURE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_TEMPERATURE"
        },
        "BATTERY_PLUGGED_ANY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_ANY"
        },
        "EXTRA_INVALID_CHARGER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_INVALID_CHARGER"
        },
        "BATTERY_STATUS_NOT_CHARGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_NOT_CHARGING"
        },
        "BATTERY_PROPERTY_CURRENT_AVERAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CURRENT_AVERAGE"
        },
        "ACTION_CHARGING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#ACTION_CHARGING"
        },
        "BATTERY_HEALTH_GOOD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_GOOD"
        },
        "EXTRA_TECHNOLOGY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_TECHNOLOGY"
        },
        "BATTERY_HEALTH_UNSPECIFIED_FAILURE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_UNSPECIFIED_FAILURE"
        },
        "BATTERY_HEALTH_OVER_VOLTAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_OVER_VOLTAGE"
        },
        "BATTERY_PLUGGED_USB": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_USB"
        },
        "BATTERY_HEALTH_OVERHEAT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_OVERHEAT"
        },
        "BATTERY_PLUGGED_WIRELESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_WIRELESS"
        },
        "BATTERY_STATUS_DISCHARGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_DISCHARGING"
        },
        "EXTRA_PLUGGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_PLUGGED"
        },
        "BATTERY_PROPERTY_ENERGY_COUNTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_ENERGY_COUNTER"
        },
        "BATTERY_STATUS_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_UNKNOWN"
        },
        "BATTERY_HEALTH_DEAD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_DEAD"
        },
        "EXTRA_VOLTAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_VOLTAGE"
        },
        "BATTERY_PLUGGED_AC": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PLUGGED_AC"
        },
        "BATTERY_PROPERTY_CURRENT_NOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CURRENT_NOW"
        },
        "BATTERY_PROPERTY_CAPACITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_PROPERTY_CAPACITY"
        },
        "BATTERY_HEALTH_COLD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_COLD"
        },
        "BATTERY_STATUS_CHARGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_CHARGING"
        },
        "EXTRA_PRESENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_PRESENT"
        },
        "BATTERY_HEALTH_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_HEALTH_UNKNOWN"
        },
        "BATTERY_STATUS_FULL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#BATTERY_STATUS_FULL"
        },
        "EXTRA_HEALTH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_HEALTH"
        },
        "EXTRA_SCALE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_SCALE"
        },
        "EXTRA_LEVEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_LEVEL"
        },
        "EXTRA_ICON_SMALL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_ICON_SMALL"
        },
        "EXTRA_STATUS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#EXTRA_STATUS"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "isCharging": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#isCharging()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getIntProperty": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#getIntProperty(int)"
          },
          "getLongProperty": {
            "!type": "fn(id: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryManager.html#getLongProperty(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "MessengerService": {
        "!url": "http://developer.android.com/reference/android/os/MessengerService.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "START_CONTINUATION_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_CONTINUATION_MASK"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "START_FLAG_RETRY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_RETRY"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "START_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "START_TASK_REMOVED_COMPLETE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_TASK_REMOVED_COMPLETE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "START_REDELIVER_INTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_REDELIVER_INTENT"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "START_FLAG_REDELIVERY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_REDELIVERY"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "START_NOT_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_NOT_STICKY"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "START_STICKY_COMPATIBILITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY_COMPATIBILITY"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "startForeground": {
            "!type": "fn(id: number, notification: +android.app.Notification) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification)"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "stopForeground": {
            "!type": "fn(removeNotification: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopForeground(boolean)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onDestroy()"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "setForeground": {
            "!type": "fn(isForeground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)"
          },
          "stopSelf": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelf()"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onTaskRemoved": {
            "!type": "fn(rootIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTaskRemoved(android.content.Intent)"
          },
          "onCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onCreate()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onLowMemory()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn(intent: +android.content.Intent, startId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onStart(android.content.Intent, int)"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTrimMemory(int)"
          },
          "onStartCommand": {
            "!type": "fn(intent: +android.content.Intent, flags: number, startId: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onStartCommand(android.content.Intent, int, int)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "onUnbind": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onUnbind(android.content.Intent)"
          },
          "attach": {
            "!type": "fn(context: +android.content.Context, thread: +android.app.ActivityThread, className: string, token: +android.os.IBinder, application: +android.app.Application, activityManager: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#attach(android.content.Context, android.app.ActivityThread, java.lang.String, android.os.IBinder, android.app.Application, java.lang.Object)"
          },
          "onBind": {
            "!type": "fn(intent: +android.content.Intent) -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/MessengerService.html#onBind(android.content.Intent)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Service.html#getApplication()"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "stopSelfResult": {
            "!type": "fn(startId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelfResult(int)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "onRebind": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onRebind(android.content.Intent)"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "startActivityForResult": {
            "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          }
        }
      },
      "BinderThreadPriorityService": {
        "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityService.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "START_CONTINUATION_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_CONTINUATION_MASK"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "START_FLAG_RETRY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_RETRY"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "START_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "START_TASK_REMOVED_COMPLETE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_TASK_REMOVED_COMPLETE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "START_REDELIVER_INTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_REDELIVER_INTENT"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "START_FLAG_REDELIVERY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_REDELIVERY"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "START_NOT_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_NOT_STICKY"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "START_STICKY_COMPATIBILITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY_COMPATIBILITY"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "startForeground": {
            "!type": "fn(id: number, notification: +android.app.Notification) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification)"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "stopForeground": {
            "!type": "fn(removeNotification: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopForeground(boolean)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onDestroy()"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "setForeground": {
            "!type": "fn(isForeground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)"
          },
          "stopSelf": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelf()"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onTaskRemoved": {
            "!type": "fn(rootIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTaskRemoved(android.content.Intent)"
          },
          "onCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onCreate()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onLowMemory()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn(intent: +android.content.Intent, startId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onStart(android.content.Intent, int)"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTrimMemory(int)"
          },
          "onStartCommand": {
            "!type": "fn(intent: +android.content.Intent, flags: number, startId: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onStartCommand(android.content.Intent, int, int)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "onUnbind": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onUnbind(android.content.Intent)"
          },
          "attach": {
            "!type": "fn(context: +android.content.Context, thread: +android.app.ActivityThread, className: string, token: +android.os.IBinder, application: +android.app.Application, activityManager: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#attach(android.content.Context, android.app.ActivityThread, java.lang.String, android.os.IBinder, android.app.Application, java.lang.Object)"
          },
          "onBind": {
            "!type": "fn(intent: +android.content.Intent) -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityService.html#onBind(android.content.Intent)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Service.html#getApplication()"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "stopSelfResult": {
            "!type": "fn(startId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelfResult(int)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "onRebind": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onRebind(android.content.Intent)"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "startActivityForResult": {
            "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          }
        }
      },
      "Build": {
        "!url": "http://developer.android.com/reference/android/os/Build.html",
        "!type": "fn()",
        "VERSION": {
          "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html",
          "!type": "fn()",
          "SECURITY_PATCH": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#SECURITY_PATCH"
          },
          "BASE_OS": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#BASE_OS"
          },
          "SDK": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#SDK"
          },
          "RELEASE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#RELEASE"
          },
          "INCREMENTAL": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#INCREMENTAL"
          },
          "CODENAME": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#CODENAME"
          },
          "ACTIVE_CODENAMES": {
            "!type": "+java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#ACTIVE_CODENAMES"
          },
          "SDK_INT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#SDK_INT"
          },
          "RESOURCES_SDK_INT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#RESOURCES_SDK_INT"
          },
          "PREVIEW_SDK_INT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION.html#PREVIEW_SDK_INT"
          },
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "VERSION_CODES": {
          "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html",
          "!type": "fn()",
          "DONUT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#DONUT"
          },
          "GINGERBREAD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#GINGERBREAD"
          },
          "LOLLIPOP_MR1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#LOLLIPOP_MR1"
          },
          "LOLLIPOP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#LOLLIPOP"
          },
          "GINGERBREAD_MR1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#GINGERBREAD_MR1"
          },
          "ECLAIR_MR1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#ECLAIR_MR1"
          },
          "M": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#M"
          },
          "L": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#L"
          },
          "CUR_DEVELOPMENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#CUR_DEVELOPMENT"
          },
          "KITKAT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#KITKAT"
          },
          "KITKAT_WATCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#KITKAT_WATCH"
          },
          "ECLAIR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#ECLAIR"
          },
          "JELLY_BEAN_MR2": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#JELLY_BEAN_MR2"
          },
          "JELLY_BEAN_MR1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#JELLY_BEAN_MR1"
          },
          "BASE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#BASE"
          },
          "ECLAIR_0_1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#ECLAIR_0_1"
          },
          "ICE_CREAM_SANDWICH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH"
          },
          "ICE_CREAM_SANDWICH_MR1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH_MR1"
          },
          "FROYO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#FROYO"
          },
          "HONEYCOMB": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#HONEYCOMB"
          },
          "HONEYCOMB_MR2": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#HONEYCOMB_MR2"
          },
          "HONEYCOMB_MR1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#HONEYCOMB_MR1"
          },
          "CUPCAKE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#CUPCAKE"
          },
          "JELLY_BEAN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#JELLY_BEAN"
          },
          "BASE_1_1": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/Build.VERSION_CODES.html#BASE_1_1"
          },
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "RADIO": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#RADIO"
        },
        "IS_DEBUGGABLE": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/os/Build.html#IS_DEBUGGABLE"
        },
        "SUPPORTED_32_BIT_ABIS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Build.html#SUPPORTED_32_BIT_ABIS"
        },
        "PRODUCT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#PRODUCT"
        },
        "CPU_ABI2": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#CPU_ABI2"
        },
        "USER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#USER"
        },
        "CPU_ABI": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#CPU_ABI"
        },
        "ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#ID"
        },
        "MANUFACTURER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#MANUFACTURER"
        },
        "TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#TYPE"
        },
        "SUPPORTED_ABIS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Build.html#SUPPORTED_ABIS"
        },
        "HARDWARE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#HARDWARE"
        },
        "SUPPORTED_64_BIT_ABIS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Build.html#SUPPORTED_64_BIT_ABIS"
        },
        "TIME": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Build.html#TIME"
        },
        "SERIAL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#SERIAL"
        },
        "MODEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#MODEL"
        },
        "DEVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#DEVICE"
        },
        "DISPLAY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#DISPLAY"
        },
        "FINGERPRINT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#FINGERPRINT"
        },
        "TAGS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#TAGS"
        },
        "HOST": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#HOST"
        },
        "BOARD": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#BOARD"
        },
        "UNKNOWN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#UNKNOWN"
        },
        "BOOTLOADER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#BOOTLOADER"
        },
        "BRAND": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#BRAND"
        },
        "ensureFingerprintProperty": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Build.html#ensureFingerprintProperty()"
        },
        "isBuildConsistent": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Build.html#isBuildConsistent()"
        },
        "getRadioVersion": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/os/Build.html#getRadioVersion()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "HandlerThreadTest": {
        "!url": "http://developer.android.com/reference/android/os/HandlerThreadTest.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testHandlerThread": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerThreadTest.html#testHandlerThread()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "SELinux": {
        "!url": "http://developer.android.com/reference/android/os/SELinux.html",
        "!type": "fn()",
        "restoreconRecursive": {
          "!type": "fn(file: +java.io.File) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#restoreconRecursive(java.io.File)"
        },
        "getPeerContext": {
          "!type": "fn(fd: +java.io.FileDescriptor) -> string",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#getPeerContext(java.io.FileDescriptor)"
        },
        "checkSELinuxAccess": {
          "!type": "fn(scon: string, tcon: string, tclass: string, perm: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#checkSELinuxAccess(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"
        },
        "setFileContext": {
          "!type": "fn(path: string, context: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#setFileContext(java.lang.String, java.lang.String)"
        },
        "getPidContext": {
          "!type": "fn(pid: number) -> string",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#getPidContext(int)"
        },
        "restorecon": {
          "!type": "fn(pathname: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#restorecon(java.lang.String)"
        },
        "getContext": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#getContext()"
        },
        "isSELinuxEnforced": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#isSELinuxEnforced()"
        },
        "isSELinuxEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#isSELinuxEnabled()"
        },
        "getFileContext": {
          "!type": "fn(path: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#getFileContext(java.lang.String)"
        },
        "setFSCreateContext": {
          "!type": "fn(context: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SELinux.html#setFSCreateContext(java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "UserHandle": {
        "!url": "http://developer.android.com/reference/android/os/UserHandle.html",
        "!type": "fn(h: number)",
        "CURRENT_OR_SELF": {
          "!type": "+android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#CURRENT_OR_SELF"
        },
        "PER_USER_RANGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#PER_USER_RANGE"
        },
        "ALL": {
          "!type": "+android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#ALL"
        },
        "USER_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#USER_ALL"
        },
        "USER_CURRENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#USER_CURRENT"
        },
        "MU_ENABLED": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#MU_ENABLED"
        },
        "USER_CURRENT_OR_SELF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#USER_CURRENT_OR_SELF"
        },
        "USER_NULL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#USER_NULL"
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#CREATOR"
        },
        "OWNER": {
          "!type": "+android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#OWNER"
        },
        "USER_OWNER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#USER_OWNER"
        },
        "CURRENT": {
          "!type": "+android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#CURRENT"
        },
        "getSharedAppGid": {
          "!type": "fn(id: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getSharedAppGid(int)"
        },
        "getUserId": {
          "!type": "fn(uid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getUserId(int)"
        },
        "isApp": {
          "!type": "fn(uid: number) -> bool",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#isApp(int)"
        },
        "getUid": {
          "!type": "fn(userId: number, appId: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getUid(int, int)"
        },
        "isIsolated": {
          "!type": "fn(uid: number) -> bool",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#isIsolated(int)"
        },
        "getAppIdFromSharedAppGid": {
          "!type": "fn(gid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getAppIdFromSharedAppGid(int)"
        },
        "formatUid": {
          "!type": "fn(sb: +java.lang.StringBuilder, uid: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#formatUid(java.lang.StringBuilder, int)"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getCallingUserHandle()"
        },
        "getAppId": {
          "!type": "fn(uid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getAppId(int)"
        },
        "getUserGid": {
          "!type": "fn(userId: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getUserGid(int)"
        },
        "writeToParcel": {
          "!type": "fn(h: +android.os.UserHandle, out: +android.os.Parcel) -> void",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#writeToParcel(android.os.UserHandle, android.os.Parcel)"
        },
        "myUserId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#myUserId()"
        },
        "getCallingUserId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getCallingUserId()"
        },
        "readFromParcel": {
          "!type": "fn(in: +android.os.Parcel) -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#readFromParcel(android.os.Parcel)"
        },
        "isSameApp": {
          "!type": "fn(uid1: number, uid2: number) -> bool",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#isSameApp(int, int)"
        },
        "isSameUser": {
          "!type": "fn(uid1: number, uid2: number) -> bool",
          "!url": "http://developer.android.com/reference/android/os/UserHandle.html#isSameUser(int, int)"
        },
        "prototype": {
          "isOwner": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#isOwner()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getIdentifier": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#getIdentifier()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#toString()"
          },
          "equals": {
            "!type": "fn(obj: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/UserHandle.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "FileUtilsTest": {
        "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html",
        "!type": "fn()",
        "prototype": {
          "testContains": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testContains()"
          },
          "testReadTextFile": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testReadTextFile()"
          },
          "testBuildUniqueFile_normal": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testBuildUniqueFile_normal()"
          },
          "testValidExtFilename": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testValidExtFilename()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testDeleteOlderEmptyDir": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testDeleteOlderEmptyDir()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "testBuildUniqueFile_dir": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testBuildUniqueFile_dir()"
          },
          "testReadTextFileWithZeroLengthFile": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testReadTextFileWithZeroLengthFile()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testDeleteOlderTypical": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testDeleteOlderTypical()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testBuildUniqueFile_unknown": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testBuildUniqueFile_unknown()"
          },
          "testIsFilenameSafe": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testIsFilenameSafe()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testDeleteOlderOnlyCount": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testDeleteOlderOnlyCount()"
          },
          "testDeleteOlderOnlyAge": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testDeleteOlderOnlyAge()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testTrimFilename": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testTrimFilename()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testDeleteOlderInFuture": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testDeleteOlderInFuture()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "testCopyToFile": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testCopyToFile()"
          },
          "testValidFatFilename": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testValidFatFilename()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testBuildUniqueFile_increment": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testBuildUniqueFile_increment()"
          },
          "testCopyFile": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileUtilsTest.html#testCopyFile()"
          }
        }
      },
      "Looper": {
        "!url": "http://developer.android.com/reference/android/os/Looper.html",
        "myLooper": {
          "!type": "fn() -> +android.os.Looper",
          "!url": "http://developer.android.com/reference/android/os/Looper.html#myLooper()"
        },
        "loop": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Looper.html#loop()"
        },
        "prepare": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Looper.html#prepare()"
        },
        "myQueue": {
          "!type": "fn() -> +android.os.MessageQueue",
          "!url": "http://developer.android.com/reference/android/os/Looper.html#myQueue()"
        },
        "getMainLooper": {
          "!type": "fn() -> +android.os.Looper",
          "!url": "http://developer.android.com/reference/android/os/Looper.html#getMainLooper()"
        },
        "prepareMainLooper": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Looper.html#prepareMainLooper()"
        },
        "prototype": {
          "getQueue": {
            "!type": "fn() -> +android.os.MessageQueue",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#getQueue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#toString()"
          },
          "getThread": {
            "!type": "fn() -> +java.lang.Thread",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#getThread()"
          },
          "quit": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#quit()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isCurrentThread": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#isCurrentThread()"
          },
          "dump": {
            "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#dump(android.util.Printer, java.lang.String)"
          },
          "quitSafely": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#quitSafely()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setMessageLogging": {
            "!type": "fn(printer: +android.util.Printer) -> void",
            "!url": "http://developer.android.com/reference/android/os/Looper.html#setMessageLogging(android.util.Printer)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "BinderThreadPriorityTest": {
        "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityTest.html",
        "!type": "fn()",
        "getSchedulerGroup": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityTest.html#getSchedulerGroup()"
        },
        "expectedSchedulerGroup": {
          "!type": "fn(prio: number) -> string",
          "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityTest.html#expectedSchedulerGroup(int)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testPassPriorityToService": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityTest.html#testPassPriorityToService()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testCallBackFromServiceWithPriority": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BinderThreadPriorityTest.html#testCallBackFromServiceWithPriority()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StrictModeBenchmark": {
        "!url": "http://developer.android.com/reference/android/os/StrictModeBenchmark.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "timeToggleThreadPolicy": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/StrictModeBenchmark.html#timeToggleThreadPolicy(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "InputMethodSubtypeArrayTest": {
        "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeArrayTest.html",
        "!type": "fn()",
        "prototype": {
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "testInstanciate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeArrayTest.html#testInstanciate()"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          }
        }
      },
      "TokenWatcher": {
        "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html",
        "!type": "fn(h: +android.os.Handler, tag: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "cleanup": {
            "!type": "fn(token: +android.os.IBinder, unlink: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#cleanup(android.os.IBinder, boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "isAcquired": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#isAcquired()"
          },
          "acquire": {
            "!type": "fn(token: +android.os.IBinder, tag: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#acquire(android.os.IBinder, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "dump": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#dump()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "acquired": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#acquired()"
          },
          "release": {
            "!type": "fn(token: +android.os.IBinder) -> void",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#release(android.os.IBinder)"
          },
          "released": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/TokenWatcher.html#released()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "BatteryManagerInternal": {
        "!url": "http://developer.android.com/reference/android/os/BatteryManagerInternal.html",
        "!type": "fn()",
        "prototype": {
          "getPlugType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryManagerInternal.html#getPlugType()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getBatteryLevel": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryManagerInternal.html#getBatteryLevel()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getInvalidCharger": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryManagerInternal.html#getInvalidCharger()"
          },
          "getBatteryLevelLow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryManagerInternal.html#getBatteryLevelLow()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isPowered": {
            "!type": "fn(plugTypeSet: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryManagerInternal.html#isPowered(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Broadcaster": {
        "!url": "http://developer.android.com/reference/android/os/Broadcaster.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "request": {
            "!type": "fn(senderWhat: number, target: +android.os.Handler, targetWhat: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Broadcaster.html#request(int, android.os.Handler, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "broadcast": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Broadcaster.html#broadcast(android.os.Message)"
          },
          "dumpRegistrations": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Broadcaster.html#dumpRegistrations()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancelRequest": {
            "!type": "fn(senderWhat: number, target: +android.os.Handler, targetWhat: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Broadcaster.html#cancelRequest(int, android.os.Handler, int)"
          }
        }
      },
      "Binder": {
        "!url": "http://developer.android.com/reference/android/os/Binder.html",
        "!type": "fn()",
        "blockUntilThreadAvailable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#blockUntilThreadAvailable()"
        },
        "getThreadStrictModePolicy": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getThreadStrictModePolicy()"
        },
        "setDumpDisabled": {
          "!type": "fn(msg: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setDumpDisabled(java.lang.String)"
        },
        "clearCallingIdentity": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"
        },
        "flushPendingCommands": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"
        },
        "setThreadStrictModePolicy": {
          "!type": "fn(policyMask: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setThreadStrictModePolicy(int)"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"
        },
        "getCallingPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingPid()"
        },
        "isProxy": {
          "!type": "fn(iface: +android.os.IInterface) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#isProxy(android.os.IInterface)"
        },
        "joinThreadPool": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"
        },
        "getCallingUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUid()"
        },
        "restoreCallingIdentity": {
          "!type": "fn(token: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"
        },
        "prototype": {
          "unlinkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "isBinderAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor, java.lang.String[])"
          },
          "queryLocalInterface": {
            "!type": "fn(descriptor: string) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"
          },
          "pingBinder": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#pingBinder()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "attachInterface": {
            "!type": "fn(owner: +android.os.IInterface, descriptor: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface, java.lang.String)"
          },
          "transact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#transact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "linkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "dumpAsync": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor, java.lang.String[])"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getInterfaceDescriptor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"
          }
        }
      },
      "HandlerThread_Delegate": {
        "!url": "http://developer.android.com/reference/android/os/HandlerThread_Delegate.html",
        "!type": "fn()",
        "cleanUp": {
          "!type": "fn(context: +com.android.layoutlib.bridge.android.BridgeContext) -> void",
          "!url": "http://developer.android.com/reference/android/os/HandlerThread_Delegate.html#cleanUp(com.android.layoutlib.bridge.android.BridgeContext)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "BadParcelableException": {
        "!url": "http://developer.android.com/reference/android/os/BadParcelableException.html",
        "!type": "fn(msg: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CursorAnchorInfoTest": {
        "!url": "http://developer.android.com/reference/android/os/CursorAnchorInfoTest.html",
        "!type": "fn()",
        "prototype": {
          "testMatrixIsRequired": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CursorAnchorInfoTest.html#testMatrixIsRequired()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testBuilder": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CursorAnchorInfoTest.html#testBuilder()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testEquality": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CursorAnchorInfoTest.html#testEquality()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "testMatrixIsCopied": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CursorAnchorInfoTest.html#testMatrixIsCopied()"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testBuilderAddCharacterBounds": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CursorAnchorInfoTest.html#testBuilderAddCharacterBounds()"
          }
        }
      },
      "BatteryStats": {
        "!url": "http://developer.android.com/reference/android/os/BatteryStats.html",
        "!type": "fn()",
        "Counter": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.Counter.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getCountLocked": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Counter.html#getCountLocked(int)"
            },
            "logState": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Counter.html#logState(android.util.Printer, java.lang.String)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "LongCounter": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.LongCounter.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getCountLocked": {
              "!type": "fn(which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LongCounter.html#getCountLocked(int)"
            },
            "logState": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LongCounter.html#logState(android.util.Printer, java.lang.String)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Timer": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.Timer.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getCountLocked": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Timer.html#getCountLocked(int)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "logState": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Timer.html#logState(android.util.Printer, java.lang.String)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getTimeSinceMarkLocked": {
              "!type": "fn(elapsedRealtimeUs: +java.lang.Long) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Timer.html#getTimeSinceMarkLocked(long)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getTotalTimeLocked": {
              "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Timer.html#getTotalTimeLocked(long, int)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "Uid": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html",
          "!type": "fn()",
          "Wakelock": {
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Wakelock.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getWakeTime": {
                "!type": "fn(type: number) -> +android.os.BatteryStats.Timer",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Wakelock.html#getWakeTime(int)"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "Sensor": {
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Sensor.html",
            "!type": "fn()",
            "GPS": {
              "!type": "number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Sensor.html#GPS"
            },
            "prototype": {
              "getHandle": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Sensor.html#getHandle()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getSensorTime": {
                "!type": "fn() -> +android.os.BatteryStats.Timer",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Sensor.html#getSensorTime()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "Pid": {
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pid.html",
            "!type": "fn()",
            "prototype": {
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              }
            }
          },
          "Proc": {
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html",
            "!type": "fn()",
            "ExcessivePower": {
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.ExcessivePower.html",
              "!type": "fn()",
              "TYPE_CPU": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.ExcessivePower.html#TYPE_CPU"
              },
              "TYPE_WAKE": {
                "!type": "number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.ExcessivePower.html#TYPE_WAKE"
              },
              "prototype": {
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                },
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                }
              }
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getNumAnrs": {
                "!type": "fn(which: number) -> number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getNumAnrs(int)"
              },
              "getNumCrashes": {
                "!type": "fn(which: number) -> number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getNumCrashes(int)"
              },
              "countExcessivePowers": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#countExcessivePowers()"
              },
              "getUserTime": {
                "!type": "fn(which: number) -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getUserTime(int)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getSystemTime": {
                "!type": "fn(which: number) -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getSystemTime(int)"
              },
              "getForegroundTime": {
                "!type": "fn(which: number) -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getForegroundTime(int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "getStarts": {
                "!type": "fn(which: number) -> number",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getStarts(int)"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "isActive": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#isActive()"
              },
              "getExcessivePower": {
                "!type": "fn(i: number) -> +android.os.BatteryStats.Uid.Proc.ExcessivePower",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Proc.html#getExcessivePower(int)"
              }
            }
          },
          "Pkg": {
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.html",
            "!type": "fn()",
            "Serv": {
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.Serv.html",
              "!type": "fn()",
              "prototype": {
                "notifyAll": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
                },
                "toString": {
                  "!type": "fn() -> string",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
                },
                "equals": {
                  "!type": "fn(o: +java.lang.Object) -> bool",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
                },
                "wait": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
                },
                "getLaunches": {
                  "!type": "fn(which: number) -> number",
                  "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.Serv.html#getLaunches(int)"
                },
                "getStartTime": {
                  "!type": "fn(batteryUptime: +java.lang.Long, which: number) -> +java.lang.Long",
                  "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.Serv.html#getStartTime(long, int)"
                },
                "hashCode": {
                  "!type": "fn() -> number",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
                },
                "getStarts": {
                  "!type": "fn(which: number) -> number",
                  "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.Serv.html#getStarts(int)"
                },
                "getClass": {
                  "!type": "fn() -> +java.lang.Class",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
                },
                "notify": {
                  "!type": "fn() -> void",
                  "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
                }
              }
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getWakeupAlarmStats": {
                "!type": "fn() -> +android.util.ArrayMap",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.html#getWakeupAlarmStats()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getServiceStats": {
                "!type": "fn() -> +android.util.ArrayMap",
                "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.Pkg.html#getServiceStats()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              }
            }
          },
          "NUM_WIFI_BATCHED_SCAN_BINS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#NUM_WIFI_BATCHED_SCAN_BINS"
          },
          "PROCESS_STATE_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#PROCESS_STATE_FOREGROUND"
          },
          "NUM_USER_ACTIVITY_TYPES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#NUM_USER_ACTIVITY_TYPES"
          },
          "PROCESS_STATE_ACTIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#PROCESS_STATE_ACTIVE"
          },
          "NUM_PROCESS_STATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#NUM_PROCESS_STATE"
          },
          "PROCESS_STATE_RUNNING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#PROCESS_STATE_RUNNING"
          },
          "prototype": {
            "noteActivityPausedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteActivityPausedLocked(long)"
            },
            "getWifiBatchedScanTime": {
              "!type": "fn(csphBin: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiBatchedScanTime(int, long, int)"
            },
            "getWakelockStats": {
              "!type": "fn() -> +android.util.ArrayMap",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWakelockStats()"
            },
            "getAudioTurnedOnTimer": {
              "!type": "fn() -> +android.os.BatteryStats.Timer",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getAudioTurnedOnTimer()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "getPidStats": {
              "!type": "fn() -> +android.util.SparseArray",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getPidStats()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "noteUserActivityLocked": {
              "!type": "fn(type: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteUserActivityLocked(int)"
            },
            "noteWifiBatchedScanStartedLocked": {
              "!type": "fn(csph: number, elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiBatchedScanStartedLocked(int, long)"
            },
            "noteWifiBatchedScanStoppedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiBatchedScanStoppedLocked(long)"
            },
            "hasUserActivity": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#hasUserActivity()"
            },
            "getPackageStats": {
              "!type": "fn() -> +android.util.ArrayMap",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getPackageStats()"
            },
            "noteWifiStoppedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiStoppedLocked(long)"
            },
            "getWifiRunningTime": {
              "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiRunningTime(long, int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getProcessStateTime": {
              "!type": "fn(state: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getProcessStateTime(int, long, int)"
            },
            "getUserActivityCount": {
              "!type": "fn(type: number, which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getUserActivityCount(int, int)"
            },
            "getSensorStats": {
              "!type": "fn() -> +android.util.SparseArray",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getSensorStats()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getProcessStats": {
              "!type": "fn() -> +android.util.ArrayMap",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getProcessStats()"
            },
            "getNetworkActivityPackets": {
              "!type": "fn(type: number, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getNetworkActivityPackets(int, int)"
            },
            "getTimeAtCpuSpeed": {
              "!type": "fn(step: number, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getTimeAtCpuSpeed(int, int)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "noteWifiMulticastEnabledLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiMulticastEnabledLocked(long)"
            },
            "noteActivityResumedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteActivityResumedLocked(long)"
            },
            "getVideoTurnedOnTimer": {
              "!type": "fn() -> +android.os.BatteryStats.Timer",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getVideoTurnedOnTimer()"
            },
            "getWifiMulticastTime": {
              "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiMulticastTime(long, int)"
            },
            "getSystemCpuTimeUs": {
              "!type": "fn(which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getSystemCpuTimeUs(int)"
            },
            "getForegroundActivityTimer": {
              "!type": "fn() -> +android.os.BatteryStats.Timer",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getForegroundActivityTimer()"
            },
            "getVibratorOnTimer": {
              "!type": "fn() -> +android.os.BatteryStats.Timer",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getVibratorOnTimer()"
            },
            "getNetworkActivityBytes": {
              "!type": "fn(type: number, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getNetworkActivityBytes(int, int)"
            },
            "noteFullWifiLockReleasedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteFullWifiLockReleasedLocked(long)"
            },
            "getSyncStats": {
              "!type": "fn() -> +android.util.ArrayMap",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getSyncStats()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "noteFullWifiLockAcquiredLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteFullWifiLockAcquiredLocked(long)"
            },
            "getJobStats": {
              "!type": "fn() -> +android.util.ArrayMap",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getJobStats()"
            },
            "getCameraTurnedOnTimer": {
              "!type": "fn() -> +android.os.BatteryStats.Timer",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getCameraTurnedOnTimer()"
            },
            "hasNetworkActivity": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#hasNetworkActivity()"
            },
            "getCpuPowerMaUs": {
              "!type": "fn(which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getCpuPowerMaUs(int)"
            },
            "getWifiControllerActivity": {
              "!type": "fn(type: number, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiControllerActivity(int, int)"
            },
            "getFullWifiLockTime": {
              "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getFullWifiLockTime(long, int)"
            },
            "getFlashlightTurnedOnTimer": {
              "!type": "fn() -> +android.os.BatteryStats.Timer",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getFlashlightTurnedOnTimer()"
            },
            "noteWifiMulticastDisabledLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiMulticastDisabledLocked(long)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getMobileRadioActiveCount": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getMobileRadioActiveCount(int)"
            },
            "getMobileRadioActiveTime": {
              "!type": "fn(which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getMobileRadioActiveTime(int)"
            },
            "getWifiBatchedScanCount": {
              "!type": "fn(csphBin: number, which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiBatchedScanCount(int, int)"
            },
            "noteWifiRunningLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiRunningLocked(long)"
            },
            "getWifiScanCount": {
              "!type": "fn(which: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiScanCount(int)"
            },
            "noteWifiScanStartedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiScanStartedLocked(long)"
            },
            "noteWifiScanStoppedLocked": {
              "!type": "fn(elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#noteWifiScanStoppedLocked(long)"
            },
            "getUid": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getUid()"
            },
            "getUserCpuTimeUs": {
              "!type": "fn(which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getUserCpuTimeUs(int)"
            },
            "getWifiScanTime": {
              "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.Uid.html#getWifiScanTime(long, int)"
            }
          }
        },
        "LevelStepTracker": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html",
          "!type": "fn(maxLevelSteps: number)",
          "prototype": {
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#writeToParcel(android.os.Parcel)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "computeTimeEstimate": {
              "!type": "fn(modesOfInterest: +java.lang.Long, modeValues: +java.lang.Long, outNumOfInterest: +java.newArray) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#computeTimeEstimate(long, long, int[])"
            },
            "getDurationAt": {
              "!type": "fn(index: number) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#getDurationAt(int)"
            },
            "clearTime": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#clearTime()"
            },
            "readFromParcel": {
              "!type": "fn(in: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#readFromParcel(android.os.Parcel)"
            },
            "getLevelAt": {
              "!type": "fn(index: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#getLevelAt(int)"
            },
            "getModModeAt": {
              "!type": "fn(index: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#getModModeAt(int)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "encodeEntryAt": {
              "!type": "fn(index: number, out: +java.lang.StringBuilder) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#encodeEntryAt(int, java.lang.StringBuilder)"
            },
            "addLevelSteps": {
              "!type": "fn(numStepLevels: number, modeBits: +java.lang.Long, elapsedRealtime: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#addLevelSteps(int, long, long)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "init": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#init()"
            },
            "getInitModeAt": {
              "!type": "fn(index: number) -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#getInitModeAt(int)"
            },
            "decodeEntryAt": {
              "!type": "fn(index: number, value: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#decodeEntryAt(int, java.lang.String)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "computeTimePerLevel": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.LevelStepTracker.html#computeTimePerLevel()"
            }
          }
        },
        "PackageChange": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.PackageChange.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "DailyItem": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.DailyItem.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "HistoryTag": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryTag.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryTag.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryTag.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryTag.html#hashCode()"
            },
            "setTo": {
              "!type": "fn(o: +android.os.BatteryStats.HistoryTag) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryTag.html#setTo(android.os.BatteryStats.HistoryTag)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(src: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryTag.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "HistoryStepDetails": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryStepDetails.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "clear": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryStepDetails.html#clear()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryStepDetails.html#writeToParcel(android.os.Parcel)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(in: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryStepDetails.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "HistoryItem": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html",
          "!type": "fn()",
          "EVENT_FLAG_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_FLAG_START"
          },
          "STATE_DATA_CONNECTION_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_DATA_CONNECTION_MASK"
          },
          "EVENT_TOP_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TOP_FINISH"
          },
          "EVENT_JOB_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_JOB_START"
          },
          "CMD_SHUTDOWN": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_SHUTDOWN"
          },
          "EVENT_TEMP_WHITELIST_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TEMP_WHITELIST_START"
          },
          "STATE2_WIFI_SUPPL_STATE_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_WIFI_SUPPL_STATE_SHIFT"
          },
          "EVENT_TOP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TOP"
          },
          "STATE2_CAMERA_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_CAMERA_FLAG"
          },
          "EVENT_PROC_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PROC_FINISH"
          },
          "CMD_RESET": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_RESET"
          },
          "EVENT_JOB_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_JOB_FINISH"
          },
          "EVENT_TOP_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TOP_START"
          },
          "EVENT_CONNECTIVITY_CHANGED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_CONNECTIVITY_CHANGED"
          },
          "EVENT_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_FOREGROUND"
          },
          "STATE2_FLASHLIGHT_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_FLASHLIGHT_FLAG"
          },
          "EVENT_TEMP_WHITELIST": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TEMP_WHITELIST"
          },
          "STATE_WAKE_LOCK_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_WAKE_LOCK_FLAG"
          },
          "EVENT_TYPE_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TYPE_MASK"
          },
          "STATE2_PHONE_IN_CALL_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_PHONE_IN_CALL_FLAG"
          },
          "STATE_DATA_CONNECTION_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_DATA_CONNECTION_SHIFT"
          },
          "CMD_UPDATE": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_UPDATE"
          },
          "EVENT_FOREGROUND_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_FOREGROUND_FINISH"
          },
          "EVENT_ALARM_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_ALARM_START"
          },
          "EVENT_ALARM": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_ALARM"
          },
          "STATE_BRIGHTNESS_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_BRIGHTNESS_SHIFT"
          },
          "EVENT_USER_RUNNING_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_USER_RUNNING_FINISH"
          },
          "EVENT_PROC_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PROC_START"
          },
          "STATE_SCREEN_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_SCREEN_ON_FLAG"
          },
          "STATE2_WIFI_SUPPL_STATE_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_WIFI_SUPPL_STATE_MASK"
          },
          "STATE_WIFI_SCAN_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_WIFI_SCAN_FLAG"
          },
          "EVENT_ALARM_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_ALARM_FINISH"
          },
          "EVENT_SCREEN_WAKE_UP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_SCREEN_WAKE_UP"
          },
          "CMD_CURRENT_TIME": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_CURRENT_TIME"
          },
          "EVENT_FLAG_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_FLAG_FINISH"
          },
          "STATE_AUDIO_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_AUDIO_ON_FLAG"
          },
          "EVENT_PACKAGE_ACTIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PACKAGE_ACTIVE"
          },
          "STATE_WIFI_MULTICAST_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_WIFI_MULTICAST_ON_FLAG"
          },
          "STATE_PHONE_STATE_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_PHONE_STATE_MASK"
          },
          "STATE2_DEVICE_IDLE_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_DEVICE_IDLE_FLAG"
          },
          "STATE2_WIFI_RUNNING_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_WIFI_RUNNING_FLAG"
          },
          "EVENT_USER_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_USER_FOREGROUND"
          },
          "EVENT_JOB": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_JOB"
          },
          "EVENT_FOREGROUND_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_FOREGROUND_START"
          },
          "STATE2_BLUETOOTH_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_BLUETOOTH_ON_FLAG"
          },
          "STATE_PHONE_SCANNING_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_PHONE_SCANNING_FLAG"
          },
          "EVENT_WAKE_LOCK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_WAKE_LOCK"
          },
          "STATE2_WIFI_SIGNAL_STRENGTH_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_WIFI_SIGNAL_STRENGTH_MASK"
          },
          "STATE_WIFI_FULL_LOCK_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_WIFI_FULL_LOCK_FLAG"
          },
          "STATE_WIFI_RADIO_ACTIVE_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_WIFI_RADIO_ACTIVE_FLAG"
          },
          "MOST_INTERESTING_STATES2": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#MOST_INTERESTING_STATES2"
          },
          "STATE_BRIGHTNESS_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_BRIGHTNESS_MASK"
          },
          "STATE2_POWER_SAVE_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_POWER_SAVE_FLAG"
          },
          "EVENT_SYNC_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_SYNC_FINISH"
          },
          "EVENT_TEMP_WHITELIST_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_TEMP_WHITELIST_FINISH"
          },
          "STATE2_CHARGING_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_CHARGING_FLAG"
          },
          "EVENT_USER_FOREGROUND_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_USER_FOREGROUND_START"
          },
          "STATE_MOBILE_RADIO_ACTIVE_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_MOBILE_RADIO_ACTIVE_FLAG"
          },
          "EVENT_USER_RUNNING_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_USER_RUNNING_START"
          },
          "EVENT_PROC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PROC"
          },
          "SETTLE_TO_ZERO_STATES2": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#SETTLE_TO_ZERO_STATES2"
          },
          "SETTLE_TO_ZERO_STATES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#SETTLE_TO_ZERO_STATES"
          },
          "STATE_PHONE_SIGNAL_STRENGTH_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_PHONE_SIGNAL_STRENGTH_SHIFT"
          },
          "EVENT_SYNC": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_SYNC"
          },
          "STATE_BATTERY_PLUGGED_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_BATTERY_PLUGGED_FLAG"
          },
          "EVENT_USER_FOREGROUND_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_USER_FOREGROUND_FINISH"
          },
          "EVENT_SYNC_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_SYNC_START"
          },
          "EVENT_PACKAGE_UNINSTALLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PACKAGE_UNINSTALLED"
          },
          "EVENT_WAKE_LOCK_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_WAKE_LOCK_START"
          },
          "STATE2_WIFI_SIGNAL_STRENGTH_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_WIFI_SIGNAL_STRENGTH_SHIFT"
          },
          "EVENT_PACKAGE_INACTIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PACKAGE_INACTIVE"
          },
          "CMD_START": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_START"
          },
          "STATE2_WIFI_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_WIFI_ON_FLAG"
          },
          "EVENT_PACKAGE_INSTALLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_PACKAGE_INSTALLED"
          },
          "STATE_SENSOR_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_SENSOR_ON_FLAG"
          },
          "CMD_NULL": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_NULL"
          },
          "EVENT_NONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_NONE"
          },
          "MOST_INTERESTING_STATES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#MOST_INTERESTING_STATES"
          },
          "EVENT_USER_RUNNING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_USER_RUNNING"
          },
          "CMD_OVERFLOW": {
            "!type": "+java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#CMD_OVERFLOW"
          },
          "EVENT_ACTIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_ACTIVE"
          },
          "STATE_CPU_RUNNING_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_CPU_RUNNING_FLAG"
          },
          "STATE_PHONE_STATE_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_PHONE_STATE_SHIFT"
          },
          "STATE_PHONE_SIGNAL_STRENGTH_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_PHONE_SIGNAL_STRENGTH_MASK"
          },
          "EVENT_WAKE_LOCK_FINISH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_WAKE_LOCK_FINISH"
          },
          "EVENT_COLLECT_EXTERNAL_STATS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_COLLECT_EXTERNAL_STATS"
          },
          "STATE2_VIDEO_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE2_VIDEO_ON_FLAG"
          },
          "STATE_GPS_ON_FLAG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#STATE_GPS_ON_FLAG"
          },
          "EVENT_COUNT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#EVENT_COUNT"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "clear": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#clear()"
            },
            "isDeltaData": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#isDeltaData()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#writeToParcel(android.os.Parcel, int)"
            },
            "sameNonEvent": {
              "!type": "fn(o: +android.os.BatteryStats.HistoryItem) -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#sameNonEvent(android.os.BatteryStats.HistoryItem)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "same": {
              "!type": "fn(o: +android.os.BatteryStats.HistoryItem) -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#same(android.os.BatteryStats.HistoryItem)"
            },
            "setTo": {
              "!type": "fn(o: +android.os.BatteryStats.HistoryItem) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#setTo(android.os.BatteryStats.HistoryItem)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(src: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryItem.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "HistoryEventTracker": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryEventTracker.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getStateForEvent": {
              "!type": "fn(code: number) -> +java.util.HashMap",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryEventTracker.html#getStateForEvent(int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "updateState": {
              "!type": "fn(code: number, name: string, uid: number, poolIdx: number) -> bool",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryEventTracker.html#updateState(int, java.lang.String, int, int)"
            },
            "removeEvents": {
              "!type": "fn(code: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryEventTracker.html#removeEvents(int)"
            }
          }
        },
        "BitDescription": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.BitDescription.html",
          "!type": "fn(mask: number, name: string, shortName: string)",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "HistoryPrinter": {
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryPrinter.html",
          "!type": "fn()",
          "prototype": {
            "printNextItem": {
              "!type": "fn(pw: +java.io.PrintWriter, rec: +android.os.BatteryStats.HistoryItem, baseTime: +java.lang.Long, checkin: bool, verbose: bool) -> void",
              "!url": "http://developer.android.com/reference/android/os/BatteryStats.HistoryPrinter.html#printNextItem(java.io.PrintWriter, android.os.BatteryStats.HistoryItem, long, boolean, boolean)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "STEP_LEVEL_MODIFIED_MODE_MASK": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODIFIED_MODE_MASK"
        },
        "WIFI_SUPPL_STATE_INACTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_INACTIVE"
        },
        "DATA_CONNECTION_1xRTT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_1xRTT"
        },
        "WIFI_SCAN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SCAN"
        },
        "HISTORY_STATE_DESCRIPTIONS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#HISTORY_STATE_DESCRIPTIONS"
        },
        "STEP_LEVEL_MODIFIED_MODE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODIFIED_MODE_SHIFT"
        },
        "SCREEN_BRIGHTNESS_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SCREEN_BRIGHTNESS_LIGHT"
        },
        "DATA_CONNECTION_LTE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_LTE"
        },
        "STEP_LEVEL_MODE_LABELS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODE_LABELS"
        },
        "DATA_CONNECTION_IDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_IDEN"
        },
        "SENSOR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SENSOR"
        },
        "WIFI_STATE_OFF_SCANNING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_OFF_SCANNING"
        },
        "WAKE_TYPE_WINDOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WAKE_TYPE_WINDOW"
        },
        "WIFI_MULTICAST_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_MULTICAST_ENABLED"
        },
        "WIFI_SUPPL_STATE_DISCONNECTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_DISCONNECTED"
        },
        "STATS_SINCE_UNPLUGGED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STATS_SINCE_UNPLUGGED"
        },
        "DATA_CONNECTION_OTHER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_OTHER"
        },
        "WIFI_STATE_ON_CONNECTED_STA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_ON_CONNECTED_STA"
        },
        "NETWORK_MOBILE_RX_DATA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NETWORK_MOBILE_RX_DATA"
        },
        "NUM_WIFI_SIGNAL_STRENGTH_BINS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_WIFI_SIGNAL_STRENGTH_BINS"
        },
        "VIDEO_TURNED_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#VIDEO_TURNED_ON"
        },
        "NETWORK_WIFI_TX_DATA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NETWORK_WIFI_TX_DATA"
        },
        "HISTORY_EVENT_NAMES": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#HISTORY_EVENT_NAMES"
        },
        "WIFI_STATE_ON_NO_NETWORKS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_ON_NO_NETWORKS"
        },
        "HISTORY_EVENT_CHECKIN_NAMES": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#HISTORY_EVENT_CHECKIN_NAMES"
        },
        "FULL_WIFI_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#FULL_WIFI_LOCK"
        },
        "WIFI_SUPPL_STATE_UNINITIALIZED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_UNINITIALIZED"
        },
        "DUMP_INCLUDE_HISTORY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DUMP_INCLUDE_HISTORY"
        },
        "AUDIO_TURNED_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#AUDIO_TURNED_ON"
        },
        "FOREGROUND_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#FOREGROUND_ACTIVITY"
        },
        "WIFI_SUPPL_STATE_AUTHENTICATING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_AUTHENTICATING"
        },
        "WIFI_SUPPL_STATE_INVALID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_INVALID"
        },
        "DATA_CONNECTION_EVDO_B": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_EVDO_B"
        },
        "DATA_CONNECTION_EVDO_A": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_EVDO_A"
        },
        "VIBRATOR_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#VIBRATOR_ON"
        },
        "WIFI_SUPPL_STATE_ASSOCIATED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_ASSOCIATED"
        },
        "CONTROLLER_TX_TIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#CONTROLLER_TX_TIME"
        },
        "DUMP_CHARGED_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DUMP_CHARGED_ONLY"
        },
        "STEP_LEVEL_TIME_MASK": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_TIME_MASK"
        },
        "DATA_CONNECTION_HSUPA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_HSUPA"
        },
        "SYNC": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SYNC"
        },
        "STEP_LEVEL_MODE_SCREEN_STATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODE_SCREEN_STATE"
        },
        "SCREEN_BRIGHTNESS_MEDIUM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SCREEN_BRIGHTNESS_MEDIUM"
        },
        "DATA_CONNECTION_EVDO_0": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_EVDO_0"
        },
        "STEP_LEVEL_MODE_DEVICE_IDLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODE_DEVICE_IDLE"
        },
        "STEP_LEVEL_LEVEL_MASK": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_LEVEL_MASK"
        },
        "NUM_NETWORK_ACTIVITY_TYPES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_NETWORK_ACTIVITY_TYPES"
        },
        "DATA_CONNECTION_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_NONE"
        },
        "SCREEN_BRIGHTNESS_BRIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SCREEN_BRIGHTNESS_BRIGHT"
        },
        "WIFI_STATE_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_OFF"
        },
        "JOB": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#JOB"
        },
        "STEP_LEVEL_MODES_OF_INTEREST": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODES_OF_INTEREST"
        },
        "STATS_CURRENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STATS_CURRENT"
        },
        "DATA_CONNECTION_GPRS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_GPRS"
        },
        "WAKE_TYPE_PARTIAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WAKE_TYPE_PARTIAL"
        },
        "WIFI_STATE_SOFT_AP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_SOFT_AP"
        },
        "STEP_LEVEL_MODE_VALUES": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODE_VALUES"
        },
        "STEP_LEVEL_MODE_POWER_SAVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_MODE_POWER_SAVE"
        },
        "WIFI_SUPPL_STATE_FOUR_WAY_HANDSHAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_FOUR_WAY_HANDSHAKE"
        },
        "WIFI_SUPPL_STATE_GROUP_HANDSHAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_GROUP_HANDSHAKE"
        },
        "WAKE_TYPE_DRAW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WAKE_TYPE_DRAW"
        },
        "NUM_SCREEN_BRIGHTNESS_BINS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_SCREEN_BRIGHTNESS_BINS"
        },
        "NETWORK_WIFI_RX_DATA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NETWORK_WIFI_RX_DATA"
        },
        "CAMERA_TURNED_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#CAMERA_TURNED_ON"
        },
        "NUM_WIFI_SUPPL_STATES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_WIFI_SUPPL_STATES"
        },
        "NUM_DATA_CONNECTION_TYPES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_DATA_CONNECTION_TYPES"
        },
        "WIFI_SUPPL_STATE_SCANNING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_SCANNING"
        },
        "DATA_CONNECTION_UMTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_UMTS"
        },
        "WIFI_STATE_ON_CONNECTED_STA_P2P": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_ON_CONNECTED_STA_P2P"
        },
        "DATA_CONNECTION_CDMA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_CDMA"
        },
        "DATA_CONNECTION_EDGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_EDGE"
        },
        "CONTROLLER_RX_TIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#CONTROLLER_RX_TIME"
        },
        "DATA_CONNECTION_EHRPD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_EHRPD"
        },
        "WIFI_STATE_ON_CONNECTED_P2P": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_ON_CONNECTED_P2P"
        },
        "WIFI_SUPPL_STATE_INTERFACE_DISABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_INTERFACE_DISABLED"
        },
        "DUMP_VERBOSE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DUMP_VERBOSE"
        },
        "WIFI_SUPPL_STATE_COMPLETED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_COMPLETED"
        },
        "NUM_WIFI_STATES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_WIFI_STATES"
        },
        "FLASHLIGHT_TURNED_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#FLASHLIGHT_TURNED_ON"
        },
        "DUMP_DEVICE_WIFI_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DUMP_DEVICE_WIFI_ONLY"
        },
        "STEP_LEVEL_LEVEL_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_LEVEL_SHIFT"
        },
        "SCREEN_BRIGHTNESS_DIM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SCREEN_BRIGHTNESS_DIM"
        },
        "WIFI_BATCHED_SCAN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_BATCHED_SCAN"
        },
        "WAKE_TYPE_FULL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WAKE_TYPE_FULL"
        },
        "NETWORK_MOBILE_TX_DATA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NETWORK_MOBILE_TX_DATA"
        },
        "WIFI_RUNNING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_RUNNING"
        },
        "WIFI_SUPPL_STATE_DORMANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_DORMANT"
        },
        "DATA_CONNECTION_HSPA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_HSPA"
        },
        "SERVICE_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SERVICE_NAME"
        },
        "CONTROLLER_IDLE_TIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#CONTROLLER_IDLE_TIME"
        },
        "HISTORY_STATE2_DESCRIPTIONS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#HISTORY_STATE2_DESCRIPTIONS"
        },
        "DATA_CONNECTION_HSPAP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_HSPAP"
        },
        "STEP_LEVEL_INITIAL_MODE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_INITIAL_MODE_SHIFT"
        },
        "DATA_CONNECTION_HSDPA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DATA_CONNECTION_HSDPA"
        },
        "WIFI_SUPPL_STATE_ASSOCIATING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_SUPPL_STATE_ASSOCIATING"
        },
        "DUMP_DAILY_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DUMP_DAILY_ONLY"
        },
        "STEP_LEVEL_INITIAL_MODE_MASK": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STEP_LEVEL_INITIAL_MODE_MASK"
        },
        "CONTROLLER_POWER_DRAIN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#CONTROLLER_POWER_DRAIN"
        },
        "SCREEN_BRIGHTNESS_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#SCREEN_BRIGHTNESS_DARK"
        },
        "PROCESS_STATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#PROCESS_STATE"
        },
        "STATS_SINCE_CHARGED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#STATS_SINCE_CHARGED"
        },
        "NUM_CONTROLLER_ACTIVITY_TYPES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#NUM_CONTROLLER_ACTIVITY_TYPES"
        },
        "DUMP_HISTORY_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#DUMP_HISTORY_ONLY"
        },
        "WIFI_STATE_ON_DISCONNECTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#WIFI_STATE_ON_DISCONNECTED"
        },
        "formatTimeMsNoSpace": {
          "!type": "fn(sb: +java.lang.StringBuilder, time: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#formatTimeMsNoSpace(java.lang.StringBuilder, long)"
        },
        "formatTimeMs": {
          "!type": "fn(sb: +java.lang.StringBuilder, time: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#formatTimeMs(java.lang.StringBuilder, long)"
        },
        "prototype": {
          "getNetworkActivityPackets": {
            "!type": "fn(type: number, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNetworkActivityPackets(int, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getFlashlightOnTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getFlashlightOnTime(long, int)"
          },
          "getHistoryBaseTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryBaseTime()"
          },
          "getNextMaxDailyDeadline": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNextMaxDailyDeadline()"
          },
          "getMobileRadioActiveAdjustedTime": {
            "!type": "fn(which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getMobileRadioActiveAdjustedTime(int)"
          },
          "getDailyDischargeLevelStepTracker": {
            "!type": "fn() -> +android.os.BatteryStats.LevelStepTracker",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDailyDischargeLevelStepTracker()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "prepareForDumpLocked": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#prepareForDumpLocked()"
          },
          "getDischargeCurrentLevel": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeCurrentLevel()"
          },
          "getCpuSpeedSteps": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getCpuSpeedSteps()"
          },
          "getScreenOnTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getScreenOnTime(long, int)"
          },
          "getWakeupReasonStats": {
            "!type": "fn() -> +java.util.Map",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWakeupReasonStats()"
          },
          "getStartClockTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getStartClockTime()"
          },
          "getPhoneSignalStrengthCount": {
            "!type": "fn(strengthBin: number, which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneSignalStrengthCount(int, int)"
          },
          "getPhoneDataConnectionCount": {
            "!type": "fn(dataType: number, which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneDataConnectionCount(int, int)"
          },
          "getCameraOnTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getCameraOnTime(long, int)"
          },
          "getPowerSaveModeEnabledCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPowerSaveModeEnabledCount(int)"
          },
          "finishIteratingOldHistoryLocked": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#finishIteratingOldHistoryLocked()"
          },
          "computeRealtime": {
            "!type": "fn(curTime: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeRealtime(long, int)"
          },
          "getDailyPackageChanges": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDailyPackageChanges()"
          },
          "getDischargeLevelStepTracker": {
            "!type": "fn() -> +android.os.BatteryStats.LevelStepTracker",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeLevelStepTracker()"
          },
          "writeToParcelWithoutUids": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#writeToParcelWithoutUids(android.os.Parcel, int)"
          },
          "getDailyItemLocked": {
            "!type": "fn(daysAgo: number) -> +android.os.BatteryStats.DailyItem",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDailyItemLocked(int)"
          },
          "getHistoryTagPoolString": {
            "!type": "fn(index: number) -> string",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryTagPoolString(int)"
          },
          "getScreenOnCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getScreenOnCount(int)"
          },
          "getBatteryUptime": {
            "!type": "fn(curTime: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getBatteryUptime(long)"
          },
          "getWifiSignalStrengthTime": {
            "!type": "fn(strengthBin: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiSignalStrengthTime(int, long, int)"
          },
          "getLowDischargeAmountSinceCharge": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getLowDischargeAmountSinceCharge()"
          },
          "getWifiControllerActivity": {
            "!type": "fn(type: number, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiControllerActivity(int, int)"
          },
          "getStartPlatformVersion": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getStartPlatformVersion()"
          },
          "getWifiStateTime": {
            "!type": "fn(wifiState: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiStateTime(int, long, int)"
          },
          "getDailyChargeLevelStepTracker": {
            "!type": "fn() -> +android.os.BatteryStats.LevelStepTracker",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDailyChargeLevelStepTracker()"
          },
          "getHistoryTotalSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryTotalSize()"
          },
          "getHighDischargeAmountSinceCharge": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHighDischargeAmountSinceCharge()"
          },
          "getMobileRadioActiveUnknownCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getMobileRadioActiveUnknownCount(int)"
          },
          "getDischargeAmountScreenOff": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeAmountScreenOff()"
          },
          "getParcelVersion": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getParcelVersion()"
          },
          "getDischargeAmount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeAmount(int)"
          },
          "getHistoryStringPoolBytes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryStringPoolBytes()"
          },
          "getDeviceIdleModeEnabledCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDeviceIdleModeEnabledCount(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getGlobalWifiRunningTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getGlobalWifiRunningTime(long, int)"
          },
          "dumpCheckinLocked": {
            "!type": "fn(context: +android.content.Context, pw: +java.io.PrintWriter, which: number, reqUid: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#dumpCheckinLocked(android.content.Context, java.io.PrintWriter, int, int)"
          },
          "computeUptime": {
            "!type": "fn(curTime: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeUptime(long, int)"
          },
          "getBatteryRealtime": {
            "!type": "fn(curTime: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getBatteryRealtime(long)"
          },
          "getPhoneSignalScanningTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneSignalScanningTime(long, int)"
          },
          "computeBatteryTimeRemaining": {
            "!type": "fn(curTime: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeBatteryTimeRemaining(long)"
          },
          "getEndPlatformVersion": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getEndPlatformVersion()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getPhoneDataConnectionTime": {
            "!type": "fn(dataType: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneDataConnectionTime(int, long, int)"
          },
          "computeBatteryScreenOffUptime": {
            "!type": "fn(curTime: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeBatteryScreenOffUptime(long, int)"
          },
          "getPowerSaveModeEnabledTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPowerSaveModeEnabledTime(long, int)"
          },
          "getPhoneOnTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneOnTime(long, int)"
          },
          "getChargeLevelStepTracker": {
            "!type": "fn() -> +android.os.BatteryStats.LevelStepTracker",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getChargeLevelStepTracker()"
          },
          "getDischargeAmountScreenOnSinceCharge": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeAmountScreenOnSinceCharge()"
          },
          "getCurrentDailyStartTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getCurrentDailyStartTime()"
          },
          "hasBluetoothActivityReporting": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#hasBluetoothActivityReporting()"
          },
          "getDeviceIdleModeEnabledTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDeviceIdleModeEnabledTime(long, int)"
          },
          "getIsOnBattery": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getIsOnBattery()"
          },
          "getPhoneOnCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneOnCount(int)"
          },
          "getHistoryUsedSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryUsedSize()"
          },
          "computeBatteryRealtime": {
            "!type": "fn(curTime: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeBatteryRealtime(long, int)"
          },
          "getWifiSupplStateCount": {
            "!type": "fn(state: number, which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiSupplStateCount(int, int)"
          },
          "getWifiSupplStateTime": {
            "!type": "fn(state: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiSupplStateTime(int, long, int)"
          },
          "getMobileRadioActiveCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getMobileRadioActiveCount(int)"
          },
          "getNextOldHistoryLocked": {
            "!type": "fn(out: +android.os.BatteryStats.HistoryItem) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNextOldHistoryLocked(android.os.BatteryStats.HistoryItem)"
          },
          "startIteratingHistoryLocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#startIteratingHistoryLocked()"
          },
          "getDeviceIdlingTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDeviceIdlingTime(long, int)"
          },
          "computeBatteryScreenOffRealtime": {
            "!type": "fn(curTime: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeBatteryScreenOffRealtime(long, int)"
          },
          "getWifiSignalStrengthCount": {
            "!type": "fn(strengthBin: number, which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiSignalStrengthCount(int, int)"
          },
          "getMobileRadioActiveTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getMobileRadioActiveTime(long, int)"
          },
          "computeBatteryUptime": {
            "!type": "fn(curTime: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeBatteryUptime(long, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "computeChargeTimeRemaining": {
            "!type": "fn(curTime: +java.lang.Long) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#computeChargeTimeRemaining(long)"
          },
          "getNumConnectivityChange": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNumConnectivityChange(int)"
          },
          "getDischargeAmountScreenOn": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeAmountScreenOn()"
          },
          "getFlashlightOnCount": {
            "!type": "fn(which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getFlashlightOnCount(int)"
          },
          "getInteractiveTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getInteractiveTime(long, int)"
          },
          "commitCurrentHistoryBatchLocked": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#commitCurrentHistoryBatchLocked()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getDischargeStartLevel": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeStartLevel()"
          },
          "getHistoryTagPoolUid": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryTagPoolUid(int)"
          },
          "getBluetoothControllerActivity": {
            "!type": "fn(type: number, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getBluetoothControllerActivity(int, int)"
          },
          "formatRatioLocked": {
            "!type": "fn(num: +java.lang.Long, den: +java.lang.Long) -> string",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#formatRatioLocked(long, long)"
          },
          "dumpLocked": {
            "!type": "fn(context: +android.content.Context, pw: +java.io.PrintWriter, prefix: string, which: number, reqUid: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#dumpLocked(android.content.Context, java.io.PrintWriter, java.lang.String, int, int)"
          },
          "hasWifiActivityReporting": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#hasWifiActivityReporting()"
          },
          "getHistoryStringPoolSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getHistoryStringPoolSize()"
          },
          "getDischargeAmountScreenOffSinceCharge": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDischargeAmountScreenOffSinceCharge()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "finishIteratingHistoryLocked": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#finishIteratingHistoryLocked()"
          },
          "getKernelWakelockStats": {
            "!type": "fn() -> +java.util.Map",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getKernelWakelockStats()"
          },
          "getDeviceIdlingCount": {
            "!type": "fn(which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getDeviceIdlingCount(int)"
          },
          "getNextMinDailyDeadline": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNextMinDailyDeadline()"
          },
          "getUidStats": {
            "!type": "fn() -> +android.util.SparseArray",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getUidStats()"
          },
          "getNetworkActivityBytes": {
            "!type": "fn(type: number, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNetworkActivityBytes(int, int)"
          },
          "startIteratingOldHistoryLocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#startIteratingOldHistoryLocked()"
          },
          "getStartCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getStartCount()"
          },
          "getMobileRadioActiveUnknownTime": {
            "!type": "fn(which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getMobileRadioActiveUnknownTime(int)"
          },
          "getWifiStateCount": {
            "!type": "fn(wifiState: number, which: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiStateCount(int, int)"
          },
          "getPhoneSignalStrengthTime": {
            "!type": "fn(strengthBin: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getPhoneSignalStrengthTime(int, long, int)"
          },
          "getScreenBrightnessTime": {
            "!type": "fn(brightnessBin: number, elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getScreenBrightnessTime(int, long, int)"
          },
          "getWifiOnTime": {
            "!type": "fn(elapsedRealtimeUs: +java.lang.Long, which: number) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getWifiOnTime(long, int)"
          },
          "getNextHistoryLocked": {
            "!type": "fn(out: +android.os.BatteryStats.HistoryItem) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BatteryStats.html#getNextHistoryLocked(android.os.BatteryStats.HistoryItem)"
          }
        }
      },
      "RemoteException": {
        "!url": "http://developer.android.com/reference/android/os/RemoteException.html",
        "!type": "fn()",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "rethrowAsRuntimeException": {
            "!type": "fn() -> +java.lang.RuntimeException",
            "!url": "http://developer.android.com/reference/android/os/RemoteException.html#rethrowAsRuntimeException()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "TransactionTooLargeException": {
        "!url": "http://developer.android.com/reference/android/os/TransactionTooLargeException.html",
        "!type": "fn()",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "rethrowAsRuntimeException": {
            "!type": "fn() -> +java.lang.RuntimeException",
            "!url": "http://developer.android.com/reference/android/os/RemoteException.html#rethrowAsRuntimeException()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "PooledStringReader": {
        "!url": "http://developer.android.com/reference/android/os/PooledStringReader.html",
        "!type": "fn(in: +android.os.Parcel)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getStringCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PooledStringReader.html#getStringCount()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "readString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/PooledStringReader.html#readString()"
          }
        }
      },
      "SystemProperties": {
        "!url": "http://developer.android.com/reference/android/os/SystemProperties.html",
        "!type": "fn()",
        "PROP_NAME_MAX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#PROP_NAME_MAX"
        },
        "PROP_VALUE_MAX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#PROP_VALUE_MAX"
        },
        "getLong": {
          "!type": "fn(key: string, def: +java.lang.Long) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#getLong(java.lang.String, long)"
        },
        "getInt": {
          "!type": "fn(key: string, def: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#getInt(java.lang.String, int)"
        },
        "addChangeCallback": {
          "!type": "fn(callback: +java.lang.Runnable) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#addChangeCallback(java.lang.Runnable)"
        },
        "get": {
          "!type": "fn(key: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#get(java.lang.String)"
        },
        "getBoolean": {
          "!type": "fn(key: string, def: bool) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#getBoolean(java.lang.String, boolean)"
        },
        "set": {
          "!type": "fn(key: string, val: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemProperties.html#set(java.lang.String, java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "CommonTimeConfig": {
        "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html",
        "!type": "fn()",
        "INVALID_GROUP_ID": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#INVALID_GROUP_ID"
        },
        "ERROR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#ERROR"
        },
        "SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#SUCCESS"
        },
        "ERROR_DEAD_OBJECT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#ERROR_DEAD_OBJECT"
        },
        "ERROR_BAD_VALUE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#ERROR_BAD_VALUE"
        },
        "SERVICE_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#SERVICE_NAME"
        },
        "create": {
          "!type": "fn() -> +android.os.CommonTimeConfig",
          "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#create()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getClientSyncInterval": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getClientSyncInterval()"
          },
          "forceNetworklessMasterMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#forceNetworklessMasterMode()"
          },
          "setMasterElectionPriority": {
            "!type": "fn(priority: +java.lang.Byte) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setMasterElectionPriority(byte)"
          },
          "setNetworkBinding": {
            "!type": "fn(ifaceName: string) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setNetworkBinding(java.lang.String)"
          },
          "getMasterElectionEndpoint": {
            "!type": "fn() -> +java.net.InetSocketAddress",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getMasterElectionEndpoint()"
          },
          "setClientSyncInterval": {
            "!type": "fn(interval: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setClientSyncInterval(int)"
          },
          "getInterfaceBinding": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getInterfaceBinding()"
          },
          "setMasterElectionGroupId": {
            "!type": "fn(id: +java.lang.Long) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setMasterElectionGroupId(long)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setServerDiedListener": {
            "!type": "fn(listener: +android.os.CommonTimeConfig.OnServerDiedListener) -> void",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setServerDiedListener(android.os.CommonTimeConfig.OnServerDiedListener)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAutoDisable": {
            "!type": "fn(autoDisable: bool) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setAutoDisable(boolean)"
          },
          "getAutoDisable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getAutoDisable()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getMasterElectionGroupId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getMasterElectionGroupId()"
          },
          "getMasterAnnounceInterval": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getMasterAnnounceInterval()"
          },
          "release": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#release()"
          },
          "getPanicThreshold": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getPanicThreshold()"
          },
          "setPanicThreshold": {
            "!type": "fn(threshold: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setPanicThreshold(int)"
          },
          "getMasterElectionPriority": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#getMasterElectionPriority()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setMasterElectionEndpoint": {
            "!type": "fn(ep: +java.net.InetSocketAddress) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setMasterElectionEndpoint(java.net.InetSocketAddress)"
          },
          "setMasterAnnounceInterval": {
            "!type": "fn(interval: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonTimeConfig.html#setMasterAnnounceInterval(int)"
          }
        }
      },
      "TraceTest": {
        "!url": "http://developer.android.com/reference/android/os/TraceTest.html",
        "!type": "fn()",
        "prototype": {
          "testMethodTracing": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/TraceTest.html#testMethodTracing()"
          },
          "disableTestNativeTracingFromC": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/TraceTest.html#disableTestNativeTracingFromC()"
          },
          "eMethod": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/TraceTest.html#eMethod()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "testNativeTracingFromJava": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/TraceTest.html#testNativeTracingFromJava()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "gMethod": {
            "!type": "fn(level: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/TraceTest.html#gMethod(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "fMethod": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/TraceTest.html#fMethod()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "BrightnessLimit": {
        "!url": "http://developer.android.com/reference/android/os/BrightnessLimit.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "onClick": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/os/BrightnessLimit.html#onClick(android.view.View)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "FactoryTest": {
        "!url": "http://developer.android.com/reference/android/os/FactoryTest.html",
        "!type": "fn()",
        "FACTORY_TEST_HIGH_LEVEL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FactoryTest.html#FACTORY_TEST_HIGH_LEVEL"
        },
        "FACTORY_TEST_LOW_LEVEL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FactoryTest.html#FACTORY_TEST_LOW_LEVEL"
        },
        "FACTORY_TEST_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FactoryTest.html#FACTORY_TEST_OFF"
        },
        "getMode": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/FactoryTest.html#getMode()"
        },
        "isLongPressOnPowerOffEnabled": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/FactoryTest.html#isLongPressOnPowerOffEnabled()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "PooledStringWriter": {
        "!url": "http://developer.android.com/reference/android/os/PooledStringWriter.html",
        "!type": "fn(out: +android.os.Parcel)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getStringCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PooledStringWriter.html#getStringCount()"
          },
          "writeString": {
            "!type": "fn(str: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/PooledStringWriter.html#writeString(java.lang.String)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PooledStringWriter.html#finish()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PowerManager": {
        "!url": "http://developer.android.com/reference/android/os/PowerManager.html",
        "!type": "fn(context: +android.content.Context, service: IPowerManager, handler: +android.os.Handler)",
        "WakeLock": {
          "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#toString()"
            },
            "setTag": {
              "!type": "fn(tag: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#setTag(java.lang.String)"
            },
            "setReferenceCounted": {
              "!type": "fn(value: bool) -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#setReferenceCounted(boolean)"
            },
            "setWorkSource": {
              "!type": "fn(ws: +android.os.WorkSource) -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#setWorkSource(android.os.WorkSource)"
            },
            "setUnimportantForLogging": {
              "!type": "fn(state: bool) -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#setUnimportantForLogging(boolean)"
            },
            "acquire": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#acquire()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "isHeld": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#isHeld()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "release": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#release()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setHistoryTag": {
              "!type": "fn(tag: string) -> void",
              "!url": "http://developer.android.com/reference/android/os/PowerManager.WakeLock.html#setHistoryTag(java.lang.String)"
            }
          }
        },
        "ACTION_POWER_SAVE_TEMP_WHITELIST_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACTION_POWER_SAVE_TEMP_WHITELIST_CHANGED"
        },
        "USER_ACTIVITY_FLAG_NO_CHANGE_LIGHTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#USER_ACTIVITY_FLAG_NO_CHANGE_LIGHTS"
        },
        "GO_TO_SLEEP_REASON_APPLICATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_APPLICATION"
        },
        "ACTION_POWER_SAVE_WHITELIST_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACTION_POWER_SAVE_WHITELIST_CHANGED"
        },
        "USER_ACTIVITY_EVENT_TOUCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#USER_ACTIVITY_EVENT_TOUCH"
        },
        "USER_ACTIVITY_FLAG_INDIRECT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#USER_ACTIVITY_FLAG_INDIRECT"
        },
        "DRAW_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#DRAW_WAKE_LOCK"
        },
        "EXTRA_POWER_SAVE_MODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#EXTRA_POWER_SAVE_MODE"
        },
        "GO_TO_SLEEP_REASON_LID_SWITCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_LID_SWITCH"
        },
        "USER_ACTIVITY_EVENT_OTHER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#USER_ACTIVITY_EVENT_OTHER"
        },
        "GO_TO_SLEEP_REASON_SLEEP_BUTTON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_SLEEP_BUTTON"
        },
        "BRIGHTNESS_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#BRIGHTNESS_OFF"
        },
        "USER_ACTIVITY_EVENT_BUTTON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#USER_ACTIVITY_EVENT_BUTTON"
        },
        "PARTIAL_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#PARTIAL_WAKE_LOCK"
        },
        "GO_TO_SLEEP_REASON_TIMEOUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_TIMEOUT"
        },
        "SCREEN_BRIGHT_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#SCREEN_BRIGHT_WAKE_LOCK"
        },
        "BRIGHTNESS_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#BRIGHTNESS_DEFAULT"
        },
        "UNIMPORTANT_FOR_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#UNIMPORTANT_FOR_LOGGING"
        },
        "ON_AFTER_RELEASE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ON_AFTER_RELEASE"
        },
        "ACTION_SCREEN_BRIGHTNESS_BOOST_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACTION_SCREEN_BRIGHTNESS_BOOST_CHANGED"
        },
        "GO_TO_SLEEP_FLAG_NO_DOZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_FLAG_NO_DOZE"
        },
        "PROXIMITY_SCREEN_OFF_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#PROXIMITY_SCREEN_OFF_WAKE_LOCK"
        },
        "GO_TO_SLEEP_REASON_HDMI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_HDMI"
        },
        "DOZE_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#DOZE_WAKE_LOCK"
        },
        "SCREEN_DIM_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#SCREEN_DIM_WAKE_LOCK"
        },
        "ACTION_DEVICE_IDLE_MODE_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACTION_DEVICE_IDLE_MODE_CHANGED"
        },
        "RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY"
        },
        "WAKE_LOCK_LEVEL_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#WAKE_LOCK_LEVEL_MASK"
        },
        "ACTION_POWER_SAVE_MODE_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACTION_POWER_SAVE_MODE_CHANGED"
        },
        "ACTION_POWER_SAVE_MODE_CHANGING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACTION_POWER_SAVE_MODE_CHANGING"
        },
        "FULL_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#FULL_WAKE_LOCK"
        },
        "BRIGHTNESS_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#BRIGHTNESS_ON"
        },
        "GO_TO_SLEEP_REASON_POWER_BUTTON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_POWER_BUTTON"
        },
        "REBOOT_RECOVERY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#REBOOT_RECOVERY"
        },
        "ACQUIRE_CAUSES_WAKEUP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#ACQUIRE_CAUSES_WAKEUP"
        },
        "GO_TO_SLEEP_REASON_DEVICE_ADMIN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#GO_TO_SLEEP_REASON_DEVICE_ADMIN"
        },
        "useTwilightAdjustmentFeature": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#useTwilightAdjustmentFeature()"
        },
        "validateWakeLockParameters": {
          "!type": "fn(levelAndFlags: number, tag: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/PowerManager.html#validateWakeLockParameters(int, java.lang.String)"
        },
        "prototype": {
          "getDefaultScreenBrightnessSetting": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#getDefaultScreenBrightnessSetting()"
          },
          "isScreenBrightnessBoosted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isScreenBrightnessBoosted()"
          },
          "isScreenOn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isScreenOn()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setPowerSaveMode": {
            "!type": "fn(mode: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#setPowerSaveMode(boolean)"
          },
          "isPowerSaveMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isPowerSaveMode()"
          },
          "boostScreenBrightness": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#boostScreenBrightness(long)"
          },
          "goToSleep": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#goToSleep(long)"
          },
          "getMaximumScreenBrightnessSetting": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#getMaximumScreenBrightnessSetting()"
          },
          "setBacklightBrightness": {
            "!type": "fn(brightness: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#setBacklightBrightness(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "nap": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#nap(long)"
          },
          "isIgnoringBatteryOptimizations": {
            "!type": "fn(packageName: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isIgnoringBatteryOptimizations(java.lang.String)"
          },
          "reboot": {
            "!type": "fn(reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#reboot(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "shutdown": {
            "!type": "fn(confirm: bool, wait: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#shutdown(boolean, boolean)"
          },
          "isDeviceIdleMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isDeviceIdleMode()"
          },
          "isWakeLockLevelSupported": {
            "!type": "fn(level: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isWakeLockLevelSupported(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "wakeUp": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#wakeUp(long)"
          },
          "isInteractive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#isInteractive()"
          },
          "userActivity": {
            "!type": "fn(when: +java.lang.Long, noChangeLights: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#userActivity(long, boolean)"
          },
          "getMinimumScreenBrightnessSetting": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#getMinimumScreenBrightnessSetting()"
          },
          "newWakeLock": {
            "!type": "fn(levelAndFlags: number, tag: string) -> +android.os.PowerManager.WakeLock",
            "!url": "http://developer.android.com/reference/android/os/PowerManager.html#newWakeLock(int, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Looper_Accessor": {
        "!url": "http://developer.android.com/reference/android/os/Looper_Accessor.html",
        "!type": "fn()",
        "cleanupThread": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Looper_Accessor.html#cleanupThread()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "MessengerTest": {
        "!url": "http://developer.android.com/reference/android/os/MessengerTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testSend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MessengerTest.html#testSend()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Vibrator": {
        "!url": "http://developer.android.com/reference/android/os/Vibrator.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "hasVibrator": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Vibrator.html#hasVibrator()"
          },
          "vibrate": {
            "!type": "fn(milliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/Vibrator.html#vibrate(long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Vibrator.html#cancel()"
          }
        }
      },
      "MemoryFileTest": {
        "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html",
        "!type": "fn()",
        "prototype": {
          "testOutputStreamAdvances": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testOutputStreamAdvances()"
          },
          "testReadNegativeOffset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testReadNegativeOffset()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "testReadOffsetCountOverflow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testReadOffsetCountOverflow()"
          },
          "testCloseClose": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testCloseClose()"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "testReadEOF": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testReadEOF()"
          },
          "testReadOffsetOverflow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testReadOffsetOverflow()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testCloseAllowPurging": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testCloseAllowPurging()"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testPurge": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testPurge()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "testCloseWrite": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testCloseWrite()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testReadNegativeCount": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testReadNegativeCount()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "testCloseLeak": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testCloseLeak()"
          },
          "testCloseRead": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testCloseRead()"
          },
          "testRun": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFileTest.html#testRun()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "PatternMatcher": {
        "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html",
        "!type": "fn(pattern: string, type: number)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#CREATOR"
        },
        "PATTERN_PREFIX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#PATTERN_PREFIX"
        },
        "PATTERN_LITERAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#PATTERN_LITERAL"
        },
        "PATTERN_SIMPLE_GLOB": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#PATTERN_SIMPLE_GLOB"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "match": {
            "!type": "fn(str: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#match(java.lang.String)"
          },
          "getType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#getType()"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getPath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/PatternMatcher.html#getPath()"
          }
        }
      },
      "Trace": {
        "!url": "http://developer.android.com/reference/android/os/Trace.html",
        "TRACE_TAG_CAMERA": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_CAMERA"
        },
        "TRACE_TAG_WINDOW_MANAGER": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_WINDOW_MANAGER"
        },
        "TRACE_TAG_POWER": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_POWER"
        },
        "TRACE_TAG_DALVIK": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_DALVIK"
        },
        "TRACE_TAG_ACTIVITY_MANAGER": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_ACTIVITY_MANAGER"
        },
        "TRACE_TAG_INPUT": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_INPUT"
        },
        "TRACE_TAG_RS": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_RS"
        },
        "TRACE_TAG_GRAPHICS": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_GRAPHICS"
        },
        "TRACE_TAG_RESOURCES": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_RESOURCES"
        },
        "TRACE_TAG_SYNC_MANAGER": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_SYNC_MANAGER"
        },
        "TRACE_TAG_VIDEO": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_VIDEO"
        },
        "TRACE_TAG_AUDIO": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_AUDIO"
        },
        "TRACE_TAG_HAL": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_HAL"
        },
        "TRACE_TAG_NEVER": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_NEVER"
        },
        "TRACE_TAG_ALWAYS": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_ALWAYS"
        },
        "TRACE_TAG_APP": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_APP"
        },
        "TRACE_TAG_WEBVIEW": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_WEBVIEW"
        },
        "TRACE_TAG_VIEW": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_VIEW"
        },
        "TRACE_TAG_BIONIC": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#TRACE_TAG_BIONIC"
        },
        "isTagEnabled": {
          "!type": "fn(traceTag: +java.lang.Long) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#isTagEnabled(long)"
        },
        "traceCounter": {
          "!type": "fn(traceTag: +java.lang.Long, counterName: string, counterValue: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#traceCounter(long, java.lang.String, int)"
        },
        "traceEnd": {
          "!type": "fn(traceTag: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#traceEnd(long)"
        },
        "traceBegin": {
          "!type": "fn(traceTag: +java.lang.Long, methodName: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#traceBegin(long, java.lang.String)"
        },
        "setTracingEnabled": {
          "!type": "fn(enabled: bool) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#setTracingEnabled(boolean)"
        },
        "setAppTracingAllowed": {
          "!type": "fn(allowed: bool) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#setAppTracingAllowed(boolean)"
        },
        "asyncTraceBegin": {
          "!type": "fn(traceTag: +java.lang.Long, methodName: string, cookie: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#asyncTraceBegin(long, java.lang.String, int)"
        },
        "endSection": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#endSection()"
        },
        "beginSection": {
          "!type": "fn(sectionName: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#beginSection(java.lang.String)"
        },
        "asyncTraceEnd": {
          "!type": "fn(traceTag: +java.lang.Long, methodName: string, cookie: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Trace.html#asyncTraceEnd(long, java.lang.String, int)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "BuildTest": {
        "!url": "http://developer.android.com/reference/android/os/BuildTest.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testBuildFields": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BuildTest.html#testBuildFields()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Registrant": {
        "!url": "http://developer.android.com/reference/android/os/Registrant.html",
        "!type": "fn(h: +android.os.Handler, what: number, obj: +java.lang.Object)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "notifyRegistrant": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Registrant.html#notifyRegistrant()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Registrant.html#clear()"
          },
          "getHandler": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/os/Registrant.html#getHandler()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "messageForRegistrant": {
            "!type": "fn() -> +android.os.Message",
            "!url": "http://developer.android.com/reference/android/os/Registrant.html#messageForRegistrant()"
          },
          "notifyResult": {
            "!type": "fn(result: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/Registrant.html#notifyResult(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyException": {
            "!type": "fn(exception: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Registrant.html#notifyException(java.lang.Throwable)"
          }
        }
      },
      "ParcelableParcel": {
        "!url": "http://developer.android.com/reference/android/os/ParcelableParcel.html",
        "!type": "fn(loader: +java.lang.ClassLoader)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.ClassLoaderCreator",
          "!url": "http://developer.android.com/reference/android/os/ParcelableParcel.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ParcelableParcel.html#describeContents()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/os/ParcelableParcel.html#getClassLoader()"
          },
          "getParcel": {
            "!type": "fn() -> +android.os.Parcel",
            "!url": "http://developer.android.com/reference/android/os/ParcelableParcel.html#getParcel()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelableParcel.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ParcelBenchmark": {
        "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html",
        "!type": "fn()",
        "prototype": {
          "timeReadByte": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html#timeReadByte(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "timeReadInt": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html#timeReadInt(int)"
          },
          "timeWriteInt": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html#timeWriteInt(int)"
          },
          "timeReadLong": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html#timeReadLong(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "timeWriteByte": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html#timeWriteByte(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "timeWriteLong": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelBenchmark.html#timeWriteLong(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "PowerManagerTest": {
        "!url": "http://developer.android.com/reference/android/os/PowerManagerTest.html",
        "!type": "fn()",
        "prototype": {
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "testBadNewWakeLock": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerTest.html#testBadNewWakeLock()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testNewWakeLock": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerTest.html#testNewWakeLock()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setUp": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerTest.html#setUp()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "testPreconditions": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PowerManagerTest.html#testPreconditions()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "OsTests": {
        "!url": "http://developer.android.com/reference/android/os/OsTests.html",
        "!type": "fn()",
        "suite": {
          "!type": "fn() -> TestSuite",
          "!url": "http://developer.android.com/reference/android/os/OsTests.html#suite()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "FileObserverTest": {
        "!url": "http://developer.android.com/reference/android/os/FileObserverTest.html",
        "!type": "fn()",
        "prototype": {
          "testRun": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileObserverTest.html#testRun()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CommonClock": {
        "!url": "http://developer.android.com/reference/android/os/CommonClock.html",
        "!type": "fn()",
        "INVALID_TIMELINE_ID": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#INVALID_TIMELINE_ID"
        },
        "ERROR_ESTIMATE_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#ERROR_ESTIMATE_UNKNOWN"
        },
        "SERVICE_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#SERVICE_NAME"
        },
        "STATE_INITIAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#STATE_INITIAL"
        },
        "TIME_NOT_SYNCED": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#TIME_NOT_SYNCED"
        },
        "STATE_INVALID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#STATE_INVALID"
        },
        "STATE_MASTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#STATE_MASTER"
        },
        "STATE_WAIT_FOR_ELECTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#STATE_WAIT_FOR_ELECTION"
        },
        "STATE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#STATE_CLIENT"
        },
        "STATE_RONIN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#STATE_RONIN"
        },
        "create": {
          "!type": "fn() -> +android.os.CommonClock",
          "!url": "http://developer.android.com/reference/android/os/CommonClock.html#create()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setServerDiedListener": {
            "!type": "fn(listener: +android.os.CommonClock.OnServerDiedListener) -> void",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#setServerDiedListener(android.os.CommonClock.OnServerDiedListener)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#getTime()"
          },
          "getTimelineId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#getTimelineId()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTimelineChangedListener": {
            "!type": "fn(listener: +android.os.CommonClock.OnTimelineChangedListener) -> void",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#setTimelineChangedListener(android.os.CommonClock.OnTimelineChangedListener)"
          },
          "getMasterAddr": {
            "!type": "fn() -> +java.net.InetSocketAddress",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#getMasterAddr()"
          },
          "getEstimatedError": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#getEstimatedError()"
          },
          "getState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#getState()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "release": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CommonClock.html#release()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AidlTest": {
        "!url": "http://developer.android.com/reference/android/os/AidlTest.html",
        "!type": "fn()",
        "TestParcelable": {
          "!url": "http://developer.android.com/reference/android/os/AidlTest.TestParcelable.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.TestParcelable.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/os/AidlTest.TestParcelable.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/AidlTest.TestParcelable.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(parcel: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/AidlTest.TestParcelable.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(parcel: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/os/AidlTest.TestParcelable.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testListParcelableLonger": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testListParcelableLonger()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testInt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testInt()"
          },
          "testVoidSecurityException": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testVoidSecurityException()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testParcelableOut": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testParcelableOut()"
          },
          "testParcelableInOut": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testParcelableInOut()"
          },
          "testParcelableIn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testParcelableIn()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testIntSecurityException": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testIntSecurityException()"
          },
          "testListParcelableShorter": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testListParcelableShorter()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testArrays": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/AidlTest.html#testArrays()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "MemoryFile": {
        "!url": "http://developer.android.com/reference/android/os/MemoryFile.html",
        "!type": "fn(name: string, length: number)",
        "getSize": {
          "!type": "fn(fd: +java.io.FileDescriptor) -> number",
          "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#getSize(java.io.FileDescriptor)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "length": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#length()"
          },
          "getInputStream": {
            "!type": "fn() -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#getInputStream()"
          },
          "allowPurging": {
            "!type": "fn(allowPurging: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#allowPurging(boolean)"
          },
          "readBytes": {
            "!type": "fn(buffer: +java.newArray, srcOffset: number, destOffset: number, count: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#readBytes(byte[], int, int, int)"
          },
          "getOutputStream": {
            "!type": "fn() -> +java.io.OutputStream",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#getOutputStream()"
          },
          "isPurgingAllowed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#isPurgingAllowed()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#close()"
          },
          "getFileDescriptor": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#getFileDescriptor()"
          },
          "writeBytes": {
            "!type": "fn(buffer: +java.newArray, srcOffset: number, destOffset: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/MemoryFile.html#writeBytes(byte[], int, int, int)"
          }
        }
      },
      "SystemVibrator": {
        "!url": "http://developer.android.com/reference/android/os/SystemVibrator.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "hasVibrator": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/SystemVibrator.html#hasVibrator()"
          },
          "vibrate": {
            "!type": "fn(uid: number, opPkg: string, milliseconds: +java.lang.Long, attributes: +android.media.AudioAttributes) -> void",
            "!url": "http://developer.android.com/reference/android/os/SystemVibrator.html#vibrate(int, java.lang.String, long, android.media.AudioAttributes)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/SystemVibrator.html#cancel()"
          }
        }
      },
      "SystemClock_Delegate": {
        "!url": "http://developer.android.com/reference/android/os/SystemClock_Delegate.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "BatteryProperties": {
        "!url": "http://developer.android.com/reference/android/os/BatteryProperties.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/BatteryProperties.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperties.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(p: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperties.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "set": {
            "!type": "fn(other: +android.os.BatteryProperties) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperties.html#set(android.os.BatteryProperties)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ConditionVariable": {
        "!url": "http://developer.android.com/reference/android/os/ConditionVariable.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "block": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ConditionVariable.html#block()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "open": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ConditionVariable.html#open()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/ConditionVariable.html#close()"
          }
        }
      },
      "RecoverySystem": {
        "!url": "http://developer.android.com/reference/android/os/RecoverySystem.html",
        "!type": "fn()",
        "rebootWipeUserData": {
          "!type": "fn(context: +android.content.Context) -> void",
          "!url": "http://developer.android.com/reference/android/os/RecoverySystem.html#rebootWipeUserData(android.content.Context)"
        },
        "rebootWipeCache": {
          "!type": "fn(context: +android.content.Context) -> void",
          "!url": "http://developer.android.com/reference/android/os/RecoverySystem.html#rebootWipeCache(android.content.Context)"
        },
        "handleAftermath": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/os/RecoverySystem.html#handleAftermath()"
        },
        "installPackage": {
          "!type": "fn(context: +android.content.Context, packageFile: +java.io.File) -> void",
          "!url": "http://developer.android.com/reference/android/os/RecoverySystem.html#installPackage(android.content.Context, java.io.File)"
        },
        "verifyPackage": {
          "!type": "fn(packageFile: +java.io.File, listener: +android.os.RecoverySystem.ProgressListener, deviceCertsZipFile: +java.io.File) -> void",
          "!url": "http://developer.android.com/reference/android/os/RecoverySystem.html#verifyPackage(java.io.File, android.os.RecoverySystem.ProgressListener, java.io.File)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "UEventObserver": {
        "!url": "http://developer.android.com/reference/android/os/UEventObserver.html",
        "!type": "fn()",
        "UEvent": {
          "!url": "http://developer.android.com/reference/android/os/UEventObserver.UEvent.html",
          "!type": "fn(message: string)",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "get": {
              "!type": "fn(key: string) -> string",
              "!url": "http://developer.android.com/reference/android/os/UEventObserver.UEvent.html#get(java.lang.String)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/os/UEventObserver.UEvent.html#toString()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "startObserving": {
            "!type": "fn(match: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/UEventObserver.html#startObserving(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onUEvent": {
            "!type": "fn(event: +android.os.UEventObserver.UEvent) -> void",
            "!url": "http://developer.android.com/reference/android/os/UEventObserver.html#onUEvent(android.os.UEventObserver.UEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "stopObserving": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/UEventObserver.html#stopObserving()"
          }
        }
      },
      "HandlerThread": {
        "!url": "http://developer.android.com/reference/android/os/HandlerThread.html",
        "!type": "fn(name: string)",
        "NORM_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#NORM_PRIORITY"
        },
        "MAX_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MAX_PRIORITY"
        },
        "MIN_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MIN_PRIORITY"
        },
        "interrupted": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupted()"
        },
        "getAllStackTraces": {
          "!type": "fn() -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getAllStackTraces()"
        },
        "yield": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#yield()"
        },
        "currentThread": {
          "!type": "fn() -> +java.lang.Thread",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#currentThread()"
        },
        "dumpStack": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#dumpStack()"
        },
        "getDefaultUncaughtExceptionHandler": {
          "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getDefaultUncaughtExceptionHandler()"
        },
        "holdsLock": {
          "!type": "fn(object: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#holdsLock(java.lang.Object)"
        },
        "sleep": {
          "!type": "fn(time: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#sleep(long)"
        },
        "enumerate": {
          "!type": "fn(threads: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#enumerate(java.lang.Thread[])"
        },
        "setDefaultUncaughtExceptionHandler": {
          "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
        },
        "activeCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#activeCount()"
        },
        "prototype": {
          "pushInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#pushInterruptAction$(java.lang.Runnable)"
          },
          "interrupt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupt()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "popInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#popInterruptAction$(java.lang.Runnable)"
          },
          "getThreadGroup": {
            "!type": "fn() -> +java.lang.ThreadGroup",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getThreadGroup()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getStackTrace()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setDaemon": {
            "!type": "fn(isDaemon: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDaemon(boolean)"
          },
          "resume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#resume()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isInterrupted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isInterrupted()"
          },
          "join": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#join()"
          },
          "getPriority": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getPriority()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setUncaughtExceptionHandler": {
            "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
          },
          "quit": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/HandlerThread.html#quit()"
          },
          "getLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/os/HandlerThread.html#getLooper()"
          },
          "stop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#stop()"
          },
          "parkUntil$": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkUntil$(long)"
          },
          "getContextClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getContextClassLoader()"
          },
          "isAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isAlive()"
          },
          "run": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/HandlerThread.html#run()"
          },
          "start": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#start()"
          },
          "setPriority": {
            "!type": "fn(priority: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setPriority(int)"
          },
          "isDaemon": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isDaemon()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#checkAccess()"
          },
          "suspend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#suspend()"
          },
          "countStackFrames": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#countStackFrames()"
          },
          "unpark$": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#unpark$()"
          },
          "quitSafely": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/HandlerThread.html#quitSafely()"
          },
          "getThreadId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/HandlerThread.html#getThreadId()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getName()"
          },
          "setName": {
            "!type": "fn(threadName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setName(java.lang.String)"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#destroy()"
          },
          "parkFor$": {
            "!type": "fn(nanos: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkFor$(long)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUncaughtExceptionHandler": {
            "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getUncaughtExceptionHandler()"
          },
          "getState": {
            "!type": "fn() -> +java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getState()"
          },
          "getId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getId()"
          },
          "setContextClassLoader": {
            "!type": "fn(cl: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setContextClassLoader(java.lang.ClassLoader)"
          }
        }
      },
      "ParcelUuid": {
        "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html",
        "!type": "fn(uuid: +java.util.UUID)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#CREATOR"
        },
        "fromString": {
          "!type": "fn(uuid: string) -> +android.os.ParcelUuid",
          "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#fromString(java.lang.String)"
        },
        "prototype": {
          "getUuid": {
            "!type": "fn() -> +java.util.UUID",
            "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#getUuid()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/ParcelUuid.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "RemoteCallbackList": {
        "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html",
        "!type": "fn()",
        "prototype": {
          "getBroadcastCookie": {
            "!type": "fn(index: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#getBroadcastCookie(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onCallbackDied": {
            "!type": "fn(callback: +android.os.IInterface) -> void",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#onCallbackDied(E)"
          },
          "getBroadcastItem": {
            "!type": "fn(index: number) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#getBroadcastItem(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "unregister": {
            "!type": "fn(callback: +android.os.IInterface) -> bool",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#unregister(E)"
          },
          "getRegisteredCallbackCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#getRegisteredCallbackCount()"
          },
          "kill": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#kill()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "beginBroadcast": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#beginBroadcast()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "register": {
            "!type": "fn(callback: +android.os.IInterface) -> bool",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#register(E)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "finishBroadcast": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/RemoteCallbackList.html#finishBroadcast()"
          }
        }
      },
      "Handler": {
        "!url": "http://developer.android.com/reference/android/os/Handler.html",
        "!type": "fn()",
        "prototype": {
          "getLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#getLooper()"
          },
          "sendEmptyMessage": {
            "!type": "fn(what: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessage(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "handleMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#handleMessage(android.os.Message)"
          },
          "removeCallbacksAndMessages": {
            "!type": "fn(token: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeCallbacksAndMessages(java.lang.Object)"
          },
          "hasCallbacks": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#hasCallbacks(java.lang.Runnable)"
          },
          "sendMessage": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessage(android.os.Message)"
          },
          "removeCallbacks": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeCallbacks(java.lang.Runnable)"
          },
          "dump": {
            "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#dump(android.util.Printer, java.lang.String)"
          },
          "removeMessages": {
            "!type": "fn(what: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#removeMessages(int)"
          },
          "hasMessages": {
            "!type": "fn(what: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#hasMessages(int)"
          },
          "runWithScissors": {
            "!type": "fn(r: +java.lang.Runnable, timeout: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#runWithScissors(java.lang.Runnable, long)"
          },
          "postDelayed": {
            "!type": "fn(r: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postDelayed(java.lang.Runnable, long)"
          },
          "dispatchMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#dispatchMessage(android.os.Message)"
          },
          "obtainMessage": {
            "!type": "fn() -> +android.os.Message",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#obtainMessage()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "sendEmptyMessageDelayed": {
            "!type": "fn(what: number, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessageDelayed(int, long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getMessageName": {
            "!type": "fn(message: +android.os.Message) -> string",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#getMessageName(android.os.Message)"
          },
          "postAtTime": {
            "!type": "fn(r: +java.lang.Runnable, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postAtTime(java.lang.Runnable, long)"
          },
          "sendMessageAtTime": {
            "!type": "fn(msg: +android.os.Message, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageAtTime(android.os.Message, long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "sendEmptyMessageAtTime": {
            "!type": "fn(what: number, uptimeMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendEmptyMessageAtTime(int, long)"
          },
          "post": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#post(java.lang.Runnable)"
          },
          "sendMessageDelayed": {
            "!type": "fn(msg: +android.os.Message, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageDelayed(android.os.Message, long)"
          },
          "sendMessageAtFrontOfQueue": {
            "!type": "fn(msg: +android.os.Message) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#sendMessageAtFrontOfQueue(android.os.Message)"
          },
          "postAtFrontOfQueue": {
            "!type": "fn(r: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Handler.html#postAtFrontOfQueue(java.lang.Runnable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Process": {
        "!url": "http://developer.android.com/reference/android/os/Process.html",
        "!type": "fn()",
        "ZygoteState": {
          "!url": "http://developer.android.com/reference/android/os/Process.ZygoteState.html",
          "connect": {
            "!type": "fn(socketAddress: string) -> +android.os.Process.ZygoteState",
            "!url": "http://developer.android.com/reference/android/os/Process.ZygoteState.html#connect(java.lang.String)"
          },
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/Process.ZygoteState.html#close()"
            }
          }
        },
        "ProcessStartResult": {
          "!url": "http://developer.android.com/reference/android/os/Process.ProcessStartResult.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "SYSTEM_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SYSTEM_UID"
        },
        "SHARED_USER_GID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SHARED_USER_GID"
        },
        "THREAD_PRIORITY_URGENT_DISPLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_URGENT_DISPLAY"
        },
        "ROOT_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#ROOT_UID"
        },
        "PROC_ZERO_TERM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_ZERO_TERM"
        },
        "DRM_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#DRM_UID"
        },
        "FIRST_SHARED_APPLICATION_GID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#FIRST_SHARED_APPLICATION_GID"
        },
        "BLUETOOTH_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#BLUETOOTH_UID"
        },
        "SHARED_RELRO_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SHARED_RELRO_UID"
        },
        "LOG_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#LOG_UID"
        },
        "SIGNAL_USR1": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SIGNAL_USR1"
        },
        "THREAD_PRIORITY_LESS_FAVORABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_LESS_FAVORABLE"
        },
        "THREAD_PRIORITY_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_DEFAULT"
        },
        "SHELL_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SHELL_UID"
        },
        "SCHED_IDLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SCHED_IDLE"
        },
        "THREAD_GROUP_AUDIO_SYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_GROUP_AUDIO_SYS"
        },
        "SCHED_RR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SCHED_RR"
        },
        "THREAD_GROUP_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_GROUP_DEFAULT"
        },
        "SECONDARY_ZYGOTE_SOCKET": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SECONDARY_ZYGOTE_SOCKET"
        },
        "SCHED_FIFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SCHED_FIFO"
        },
        "LAST_ISOLATED_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#LAST_ISOLATED_UID"
        },
        "THREAD_PRIORITY_MORE_FAVORABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_MORE_FAVORABLE"
        },
        "THREAD_GROUP_AUDIO_APP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_GROUP_AUDIO_APP"
        },
        "LAST_APPLICATION_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#LAST_APPLICATION_UID"
        },
        "THREAD_PRIORITY_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_FOREGROUND"
        },
        "THREAD_PRIORITY_BACKGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_BACKGROUND"
        },
        "THREAD_PRIORITY_DISPLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_DISPLAY"
        },
        "THREAD_GROUP_BG_NONINTERACTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_GROUP_BG_NONINTERACTIVE"
        },
        "ZYGOTE_SOCKET": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/Process.html#ZYGOTE_SOCKET"
        },
        "PACKAGE_INFO_GID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PACKAGE_INFO_GID"
        },
        "THREAD_GROUP_SYSTEM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_GROUP_SYSTEM"
        },
        "SCHED_OTHER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SCHED_OTHER"
        },
        "NFC_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#NFC_UID"
        },
        "PROC_COMBINE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_COMBINE"
        },
        "LAST_SHARED_APPLICATION_GID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#LAST_SHARED_APPLICATION_GID"
        },
        "THREAD_PRIORITY_AUDIO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_AUDIO"
        },
        "THREAD_PRIORITY_URGENT_AUDIO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_URGENT_AUDIO"
        },
        "SCHED_BATCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SCHED_BATCH"
        },
        "PROC_OUT_FLOAT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_OUT_FLOAT"
        },
        "PROC_TERM_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_TERM_MASK"
        },
        "PROC_OUT_LONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_OUT_LONG"
        },
        "WIFI_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#WIFI_UID"
        },
        "VPN_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#VPN_UID"
        },
        "PROC_SPACE_TERM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_SPACE_TERM"
        },
        "PROC_TAB_TERM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_TAB_TERM"
        },
        "SIGNAL_QUIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SIGNAL_QUIT"
        },
        "SIGNAL_KILL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#SIGNAL_KILL"
        },
        "MEDIA_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#MEDIA_UID"
        },
        "PHONE_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PHONE_UID"
        },
        "FIRST_ISOLATED_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#FIRST_ISOLATED_UID"
        },
        "THREAD_PRIORITY_LOWEST": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#THREAD_PRIORITY_LOWEST"
        },
        "MEDIA_RW_GID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#MEDIA_RW_GID"
        },
        "PROC_PARENS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_PARENS"
        },
        "PROC_QUOTES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_QUOTES"
        },
        "PROC_OUT_STRING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#PROC_OUT_STRING"
        },
        "FIRST_APPLICATION_UID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#FIRST_APPLICATION_UID"
        },
        "establishZygoteConnectionForAbi": {
          "!type": "fn(abi: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#establishZygoteConnectionForAbi(java.lang.String)"
        },
        "removeAllProcessGroups": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#removeAllProcessGroups()"
        },
        "is64Bit": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Process.html#is64Bit()"
        },
        "getFreeMemory": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getFreeMemory()"
        },
        "sendSignalQuiet": {
          "!type": "fn(pid: number, signal: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#sendSignalQuiet(int, int)"
        },
        "getThreadGroupLeader": {
          "!type": "fn(tid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getThreadGroupLeader(int)"
        },
        "getPss": {
          "!type": "fn(pid: number) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getPss(int)"
        },
        "setProcessGroup": {
          "!type": "fn(pid: number, group: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setProcessGroup(int, int)"
        },
        "getPidsForCommands": {
          "!type": "fn(cmds: +java.newArray) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getPidsForCommands(java.lang.String[])"
        },
        "setUid": {
          "!type": "fn(uid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setUid(int)"
        },
        "readProcLines": {
          "!type": "fn(path: string, reqFields: +java.newArray, outSizes: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#readProcLines(java.lang.String, java.lang.String[], long[])"
        },
        "myPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#myPid()"
        },
        "readProcFile": {
          "!type": "fn(file: string, format: +java.newArray, outStrings: +java.newArray, outLongs: +java.newArray, outFloats: +java.newArray) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Process.html#readProcFile(java.lang.String, int[], java.lang.String[], long[], float[])"
        },
        "myUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Process.html#myUserHandle()"
        },
        "parseProcLine": {
          "!type": "fn(buffer: +java.newArray, startIndex: number, endIndex: number, format: +java.newArray, outStrings: +java.newArray, outLongs: +java.newArray, outFloats: +java.newArray) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Process.html#parseProcLine(byte[], int, int, int[], java.lang.String[], long[], float[])"
        },
        "setSwappiness": {
          "!type": "fn(pid: number, is_increased: bool) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setSwappiness(int, boolean)"
        },
        "killProcessGroup": {
          "!type": "fn(uid: number, pid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#killProcessGroup(int, int)"
        },
        "getUidForPid": {
          "!type": "fn(pid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getUidForPid(int)"
        },
        "getPids": {
          "!type": "fn(path: string, lastArray: +java.newArray) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getPids(java.lang.String, int[])"
        },
        "start": {
          "!type": "fn(processClass: string, niceName: string, uid: number, gid: number, gids: +java.newArray, debugFlags: number, mountExternal: number, targetSdkVersion: number, seInfo: string, abi: string, instructionSet: string, appDataDir: string, zygoteArgs: +java.newArray) -> +android.os.Process.ProcessStartResult",
          "!url": "http://developer.android.com/reference/android/os/Process.html#start(java.lang.String, java.lang.String, int, int, int[], int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])"
        },
        "supportsProcesses": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Process.html#supportsProcesses()"
        },
        "getThreadPriority": {
          "!type": "fn(tid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getThreadPriority(int)"
        },
        "sendSignal": {
          "!type": "fn(pid: number, signal: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#sendSignal(int, int)"
        },
        "setArgV0": {
          "!type": "fn(text: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setArgV0(java.lang.String)"
        },
        "setThreadScheduler": {
          "!type": "fn(tid: number, policy: number, priority: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setThreadScheduler(int, int, int)"
        },
        "myUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#myUid()"
        },
        "getParentPid": {
          "!type": "fn(pid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getParentPid(int)"
        },
        "myPpid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#myPpid()"
        },
        "killProcessQuiet": {
          "!type": "fn(pid: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#killProcessQuiet(int)"
        },
        "setCanSelfBackground": {
          "!type": "fn(backgroundOk: bool) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setCanSelfBackground(boolean)"
        },
        "getElapsedCpuTime": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getElapsedCpuTime()"
        },
        "getProcessGroup": {
          "!type": "fn(pid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getProcessGroup(int)"
        },
        "setGid": {
          "!type": "fn(uid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setGid(int)"
        },
        "myTid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#myTid()"
        },
        "killProcess": {
          "!type": "fn(pid: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#killProcess(int)"
        },
        "isIsolated": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/Process.html#isIsolated()"
        },
        "getUidForName": {
          "!type": "fn(name: string) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getUidForName(java.lang.String)"
        },
        "setThreadGroup": {
          "!type": "fn(tid: number, group: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setThreadGroup(int, int)"
        },
        "getTotalMemory": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getTotalMemory()"
        },
        "setThreadPriority": {
          "!type": "fn(tid: number, priority: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Process.html#setThreadPriority(int, int)"
        },
        "getGidForName": {
          "!type": "fn(name: string) -> number",
          "!url": "http://developer.android.com/reference/android/os/Process.html#getGidForName(java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "MessageQueueTest": {
        "!url": "http://developer.android.com/reference/android/os/MessageQueueTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testAtFrontOfQueue": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueueTest.html#testAtFrontOfQueue()"
          },
          "testMessageOrder": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueueTest.html#testMessageOrder()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testFieldIntegrity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueueTest.html#testFieldIntegrity()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "MessageQueue": {
        "!url": "http://developer.android.com/reference/android/os/MessageQueue.html",
        "prototype": {
          "postSyncBarrier": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#postSyncBarrier()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "removeIdleHandler": {
            "!type": "fn(handler: +android.os.MessageQueue.IdleHandler) -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#removeIdleHandler(android.os.MessageQueue.IdleHandler)"
          },
          "removeOnFileDescriptorEventListener": {
            "!type": "fn(fd: +java.io.FileDescriptor) -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#removeOnFileDescriptorEventListener(java.io.FileDescriptor)"
          },
          "addOnFileDescriptorEventListener": {
            "!type": "fn(fd: +java.io.FileDescriptor, events: number, listener: +android.os.MessageQueue.OnFileDescriptorEventListener) -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#addOnFileDescriptorEventListener(java.io.FileDescriptor, int, android.os.MessageQueue.OnFileDescriptorEventListener)"
          },
          "isPolling": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#isPolling()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "removeSyncBarrier": {
            "!type": "fn(token: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#removeSyncBarrier(int)"
          },
          "addIdleHandler": {
            "!type": "fn(handler: +android.os.MessageQueue.IdleHandler) -> void",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#addIdleHandler(android.os.MessageQueue.IdleHandler)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isIdle": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/MessageQueue.html#isIdle()"
          }
        }
      },
      "UpdateLock": {
        "!url": "http://developer.android.com/reference/android/os/UpdateLock.html",
        "!type": "fn(tag: string)",
        "TIMESTAMP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#TIMESTAMP"
        },
        "NOW_IS_CONVENIENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#NOW_IS_CONVENIENT"
        },
        "UPDATE_LOCK_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#UPDATE_LOCK_CHANGED"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setReferenceCounted": {
            "!type": "fn(isRefCounted: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#setReferenceCounted(boolean)"
          },
          "acquire": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#acquire()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isHeld": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#isHeld()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "release": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/UpdateLock.html#release()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ParcelArrayBenchmark": {
        "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "timeCreateByteArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeCreateByteArray(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "timeReadByteArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeReadByteArray(int)"
          },
          "timeWriteByteArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeWriteByteArray(int)"
          },
          "timeCreateLongArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeCreateLongArray(int)"
          },
          "timeReadIntArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeReadIntArray(int)"
          },
          "timeCreateIntArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeCreateIntArray(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "timeWriteIntArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeWriteIntArray(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "timeReadLongArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeReadLongArray(int)"
          },
          "timeWriteLongArray": {
            "!type": "fn(reps: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/ParcelArrayBenchmark.html#timeWriteLongArray(int)"
          }
        }
      },
      "Handler_Delegate": {
        "!url": "http://developer.android.com/reference/android/os/Handler_Delegate.html",
        "!type": "fn()",
        "setCallback": {
          "!type": "fn(callback: +android.os.Handler_Delegate.IHandlerCallback) -> void",
          "!url": "http://developer.android.com/reference/android/os/Handler_Delegate.html#setCallback(android.os.Handler_Delegate.IHandlerCallback)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "DropBoxManager": {
        "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html",
        "!type": "fn(service: IDropBoxManagerService)",
        "Entry": {
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html",
          "!type": "fn(tag: string, millis: +java.lang.Long)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getTimeMillis": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#getTimeMillis()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#describeContents()"
            },
            "getInputStream": {
              "!type": "fn() -> +java.io.InputStream",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#getInputStream()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getTag": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#getTag()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getFlags": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#getFlags()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getText": {
              "!type": "fn(maxBytes: number) -> string",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#getText(int)"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/DropBoxManager.Entry.html#close()"
            }
          }
        },
        "EXTRA_TIME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#EXTRA_TIME"
        },
        "EXTRA_TAG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#EXTRA_TAG"
        },
        "IS_GZIPPED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#IS_GZIPPED"
        },
        "IS_TEXT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#IS_TEXT"
        },
        "ACTION_DROPBOX_ENTRY_ADDED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#ACTION_DROPBOX_ENTRY_ADDED"
        },
        "IS_EMPTY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#IS_EMPTY"
        },
        "prototype": {
          "isTagEnabled": {
            "!type": "fn(tag: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#isTagEnabled(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "addFile": {
            "!type": "fn(tag: string, file: +java.io.File, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#addFile(java.lang.String, java.io.File, int)"
          },
          "getNextEntry": {
            "!type": "fn(tag: string, msec: +java.lang.Long) -> +android.os.DropBoxManager.Entry",
            "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#getNextEntry(java.lang.String, long)"
          },
          "addData": {
            "!type": "fn(tag: string, data: +java.newArray, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#addData(java.lang.String, byte[], int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "addText": {
            "!type": "fn(tag: string, data: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/DropBoxManager.html#addText(java.lang.String, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InputMethodTest": {
        "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testVoiceImes": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html#testVoiceImes()"
          },
          "testContainsSubtypeOf": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html#testContainsSubtypeOf()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testGetImplicitlyApplicableSubtypesLocked": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html#testGetImplicitlyApplicableSubtypesLocked()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testParcelable": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html#testParcelable()"
          },
          "testGetSuitableLocalesForSpellChecker": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html#testGetSuitableLocalesForSpellChecker()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "testKeyboardImes": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodTest.html#testKeyboardImes()"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "FileBridge": {
        "!url": "http://developer.android.com/reference/android/os/FileBridge.html",
        "!type": "fn()",
        "FileBridgeOutputStream": {
          "!url": "http://developer.android.com/reference/android/os/FileBridge.FileBridgeOutputStream.html",
          "!type": "fn(clientPfd: +android.os.ParcelFileDescriptor)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "fsync": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/FileBridge.FileBridgeOutputStream.html#fsync()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "flush": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/io/OutputStream.html#flush()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "close": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/os/FileBridge.FileBridgeOutputStream.html#close()"
            },
            "write": {
              "!type": "fn(buffer: +java.newArray, byteOffset: number, byteCount: number) -> void",
              "!url": "http://developer.android.com/reference/android/os/FileBridge.FileBridgeOutputStream.html#write(byte[], int, int)"
            }
          }
        },
        "NORM_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#NORM_PRIORITY"
        },
        "MAX_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MAX_PRIORITY"
        },
        "MIN_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MIN_PRIORITY"
        },
        "interrupted": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupted()"
        },
        "getAllStackTraces": {
          "!type": "fn() -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getAllStackTraces()"
        },
        "yield": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#yield()"
        },
        "currentThread": {
          "!type": "fn() -> +java.lang.Thread",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#currentThread()"
        },
        "dumpStack": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#dumpStack()"
        },
        "getDefaultUncaughtExceptionHandler": {
          "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getDefaultUncaughtExceptionHandler()"
        },
        "holdsLock": {
          "!type": "fn(object: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#holdsLock(java.lang.Object)"
        },
        "sleep": {
          "!type": "fn(time: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#sleep(long)"
        },
        "enumerate": {
          "!type": "fn(threads: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#enumerate(java.lang.Thread[])"
        },
        "setDefaultUncaughtExceptionHandler": {
          "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
        },
        "activeCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#activeCount()"
        },
        "prototype": {
          "pushInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#pushInterruptAction$(java.lang.Runnable)"
          },
          "interrupt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupt()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "popInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#popInterruptAction$(java.lang.Runnable)"
          },
          "getThreadGroup": {
            "!type": "fn() -> +java.lang.ThreadGroup",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getThreadGroup()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getStackTrace()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setDaemon": {
            "!type": "fn(isDaemon: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDaemon(boolean)"
          },
          "resume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#resume()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isInterrupted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isInterrupted()"
          },
          "join": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#join()"
          },
          "getPriority": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getPriority()"
          },
          "setTargetFile": {
            "!type": "fn(target: +java.io.FileDescriptor) -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridge.html#setTargetFile(java.io.FileDescriptor)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "forceClose": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridge.html#forceClose()"
          },
          "setUncaughtExceptionHandler": {
            "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
          },
          "stop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#stop()"
          },
          "parkUntil$": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkUntil$(long)"
          },
          "getContextClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getContextClassLoader()"
          },
          "isAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isAlive()"
          },
          "run": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridge.html#run()"
          },
          "start": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#start()"
          },
          "setPriority": {
            "!type": "fn(priority: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setPriority(int)"
          },
          "isDaemon": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isDaemon()"
          },
          "getClientSocket": {
            "!type": "fn() -> +java.io.FileDescriptor",
            "!url": "http://developer.android.com/reference/android/os/FileBridge.html#getClientSocket()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#checkAccess()"
          },
          "suspend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#suspend()"
          },
          "countStackFrames": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#countStackFrames()"
          },
          "unpark$": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#unpark$()"
          },
          "isClosed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/FileBridge.html#isClosed()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getName()"
          },
          "setName": {
            "!type": "fn(threadName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setName(java.lang.String)"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#destroy()"
          },
          "parkFor$": {
            "!type": "fn(nanos: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkFor$(long)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUncaughtExceptionHandler": {
            "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getUncaughtExceptionHandler()"
          },
          "getState": {
            "!type": "fn() -> +java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getState()"
          },
          "getId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getId()"
          },
          "setContextClassLoader": {
            "!type": "fn(cl: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setContextClassLoader(java.lang.ClassLoader)"
          }
        }
      },
      "NetworkOnMainThreadException": {
        "!url": "http://developer.android.com/reference/android/os/NetworkOnMainThreadException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InputMethodSubtypeTest": {
        "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeTest.html",
        "!type": "fn()",
        "prototype": {
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "verifyLocale": {
            "!type": "fn(localeString: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeTest.html#verifyLocale(java.lang.String)"
          },
          "testLocaleString": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeTest.html#testLocaleString()"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "testDeprecatedLocaleString": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/InputMethodSubtypeTest.html#testDeprecatedLocaleString()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "SystemClock": {
        "!url": "http://developer.android.com/reference/android/os/SystemClock.html",
        "currentTimeMicro": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#currentTimeMicro()"
        },
        "elapsedRealtimeNanos": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#elapsedRealtimeNanos()"
        },
        "currentThreadTimeMillis": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#currentThreadTimeMillis()"
        },
        "uptimeMillis": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#uptimeMillis()"
        },
        "setCurrentTimeMillis": {
          "!type": "fn(millis: +java.lang.Long) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#setCurrentTimeMillis(long)"
        },
        "currentThreadTimeMicro": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#currentThreadTimeMicro()"
        },
        "sleep": {
          "!type": "fn(ms: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#sleep(long)"
        },
        "elapsedRealtime": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/SystemClock.html#elapsedRealtime()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "AsyncResult": {
        "!url": "http://developer.android.com/reference/android/os/AsyncResult.html",
        "!type": "fn(uo: +java.lang.Object, r: +java.lang.Object, ex: +java.lang.Throwable)",
        "forMessage": {
          "!type": "fn(m: +android.os.Message, r: +java.lang.Object, ex: +java.lang.Throwable) -> +android.os.AsyncResult",
          "!url": "http://developer.android.com/reference/android/os/AsyncResult.html#forMessage(android.os.Message, java.lang.Object, java.lang.Throwable)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "UserManager": {
        "!url": "http://developer.android.com/reference/android/os/UserManager.html",
        "!type": "fn(context: +android.content.Context, service: IUserManager)",
        "DISALLOW_MODIFY_ACCOUNTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_MODIFY_ACCOUNTS"
        },
        "DISALLOW_USB_FILE_TRANSFER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_USB_FILE_TRANSFER"
        },
        "DISALLOW_RECORD_AUDIO": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_RECORD_AUDIO"
        },
        "DISALLOW_CREATE_WINDOWS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CREATE_WINDOWS"
        },
        "DISALLOW_CONFIG_TETHERING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_TETHERING"
        },
        "DISALLOW_INSTALL_UNKNOWN_SOURCES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_INSTALL_UNKNOWN_SOURCES"
        },
        "DISALLOW_ADJUST_VOLUME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_ADJUST_VOLUME"
        },
        "PIN_VERIFICATION_FAILED_NOT_SET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#PIN_VERIFICATION_FAILED_NOT_SET"
        },
        "DISALLOW_CONFIG_CREDENTIALS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_CREDENTIALS"
        },
        "DISALLOW_NETWORK_RESET": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_NETWORK_RESET"
        },
        "DISALLOW_CONFIG_WIFI": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_WIFI"
        },
        "DISALLOW_REMOVE_USER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_REMOVE_USER"
        },
        "DISALLOW_DEBUGGING_FEATURES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_DEBUGGING_FEATURES"
        },
        "DISALLOW_INSTALL_APPS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_INSTALL_APPS"
        },
        "DISALLOW_APPS_CONTROL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_APPS_CONTROL"
        },
        "DISALLOW_SAFE_BOOT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_SAFE_BOOT"
        },
        "DISALLOW_OUTGOING_BEAM": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_OUTGOING_BEAM"
        },
        "PIN_VERIFICATION_FAILED_INCORRECT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#PIN_VERIFICATION_FAILED_INCORRECT"
        },
        "DISALLOW_CONFIG_BLUETOOTH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_BLUETOOTH"
        },
        "DISALLOW_MOUNT_PHYSICAL_MEDIA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_MOUNT_PHYSICAL_MEDIA"
        },
        "DISALLOW_ADD_USER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_ADD_USER"
        },
        "DISALLOW_FACTORY_RESET": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_FACTORY_RESET"
        },
        "DISALLOW_CONFIG_CELL_BROADCASTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_CELL_BROADCASTS"
        },
        "DISALLOW_WALLPAPER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_WALLPAPER"
        },
        "ALLOW_PARENT_PROFILE_APP_LINKING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#ALLOW_PARENT_PROFILE_APP_LINKING"
        },
        "DISALLOW_CONFIG_MOBILE_NETWORKS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_MOBILE_NETWORKS"
        },
        "KEY_RESTRICTIONS_PENDING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#KEY_RESTRICTIONS_PENDING"
        },
        "PIN_VERIFICATION_SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#PIN_VERIFICATION_SUCCESS"
        },
        "DISALLOW_CROSS_PROFILE_COPY_PASTE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CROSS_PROFILE_COPY_PASTE"
        },
        "DISALLOW_SHARE_LOCATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_SHARE_LOCATION"
        },
        "DISALLOW_UNINSTALL_APPS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_UNINSTALL_APPS"
        },
        "DISALLOW_FUN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_FUN"
        },
        "DISALLOW_UNMUTE_MICROPHONE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_UNMUTE_MICROPHONE"
        },
        "ENSURE_VERIFY_APPS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#ENSURE_VERIFY_APPS"
        },
        "DISALLOW_SMS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_SMS"
        },
        "DISALLOW_CONFIG_VPN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_CONFIG_VPN"
        },
        "DISALLOW_OUTGOING_CALLS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#DISALLOW_OUTGOING_CALLS"
        },
        "supportsMultipleUsers": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#supportsMultipleUsers()"
        },
        "get": {
          "!type": "fn(context: +android.content.Context) -> +android.os.UserManager",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#get(android.content.Context)"
        },
        "getMaxSupportedUsers": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/UserManager.html#getMaxSupportedUsers()"
        },
        "prototype": {
          "getUsers": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUsers()"
          },
          "getUserInfo": {
            "!type": "fn(userHandle: number) -> +android.content.pm.UserInfo",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserInfo(int)"
          },
          "isAdminUser": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isAdminUser()"
          },
          "createGuest": {
            "!type": "fn(context: +android.content.Context, name: string) -> +android.content.pm.UserInfo",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#createGuest(android.content.Context, java.lang.String)"
          },
          "getUserCreationTime": {
            "!type": "fn(userHandle: +android.os.UserHandle) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserCreationTime(android.os.UserHandle)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "setApplicationRestrictions": {
            "!type": "fn(packageName: string, restrictions: +android.os.Bundle, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setApplicationRestrictions(java.lang.String, android.os.Bundle, android.os.UserHandle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isUserRunningOrStopping": {
            "!type": "fn(user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isUserRunningOrStopping(android.os.UserHandle)"
          },
          "isUserSwitcherEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isUserSwitcherEnabled()"
          },
          "removeUser": {
            "!type": "fn(userHandle: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#removeUser(int)"
          },
          "getCredentialOwnerProfile": {
            "!type": "fn(userHandle: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getCredentialOwnerProfile(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getUserForSerialNumber": {
            "!type": "fn(serialNumber: +java.lang.Long) -> +android.os.UserHandle",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserForSerialNumber(long)"
          },
          "setUserEnabled": {
            "!type": "fn(userHandle: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setUserEnabled(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getUserSerialNumber": {
            "!type": "fn(userHandle: number) -> number",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserSerialNumber(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getDefaultGuestRestrictions": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getDefaultGuestRestrictions()"
          },
          "removeRestrictions": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#removeRestrictions()"
          },
          "isManagedProfile": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isManagedProfile()"
          },
          "getUserIcon": {
            "!type": "fn(userHandle: number) -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserIcon(int)"
          },
          "isLinkedUser": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isLinkedUser()"
          },
          "getBadgedDrawableForUser": {
            "!type": "fn(badgedDrawable: +android.graphics.drawable.Drawable, user: +android.os.UserHandle, badgeLocation: +android.graphics.Rect, badgeDensity: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getBadgedDrawableForUser(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int)"
          },
          "getUserName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserName()"
          },
          "isGuestUser": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isGuestUser()"
          },
          "getBadgedLabelForUser": {
            "!type": "fn(label: +java.lang.CharSequence, user: +android.os.UserHandle) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getBadgedLabelForUser(java.lang.CharSequence, android.os.UserHandle)"
          },
          "createSecondaryUser": {
            "!type": "fn(name: string, flags: number) -> +android.content.pm.UserInfo",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#createSecondaryUser(java.lang.String, int)"
          },
          "canAddMoreManagedProfiles": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#canAddMoreManagedProfiles()"
          },
          "setRestrictionsChallenge": {
            "!type": "fn(newPin: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setRestrictionsChallenge(java.lang.String)"
          },
          "getApplicationRestrictions": {
            "!type": "fn(packageName: string) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getApplicationRestrictions(java.lang.String)"
          },
          "getEnabledProfiles": {
            "!type": "fn(userHandle: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getEnabledProfiles(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getUserCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserCount()"
          },
          "isSystemUser": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isSystemUser()"
          },
          "setUserIcon": {
            "!type": "fn(userHandle: number, icon: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setUserIcon(int, android.graphics.Bitmap)"
          },
          "canAddMoreUsers": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#canAddMoreUsers()"
          },
          "setUserName": {
            "!type": "fn(userHandle: number, name: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setUserName(int, java.lang.String)"
          },
          "markGuestForDeletion": {
            "!type": "fn(userHandle: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#markGuestForDeletion(int)"
          },
          "isUserAGoat": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isUserAGoat()"
          },
          "getProfileParent": {
            "!type": "fn(userHandle: number) -> +android.content.pm.UserInfo",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getProfileParent(int)"
          },
          "getSerialNumberForUser": {
            "!type": "fn(user: +android.os.UserHandle) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getSerialNumberForUser(android.os.UserHandle)"
          },
          "createProfileForUser": {
            "!type": "fn(name: string, flags: number, userHandle: number) -> +android.content.pm.UserInfo",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#createProfileForUser(java.lang.String, int, int)"
          },
          "getProfiles": {
            "!type": "fn(userHandle: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getProfiles(int)"
          },
          "setDefaultGuestRestrictions": {
            "!type": "fn(restrictions: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setDefaultGuestRestrictions(android.os.Bundle)"
          },
          "getBadgedIconForUser": {
            "!type": "fn(icon: +android.graphics.drawable.Drawable, user: +android.os.UserHandle) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getBadgedIconForUser(android.graphics.drawable.Drawable, android.os.UserHandle)"
          },
          "setUserRestriction": {
            "!type": "fn(key: string, value: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setUserRestriction(java.lang.String, boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUserProfiles": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserProfiles()"
          },
          "setUserRestrictions": {
            "!type": "fn(restrictions: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#setUserRestrictions(android.os.Bundle)"
          },
          "createUser": {
            "!type": "fn(name: string, flags: number) -> +android.content.pm.UserInfo",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#createUser(java.lang.String, int)"
          },
          "hasUserRestriction": {
            "!type": "fn(restrictionKey: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#hasUserRestriction(java.lang.String)"
          },
          "getUserRestrictions": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserRestrictions()"
          },
          "getUserHandle": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#getUserHandle()"
          },
          "isUserRunning": {
            "!type": "fn(user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/os/UserManager.html#isUserRunning(android.os.UserHandle)"
          }
        }
      },
      "SystemService": {
        "!url": "http://developer.android.com/reference/android/os/SystemService.html",
        "!type": "fn()",
        "State": {
          "!url": "http://developer.android.com/reference/android/os/SystemService.State.html",
          "STOPPED": {
            "!type": "+android.os.SystemService.State",
            "!url": "http://developer.android.com/reference/android/os/SystemService.State.html#STOPPED"
          },
          "RESTARTING": {
            "!type": "+android.os.SystemService.State",
            "!url": "http://developer.android.com/reference/android/os/SystemService.State.html#RESTARTING"
          },
          "STOPPING": {
            "!type": "+android.os.SystemService.State",
            "!url": "http://developer.android.com/reference/android/os/SystemService.State.html#STOPPING"
          },
          "RUNNING": {
            "!type": "+android.os.SystemService.State",
            "!url": "http://developer.android.com/reference/android/os/SystemService.State.html#RUNNING"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.os.SystemService.State",
            "!url": "http://developer.android.com/reference/android/os/SystemService.State.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/SystemService.State.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "waitForAnyStopped": {
          "!type": "fn(services: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#waitForAnyStopped(java.lang.String[])"
        },
        "getState": {
          "!type": "fn(service: string) -> +android.os.SystemService.State",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#getState(java.lang.String)"
        },
        "restart": {
          "!type": "fn(name: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#restart(java.lang.String)"
        },
        "stop": {
          "!type": "fn(name: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#stop(java.lang.String)"
        },
        "waitForState": {
          "!type": "fn(service: string, state: +android.os.SystemService.State, timeoutMillis: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#waitForState(java.lang.String, android.os.SystemService.State, long)"
        },
        "isRunning": {
          "!type": "fn(service: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#isRunning(java.lang.String)"
        },
        "isStopped": {
          "!type": "fn(service: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#isStopped(java.lang.String)"
        },
        "start": {
          "!type": "fn(name: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/SystemService.html#start(java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "FileUtils": {
        "!url": "http://developer.android.com/reference/android/os/FileUtils.html",
        "!type": "fn()",
        "S_IWUSR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IWUSR"
        },
        "S_IROTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IROTH"
        },
        "S_IRWXO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IRWXO"
        },
        "S_IXGRP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IXGRP"
        },
        "S_IRUSR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IRUSR"
        },
        "S_IWGRP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IWGRP"
        },
        "S_IRWXG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IRWXG"
        },
        "S_IXOTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IXOTH"
        },
        "S_IRGRP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IRGRP"
        },
        "S_IXUSR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IXUSR"
        },
        "S_IWOTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IWOTH"
        },
        "S_IRWXU": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#S_IRWXU"
        },
        "buildUniqueFile": {
          "!type": "fn(parent: +java.io.File, mimeType: string, displayName: string) -> +java.io.File",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#buildUniqueFile(java.io.File, java.lang.String, java.lang.String)"
        },
        "setPermissions": {
          "!type": "fn(path: +java.io.File, mode: number, uid: number, gid: number) -> number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#setPermissions(java.io.File, int, int, int)"
        },
        "listFilesOrEmpty": {
          "!type": "fn(dir: +java.io.File) -> +java.newArray",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#listFilesOrEmpty(java.io.File)"
        },
        "readTextFile": {
          "!type": "fn(file: +java.io.File, max: number, ellipsis: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#readTextFile(java.io.File, int, java.lang.String)"
        },
        "copyToFile": {
          "!type": "fn(inputStream: +java.io.InputStream, destFile: +java.io.File) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#copyToFile(java.io.InputStream, java.io.File)"
        },
        "copyFile": {
          "!type": "fn(srcFile: +java.io.File, destFile: +java.io.File) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#copyFile(java.io.File, java.io.File)"
        },
        "contains": {
          "!type": "fn(dirs: +java.newArray, file: +java.io.File) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#contains(java.io.File[], java.io.File)"
        },
        "sync": {
          "!type": "fn(stream: +java.io.FileOutputStream) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#sync(java.io.FileOutputStream)"
        },
        "isValidExtFilename": {
          "!type": "fn(name: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#isValidExtFilename(java.lang.String)"
        },
        "buildValidFatFilename": {
          "!type": "fn(name: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#buildValidFatFilename(java.lang.String)"
        },
        "stringToFile": {
          "!type": "fn(filename: string, string: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#stringToFile(java.lang.String, java.lang.String)"
        },
        "deleteOlderFiles": {
          "!type": "fn(dir: +java.io.File, minCount: number, minAge: +java.lang.Long) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#deleteOlderFiles(java.io.File, int, long)"
        },
        "isValidFatFilename": {
          "!type": "fn(name: string) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#isValidFatFilename(java.lang.String)"
        },
        "rewriteAfterRename": {
          "!type": "fn(beforeDir: +java.io.File, afterDir: +java.io.File, path: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#rewriteAfterRename(java.io.File, java.io.File, java.lang.String)"
        },
        "isFilenameSafe": {
          "!type": "fn(file: +java.io.File) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#isFilenameSafe(java.io.File)"
        },
        "buildValidExtFilename": {
          "!type": "fn(name: string) -> string",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#buildValidExtFilename(java.lang.String)"
        },
        "getUid": {
          "!type": "fn(path: string) -> number",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#getUid(java.lang.String)"
        },
        "trimFilename": {
          "!type": "fn(str: string, maxBytes: number) -> string",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#trimFilename(java.lang.String, int)"
        },
        "deleteContents": {
          "!type": "fn(dir: +java.io.File) -> bool",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#deleteContents(java.io.File)"
        },
        "checksumCrc32": {
          "!type": "fn(file: +java.io.File) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/FileUtils.html#checksumCrc32(java.io.File)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "SparseRectFArrayTest": {
        "!url": "http://developer.android.com/reference/android/os/SparseRectFArrayTest.html",
        "!type": "fn()",
        "prototype": {
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testBuilderAppend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/SparseRectFArrayTest.html#testBuilderAppend()"
          },
          "testBuilder": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/SparseRectFArrayTest.html#testBuilder()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testEquality": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/SparseRectFArrayTest.html#testEquality()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "SystemProperties_Delegate": {
        "!url": "http://developer.android.com/reference/android/os/SystemProperties_Delegate.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "PersistableBundle": {
        "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#CREATOR"
        },
        "EMPTY": {
          "!type": "+android.os.PersistableBundle",
          "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#EMPTY"
        },
        "forPair": {
          "!type": "fn(key: string, value: string) -> +android.os.PersistableBundle",
          "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#forPair(java.lang.String, java.lang.String)"
        },
        "restoreFromXml": {
          "!type": "fn(in: +org.xmlpull.v1.XmlPullParser) -> +android.os.PersistableBundle",
          "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#restoreFromXml(org.xmlpull.v1.XmlPullParser)"
        },
        "isValidType": {
          "!type": "fn(value: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#isValidType(java.lang.Object)"
        },
        "prototype": {
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#describeContents()"
          },
          "writeUnknownObject": {
            "!type": "fn(v: +java.lang.Object, name: string, out: +org.xmlpull.v1.XmlSerializer) -> void",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#writeUnknownObject(java.lang.Object, java.lang.String, org.xmlpull.v1.XmlSerializer)"
          },
          "putBooleanArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putBooleanArray(java.lang.String, boolean[])"
          },
          "getLongArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getLongArray(java.lang.String)"
          },
          "putBoolean": {
            "!type": "fn(key: string, value: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putBoolean(java.lang.String, boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#toString()"
          },
          "getIntArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getIntArray(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDouble": {
            "!type": "fn(key: string) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getDouble(java.lang.String)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "putDouble": {
            "!type": "fn(key: string, value: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putDouble(java.lang.String, double)"
          },
          "putLong": {
            "!type": "fn(key: string, value: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putLong(java.lang.String, long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#isEmpty()"
          },
          "putIntArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putIntArray(java.lang.String, int[])"
          },
          "getBoolean": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getBoolean(java.lang.String)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#clone()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#keySet()"
          },
          "getPersistableBundle": {
            "!type": "fn(key: string) -> +android.os.PersistableBundle",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#getPersistableBundle(java.lang.String)"
          },
          "putAll": {
            "!type": "fn(bundle: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putAll(android.os.PersistableBundle)"
          },
          "remove": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#remove(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(key: string) -> number",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getInt(java.lang.String)"
          },
          "putStringArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putStringArray(java.lang.String, java.lang.String[])"
          },
          "writeToParcel": {
            "!type": "fn(parcel: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#writeToParcel(android.os.Parcel, int)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#clear()"
          },
          "putPersistableBundle": {
            "!type": "fn(key: string, value: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#putPersistableBundle(java.lang.String, android.os.PersistableBundle)"
          },
          "saveToXml": {
            "!type": "fn(out: +org.xmlpull.v1.XmlSerializer) -> void",
            "!url": "http://developer.android.com/reference/android/os/PersistableBundle.html#saveToXml(org.xmlpull.v1.XmlSerializer)"
          },
          "putDoubleArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putDoubleArray(java.lang.String, double[])"
          },
          "getString": {
            "!type": "fn(key: string) -> string",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getString(java.lang.String)"
          },
          "putInt": {
            "!type": "fn(key: string, value: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putInt(java.lang.String, int)"
          },
          "getStringArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getStringArray(java.lang.String)"
          },
          "containsKey": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#containsKey(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getBooleanArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getBooleanArray(java.lang.String)"
          },
          "get": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#get(java.lang.String)"
          },
          "putString": {
            "!type": "fn(key: string, value: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putString(java.lang.String, java.lang.String)"
          },
          "putLongArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putLongArray(java.lang.String, long[])"
          },
          "getDoubleArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getDoubleArray(java.lang.String)"
          },
          "isParcelled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#isParcelled()"
          },
          "getLong": {
            "!type": "fn(key: string) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getLong(java.lang.String)"
          },
          "getPairValue": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getPairValue()"
          }
        }
      },
      "ParcelFormatException": {
        "!url": "http://developer.android.com/reference/android/os/ParcelFormatException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "BatteryProperty": {
        "!url": "http://developer.android.com/reference/android/os/BatteryProperty.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/BatteryProperty.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperty.html#describeContents()"
          },
          "getLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperty.html#getLong()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(p: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperty.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "readFromParcel": {
            "!type": "fn(p: +android.os.Parcel) -> void",
            "!url": "http://developer.android.com/reference/android/os/BatteryProperty.html#readFromParcel(android.os.Parcel)"
          }
        }
      },
      "AsyncTask": {
        "!url": "http://developer.android.com/reference/android/os/AsyncTask.html",
        "!type": "fn()",
        "Status": {
          "!url": "http://developer.android.com/reference/android/os/AsyncTask.Status.html",
          "PENDING": {
            "!type": "+android.os.AsyncTask.Status",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.Status.html#PENDING"
          },
          "FINISHED": {
            "!type": "+android.os.AsyncTask.Status",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.Status.html#FINISHED"
          },
          "RUNNING": {
            "!type": "+android.os.AsyncTask.Status",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.Status.html#RUNNING"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +android.os.AsyncTask.Status",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.Status.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.Status.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SERIAL_EXECUTOR": {
          "!type": "+java.util.concurrent.Executor",
          "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#SERIAL_EXECUTOR"
        },
        "THREAD_POOL_EXECUTOR": {
          "!type": "+java.util.concurrent.Executor",
          "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#THREAD_POOL_EXECUTOR"
        },
        "setDefaultExecutor": {
          "!type": "fn(exec: +java.util.concurrent.Executor) -> void",
          "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#setDefaultExecutor(java.util.concurrent.Executor)"
        },
        "execute": {
          "!type": "fn(runnable: +java.lang.Runnable) -> void",
          "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#execute(java.lang.Runnable)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "executeOnExecutor": {
            "!type": "fn(exec: +java.util.concurrent.Executor, params: +java.newArray) -> +android.os.AsyncTask",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#executeOnExecutor(java.util.concurrent.Executor, Params[])"
          },
          "get": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#get()"
          },
          "isCancelled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#isCancelled()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "execute": {
            "!type": "fn(params: +java.newArray) -> +android.os.AsyncTask",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#execute(Params[])"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getStatus": {
            "!type": "fn() -> +android.os.AsyncTask.Status",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#getStatus()"
          },
          "cancel": {
            "!type": "fn(mayInterruptIfRunning: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/os/AsyncTask.html#cancel(boolean)"
          }
        }
      },
      "BroadcasterTest": {
        "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html",
        "!type": "fn()",
        "prototype": {
          "test2": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html#test2()"
          },
          "test1": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html#test1()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "test6": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html#test6()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "test5": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html#test5()"
          },
          "test4": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html#test4()"
          },
          "test3": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BroadcasterTest.html#test3()"
          }
        }
      },
      "BaseBundle": {
        "!url": "http://developer.android.com/reference/android/os/BaseBundle.html",
        "prototype": {
          "putBooleanArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putBooleanArray(java.lang.String, boolean[])"
          },
          "getLongArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getLongArray(java.lang.String)"
          },
          "putBoolean": {
            "!type": "fn(key: string, value: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putBoolean(java.lang.String, boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "getIntArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getIntArray(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDouble": {
            "!type": "fn(key: string) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getDouble(java.lang.String)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "putDouble": {
            "!type": "fn(key: string, value: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putDouble(java.lang.String, double)"
          },
          "putLong": {
            "!type": "fn(key: string, value: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putLong(java.lang.String, long)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#isEmpty()"
          },
          "putIntArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putIntArray(java.lang.String, int[])"
          },
          "getBoolean": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getBoolean(java.lang.String)"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#keySet()"
          },
          "putAll": {
            "!type": "fn(bundle: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putAll(android.os.PersistableBundle)"
          },
          "remove": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#remove(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInt": {
            "!type": "fn(key: string) -> number",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getInt(java.lang.String)"
          },
          "putStringArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putStringArray(java.lang.String, java.lang.String[])"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#clear()"
          },
          "putDoubleArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putDoubleArray(java.lang.String, double[])"
          },
          "getString": {
            "!type": "fn(key: string) -> string",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getString(java.lang.String)"
          },
          "putInt": {
            "!type": "fn(key: string, value: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putInt(java.lang.String, int)"
          },
          "getStringArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getStringArray(java.lang.String)"
          },
          "containsKey": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#containsKey(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getBooleanArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getBooleanArray(java.lang.String)"
          },
          "get": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#get(java.lang.String)"
          },
          "putString": {
            "!type": "fn(key: string, value: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putString(java.lang.String, java.lang.String)"
          },
          "putLongArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putLongArray(java.lang.String, long[])"
          },
          "getDoubleArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getDoubleArray(java.lang.String)"
          },
          "isParcelled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#isParcelled()"
          },
          "getLong": {
            "!type": "fn(key: string) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getLong(java.lang.String)"
          },
          "getPairValue": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getPairValue()"
          }
        }
      },
      "PerformanceCollectorTest": {
        "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html",
        "!type": "fn()",
        "prototype": {
          "testStartTiming": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testStartTiming()"
          },
          "testAddMeasurementString": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testAddMeasurementString()"
          },
          "testOutOfOrderSequence": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testOutOfOrderSequence()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "testAddMeasurementLong": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testAddMeasurementLong()"
          },
          "testLongSequence": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testLongSequence()"
          },
          "testEndSnapshot": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testEndSnapshot()"
          },
          "testEndSnapshotNoWriter": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testEndSnapshotNoWriter()"
          },
          "testAddMeasurementFloat": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testAddMeasurementFloat()"
          },
          "testAddIteration": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testAddIteration()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testStartTimingNoWriter": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testStartTimingNoWriter()"
          },
          "testStopTimingNoWriter": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testStopTimingNoWriter()"
          },
          "testStopTiming": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testStopTiming()"
          },
          "testAddIterationNoWriter": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testAddIterationNoWriter()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testSimpleSequence": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testSimpleSequence()"
          },
          "testBeginSnapshotNoWriter": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testBeginSnapshotNoWriter()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testBeginSnapshot": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/PerformanceCollectorTest.html#testBeginSnapshot()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "CountDownTimer": {
        "!url": "http://developer.android.com/reference/android/os/CountDownTimer.html",
        "!type": "fn(millisInFuture: +java.lang.Long, countDownInterval: +java.lang.Long)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "start": {
            "!type": "fn() -> +android.os.CountDownTimer",
            "!url": "http://developer.android.com/reference/android/os/CountDownTimer.html#start()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onTick": {
            "!type": "fn(millisUntilFinished: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/CountDownTimer.html#onTick(long)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onFinish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CountDownTimer.html#onFinish()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/CountDownTimer.html#cancel()"
          }
        }
      },
      "FileBridgeTest": {
        "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html",
        "!type": "fn()",
        "prototype": {
          "testRandomWrite": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testRandomWrite()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "testEmptyWrite": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testEmptyWrite()"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "testWriteSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testWriteSync()"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "testWriteAfterClose": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testWriteAfterClose()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testNoWriteSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testNoWriteSync()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "testWriteNoSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testWriteNoSync()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "testGiantWrite": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testGiantWrite()"
          },
          "testNoWriteNoSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testNoWriteNoSync()"
          },
          "testWriteSyncWrite": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/FileBridgeTest.html#testWriteSyncWrite()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "StatFs": {
        "!url": "http://developer.android.com/reference/android/os/StatFs.html",
        "!type": "fn(path: string)",
        "prototype": {
          "getBlockCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getBlockCount()"
          },
          "getFreeBlocks": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getFreeBlocks()"
          },
          "getBlockSizeLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getBlockSizeLong()"
          },
          "getAvailableBytes": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getAvailableBytes()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "restat": {
            "!type": "fn(path: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#restat(java.lang.String)"
          },
          "getAvailableBlocks": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getAvailableBlocks()"
          },
          "getFreeBlocksLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getFreeBlocksLong()"
          },
          "getTotalBytes": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getTotalBytes()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getBlockSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getBlockSize()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getAvailableBlocksLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getAvailableBlocksLong()"
          },
          "getFreeBytes": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getFreeBytes()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getBlockCountLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/StatFs.html#getBlockCountLong()"
          }
        }
      },
      "Bundle": {
        "!url": "http://developer.android.com/reference/android/os/Bundle.html",
        "!type": "fn()",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/os/Bundle.html#CREATOR"
        },
        "EMPTY": {
          "!type": "+android.os.Bundle",
          "!url": "http://developer.android.com/reference/android/os/Bundle.html#EMPTY"
        },
        "forPair": {
          "!type": "fn(key: string, value: string) -> +android.os.Bundle",
          "!url": "http://developer.android.com/reference/android/os/Bundle.html#forPair(java.lang.String, java.lang.String)"
        },
        "prototype": {
          "putSparseParcelableArray": {
            "!type": "fn(key: string, value: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putSparseParcelableArray(java.lang.String, android.util.SparseArray)"
          },
          "putShort": {
            "!type": "fn(key: string, value: +java.lang.Short) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putShort(java.lang.String, short)"
          },
          "putByte": {
            "!type": "fn(key: string, value: +java.lang.Byte) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putByte(java.lang.String, byte)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "putSizeF": {
            "!type": "fn(key: string, value: +android.util.SizeF) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putSizeF(java.lang.String, android.util.SizeF)"
          },
          "putDouble": {
            "!type": "fn(key: string, value: +java.lang.Double) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putDouble(java.lang.String, double)"
          },
          "getByteArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getByteArray(java.lang.String)"
          },
          "putShortArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putShortArray(java.lang.String, short[])"
          },
          "putFloatArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putFloatArray(java.lang.String, float[])"
          },
          "getCharArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getCharArray(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getPairValue": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getPairValue()"
          },
          "getString": {
            "!type": "fn(key: string) -> string",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getString(java.lang.String)"
          },
          "putStringArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putStringArray(java.lang.String, java.lang.String[])"
          },
          "getStringArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getStringArray(java.lang.String)"
          },
          "putCharSequence": {
            "!type": "fn(key: string, value: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putCharSequence(java.lang.String, java.lang.CharSequence)"
          },
          "getSize": {
            "!type": "fn(key: string) -> +android.util.Size",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getSize(java.lang.String)"
          },
          "writeToParcel": {
            "!type": "fn(parcel: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#writeToParcel(android.os.Parcel, int)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#isEmpty()"
          },
          "putBoolean": {
            "!type": "fn(key: string, value: bool) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putBoolean(java.lang.String, boolean)"
          },
          "getByte": {
            "!type": "fn(key: string) -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getByte(java.lang.String)"
          },
          "getSparseParcelableArray": {
            "!type": "fn(key: string) -> +android.util.SparseArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getSparseParcelableArray(java.lang.String)"
          },
          "readFromParcel": {
            "!type": "fn(parcel: +android.os.Parcel) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#readFromParcel(android.os.Parcel)"
          },
          "putBooleanArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putBooleanArray(java.lang.String, boolean[])"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#keySet()"
          },
          "putParcelable": {
            "!type": "fn(key: string, value: +android.os.Parcelable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putParcelable(java.lang.String, android.os.Parcelable)"
          },
          "getIBinder": {
            "!type": "fn(key: string) -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getIBinder(java.lang.String)"
          },
          "setAllowFds": {
            "!type": "fn(allowFds: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#setAllowFds(boolean)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#clone()"
          },
          "getDouble": {
            "!type": "fn(key: string) -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getDouble(java.lang.String)"
          },
          "hasFileDescriptors": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#hasFileDescriptors()"
          },
          "getInt": {
            "!type": "fn(key: string) -> number",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getInt(java.lang.String)"
          },
          "getParcelableArrayList": {
            "!type": "fn(key: string) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getParcelableArrayList(java.lang.String)"
          },
          "putFloat": {
            "!type": "fn(key: string, value: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putFloat(java.lang.String, float)"
          },
          "putAll": {
            "!type": "fn(bundle: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putAll(android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "putBundle": {
            "!type": "fn(key: string, value: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putBundle(java.lang.String, android.os.Bundle)"
          },
          "getBooleanArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getBooleanArray(java.lang.String)"
          },
          "filterValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#filterValues()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#size()"
          },
          "getCharSequence": {
            "!type": "fn(key: string) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getCharSequence(java.lang.String)"
          },
          "putCharSequenceArrayList": {
            "!type": "fn(key: string, value: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putCharSequenceArrayList(java.lang.String, java.util.ArrayList)"
          },
          "containsKey": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#containsKey(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "remove": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#remove(java.lang.String)"
          },
          "getLongArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getLongArray(java.lang.String)"
          },
          "putIBinder": {
            "!type": "fn(key: string, value: +android.os.IBinder) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putIBinder(java.lang.String, android.os.IBinder)"
          },
          "putParcelableArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putParcelableArray(java.lang.String, android.os.Parcelable[])"
          },
          "putSerializable": {
            "!type": "fn(key: string, value: +java.io.Serializable) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putSerializable(java.lang.String, java.io.Serializable)"
          },
          "putByteArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putByteArray(java.lang.String, byte[])"
          },
          "getShortArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getShortArray(java.lang.String)"
          },
          "getFloatArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getFloatArray(java.lang.String)"
          },
          "getCharSequenceArrayList": {
            "!type": "fn(key: string) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getCharSequenceArrayList(java.lang.String)"
          },
          "putLong": {
            "!type": "fn(key: string, value: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putLong(java.lang.String, long)"
          },
          "putCharArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putCharArray(java.lang.String, char[])"
          },
          "putCharSequenceArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putCharSequenceArray(java.lang.String, java.lang.CharSequence[])"
          },
          "putParcelableArrayList": {
            "!type": "fn(key: string, value: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putParcelableArrayList(java.lang.String, java.util.ArrayList)"
          },
          "putChar": {
            "!type": "fn(key: string, value: +java.lang.Char) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putChar(java.lang.String, char)"
          },
          "getBundle": {
            "!type": "fn(key: string) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getBundle(java.lang.String)"
          },
          "isParcelled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#isParcelled()"
          },
          "getParcelableArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getParcelableArray(java.lang.String)"
          },
          "putParcelableList": {
            "!type": "fn(key: string, value: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putParcelableList(java.lang.String, java.util.List)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#clear()"
          },
          "putStringArrayList": {
            "!type": "fn(key: string, value: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putStringArrayList(java.lang.String, java.util.ArrayList)"
          },
          "getShort": {
            "!type": "fn(key: string) -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getShort(java.lang.String)"
          },
          "getLong": {
            "!type": "fn(key: string) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getLong(java.lang.String)"
          },
          "putBinder": {
            "!type": "fn(key: string, value: +android.os.IBinder) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putBinder(java.lang.String, android.os.IBinder)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#toString()"
          },
          "getSerializable": {
            "!type": "fn(key: string) -> +java.io.Serializable",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getSerializable(java.lang.String)"
          },
          "setClassLoader": {
            "!type": "fn(loader: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#setClassLoader(java.lang.ClassLoader)"
          },
          "getSizeF": {
            "!type": "fn(key: string) -> +android.util.SizeF",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getSizeF(java.lang.String)"
          },
          "putDoubleArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putDoubleArray(java.lang.String, double[])"
          },
          "putInt": {
            "!type": "fn(key: string, value: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putInt(java.lang.String, int)"
          },
          "getParcelable": {
            "!type": "fn(key: string) -> +android.os.Parcelable",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getParcelable(java.lang.String)"
          },
          "getChar": {
            "!type": "fn(key: string) -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getChar(java.lang.String)"
          },
          "getDoubleArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getDoubleArray(java.lang.String)"
          },
          "getIntArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getIntArray(java.lang.String)"
          },
          "putIntArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putIntArray(java.lang.String, int[])"
          },
          "get": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#get(java.lang.String)"
          },
          "getCharSequenceArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getCharSequenceArray(java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getClassLoader()"
          },
          "getStringArrayList": {
            "!type": "fn(key: string) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getStringArrayList(java.lang.String)"
          },
          "putString": {
            "!type": "fn(key: string, value: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putString(java.lang.String, java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getBoolean": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#getBoolean(java.lang.String)"
          },
          "getIntegerArrayList": {
            "!type": "fn(key: string) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getIntegerArrayList(java.lang.String)"
          },
          "putIntegerArrayList": {
            "!type": "fn(key: string, value: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putIntegerArrayList(java.lang.String, java.util.ArrayList)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#describeContents()"
          },
          "putLongArray": {
            "!type": "fn(key: string, value: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/BaseBundle.html#putLongArray(java.lang.String, long[])"
          },
          "getBinder": {
            "!type": "fn(key: string) -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getBinder(java.lang.String)"
          },
          "putSize": {
            "!type": "fn(key: string, value: +android.util.Size) -> void",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#putSize(java.lang.String, android.util.Size)"
          },
          "getFloat": {
            "!type": "fn(key: string) -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/os/Bundle.html#getFloat(java.lang.String)"
          }
        }
      }
    }
  }
}