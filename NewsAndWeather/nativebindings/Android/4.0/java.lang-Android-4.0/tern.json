{
  "java": {
    "lang": {
      "Thread": {
        "!url": "http://developer.android.com/reference/java/lang/Thread.html",
        "!type": "fn()",
        "State": {
          "!url": "http://developer.android.com/reference/java/lang/Thread.State.html",
          "BLOCKED": {
            "!type": "+java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#BLOCKED"
          },
          "TIMED_WAITING": {
            "!type": "+java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#TIMED_WAITING"
          },
          "NEW": {
            "!type": "+java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#NEW"
          },
          "RUNNABLE": {
            "!type": "+java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#RUNNABLE"
          },
          "WAITING": {
            "!type": "+java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#WAITING"
          },
          "TERMINATED": {
            "!type": "+java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#TERMINATED"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Thread.State.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "NORM_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#NORM_PRIORITY"
        },
        "MAX_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MAX_PRIORITY"
        },
        "MIN_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#MIN_PRIORITY"
        },
        "interrupted": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupted()"
        },
        "getAllStackTraces": {
          "!type": "fn() -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getAllStackTraces()"
        },
        "yield": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#yield()"
        },
        "currentThread": {
          "!type": "fn() -> +java.lang.Thread",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#currentThread()"
        },
        "dumpStack": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#dumpStack()"
        },
        "getDefaultUncaughtExceptionHandler": {
          "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#getDefaultUncaughtExceptionHandler()"
        },
        "holdsLock": {
          "!type": "fn(object: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#holdsLock(java.lang.Object)"
        },
        "sleep": {
          "!type": "fn(time: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#sleep(long)"
        },
        "enumerate": {
          "!type": "fn(threads: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#enumerate(java.lang.Thread[])"
        },
        "setDefaultUncaughtExceptionHandler": {
          "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
        },
        "activeCount": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/java/lang/Thread.html#activeCount()"
        },
        "prototype": {
          "pushInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#pushInterruptAction$(java.lang.Runnable)"
          },
          "interrupt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#interrupt()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "popInterruptAction$": {
            "!type": "fn(interruptAction: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#popInterruptAction$(java.lang.Runnable)"
          },
          "getThreadGroup": {
            "!type": "fn() -> +java.lang.ThreadGroup",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getThreadGroup()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getStackTrace()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setDaemon": {
            "!type": "fn(isDaemon: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setDaemon(boolean)"
          },
          "resume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#resume()"
          },
          "isInterrupted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isInterrupted()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "join": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#join()"
          },
          "getPriority": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getPriority()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setUncaughtExceptionHandler": {
            "!type": "fn(handler: +java.lang.Thread.UncaughtExceptionHandler) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)"
          },
          "stop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#stop()"
          },
          "parkUntil$": {
            "!type": "fn(time: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkUntil$(long)"
          },
          "getContextClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getContextClassLoader()"
          },
          "isAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isAlive()"
          },
          "run": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#run()"
          },
          "start": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#start()"
          },
          "setPriority": {
            "!type": "fn(priority: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setPriority(int)"
          },
          "isDaemon": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#isDaemon()"
          },
          "checkAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#checkAccess()"
          },
          "suspend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#suspend()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "countStackFrames": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#countStackFrames()"
          },
          "unpark$": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#unpark$()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getName()"
          },
          "setName": {
            "!type": "fn(threadName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setName(java.lang.String)"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#destroy()"
          },
          "parkFor$": {
            "!type": "fn(nanos: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#parkFor$(long)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUncaughtExceptionHandler": {
            "!type": "fn() -> +java.lang.Thread.UncaughtExceptionHandler",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getUncaughtExceptionHandler()"
          },
          "getState": {
            "!type": "fn() -> +java.lang.Thread.State",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getState()"
          },
          "getId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#getId()"
          },
          "setContextClassLoader": {
            "!type": "fn(cl: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Thread.html#setContextClassLoader(java.lang.ClassLoader)"
          }
        }
      },
      "InheritableThreadLocal": {
        "!url": "http://developer.android.com/reference/java/lang/InheritableThreadLocal.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "get": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html#get()"
          },
          "remove": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html#remove()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "set": {
            "!type": "fn(value: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html#set(T)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Character": {
        "!url": "http://developer.android.com/reference/java/lang/Character.html",
        "!type": "fn(value: +java.lang.Char)",
        "Subset": {
          "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html",
          "prototype": {
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html#hashCode()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(object: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html#toString()"
            }
          }
        },
        "UnicodeBlock": {
          "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html",
          "KAITHI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KAITHI"
          },
          "HANGUL_SYLLABLES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HANGUL_SYLLABLES"
          },
          "NKO": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#NKO"
          },
          "CYRILLIC_EXTENDED_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CYRILLIC_EXTENDED_B"
          },
          "CYRILLIC_EXTENDED_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CYRILLIC_EXTENDED_A"
          },
          "PHOENICIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PHOENICIAN"
          },
          "BRAILLE_PATTERNS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BRAILLE_PATTERNS"
          },
          "PHONETIC_EXTENSIONS_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PHONETIC_EXTENSIONS_SUPPLEMENT"
          },
          "TIBETAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TIBETAN"
          },
          "MYANMAR": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MYANMAR"
          },
          "BUHID": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BUHID"
          },
          "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B"
          },
          "GREEK_EXTENDED": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GREEK_EXTENDED"
          },
          "ANCIENT_GREEK_MUSICAL_NOTATION": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ANCIENT_GREEK_MUSICAL_NOTATION"
          },
          "MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A"
          },
          "ARABIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ARABIC"
          },
          "CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT"
          },
          "COMBINING_MARKS_FOR_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COMBINING_MARKS_FOR_SYMBOLS"
          },
          "ALCHEMICAL_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ALCHEMICAL_SYMBOLS"
          },
          "TAMIL": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAMIL"
          },
          "DINGBATS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#DINGBATS"
          },
          "THAI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#THAI"
          },
          "OLD_TURKIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OLD_TURKIC"
          },
          "REJANG": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#REJANG"
          },
          "SAMARITAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SAMARITAN"
          },
          "ETHIOPIC_EXTENDED": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ETHIOPIC_EXTENDED"
          },
          "SUPPLEMENTARY_PRIVATE_USE_AREA_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPPLEMENTARY_PRIVATE_USE_AREA_B"
          },
          "GURMUKHI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GURMUKHI"
          },
          "CJK_COMPATIBILITY_FORMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_COMPATIBILITY_FORMS"
          },
          "SUPPLEMENTARY_PRIVATE_USE_AREA_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPPLEMENTARY_PRIVATE_USE_AREA_A"
          },
          "CARIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CARIAN"
          },
          "CYRILLIC_SUPPLEMENTARY": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CYRILLIC_SUPPLEMENTARY"
          },
          "SINHALA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SINHALA"
          },
          "KATAKANA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KATAKANA"
          },
          "CUNEIFORM_NUMBERS_AND_PUNCTUATION": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CUNEIFORM_NUMBERS_AND_PUNCTUATION"
          },
          "TAGS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAGS"
          },
          "PHAGS_PA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PHAGS_PA"
          },
          "ETHIOPIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ETHIOPIC"
          },
          "KANBUN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KANBUN"
          },
          "BAMUM": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BAMUM"
          },
          "CURRENCY_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CURRENCY_SYMBOLS"
          },
          "MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS"
          },
          "LOW_SURROGATES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LOW_SURROGATES"
          },
          "SURROGATES_AREA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SURROGATES_AREA"
          },
          "DESERET": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#DESERET"
          },
          "NUMBER_FORMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#NUMBER_FORMS"
          },
          "HANGUL_JAMO": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HANGUL_JAMO"
          },
          "PLAYING_CARDS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PLAYING_CARDS"
          },
          "BENGALI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BENGALI"
          },
          "ETHIOPIC_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ETHIOPIC_SUPPLEMENT"
          },
          "BATAK": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BATAK"
          },
          "KANNADA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KANNADA"
          },
          "HALFWIDTH_AND_FULLWIDTH_FORMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HALFWIDTH_AND_FULLWIDTH_FORMS"
          },
          "ENCLOSED_ALPHANUMERICS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ENCLOSED_ALPHANUMERICS"
          },
          "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS"
          },
          "MYANMAR_EXTENDED_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MYANMAR_EXTENDED_A"
          },
          "YI_RADICALS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#YI_RADICALS"
          },
          "HANUNOO": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HANUNOO"
          },
          "BALINESE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BALINESE"
          },
          "KANGXI_RADICALS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KANGXI_RADICALS"
          },
          "GEORGIAN_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GEORGIAN_SUPPLEMENT"
          },
          "BASIC_LATIN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BASIC_LATIN"
          },
          "COMMON_INDIC_NUMBER_FORMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COMMON_INDIC_NUMBER_FORMS"
          },
          "HANGUL_JAMO_EXTENDED_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HANGUL_JAMO_EXTENDED_B"
          },
          "HANGUL_JAMO_EXTENDED_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HANGUL_JAMO_EXTENDED_A"
          },
          "MISCELLANEOUS_TECHNICAL": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MISCELLANEOUS_TECHNICAL"
          },
          "TRANSPORT_AND_MAP_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TRANSPORT_AND_MAP_SYMBOLS"
          },
          "IDEOGRAPHIC_DESCRIPTION_CHARACTERS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#IDEOGRAPHIC_DESCRIPTION_CHARACTERS"
          },
          "ARABIC_PRESENTATION_FORMS_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ARABIC_PRESENTATION_FORMS_B"
          },
          "ARABIC_PRESENTATION_FORMS_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ARABIC_PRESENTATION_FORMS_A"
          },
          "HANGUL_COMPATIBILITY_JAMO": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HANGUL_COMPATIBILITY_JAMO"
          },
          "BAMUM_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BAMUM_SUPPLEMENT"
          },
          "ENCLOSED_IDEOGRAPHIC_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ENCLOSED_IDEOGRAPHIC_SUPPLEMENT"
          },
          "LEPCHA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LEPCHA"
          },
          "CHEROKEE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CHEROKEE"
          },
          "SUPPLEMENTAL_ARROWS_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_B"
          },
          "OLD_ITALIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OLD_ITALIC"
          },
          "SUPPLEMENTAL_ARROWS_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPPLEMENTAL_ARROWS_A"
          },
          "CJK_STROKES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_STROKES"
          },
          "MISCELLANEOUS_SYMBOLS_AND_ARROWS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS_AND_ARROWS"
          },
          "LYCIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LYCIAN"
          },
          "SYLOTI_NAGRI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SYLOTI_NAGRI"
          },
          "DOMINO_TILES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#DOMINO_TILES"
          },
          "SHAVIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SHAVIAN"
          },
          "LISU": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LISU"
          },
          "KHAROSHTHI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KHAROSHTHI"
          },
          "IMPERIAL_ARAMAIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#IMPERIAL_ARAMAIC"
          },
          "SUPPLEMENTAL_MATHEMATICAL_OPERATORS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPPLEMENTAL_MATHEMATICAL_OPERATORS"
          },
          "CJK_SYMBOLS_AND_PUNCTUATION": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_SYMBOLS_AND_PUNCTUATION"
          },
          "CYRILLIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CYRILLIC"
          },
          "CONTROL_PICTURES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CONTROL_PICTURES"
          },
          "ARMENIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ARMENIAN"
          },
          "TELUGU": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TELUGU"
          },
          "CHAM": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CHAM"
          },
          "CJK_COMPATIBILITY": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_COMPATIBILITY"
          },
          "SPECIALS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SPECIALS"
          },
          "TAI_LE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAI_LE"
          },
          "BOPOMOFO_EXTENDED": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BOPOMOFO_EXTENDED"
          },
          "GEOMETRIC_SHAPES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GEOMETRIC_SHAPES"
          },
          "SUPERSCRIPTS_AND_SUBSCRIPTS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPERSCRIPTS_AND_SUBSCRIPTS"
          },
          "GENERAL_PUNCTUATION": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GENERAL_PUNCTUATION"
          },
          "SYRIAC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SYRIAC"
          },
          "VEDIC_EXTENSIONS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#VEDIC_EXTENSIONS"
          },
          "KATAKANA_PHONETIC_EXTENSIONS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KATAKANA_PHONETIC_EXTENSIONS"
          },
          "MATHEMATICAL_ALPHANUMERIC_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MATHEMATICAL_ALPHANUMERIC_SYMBOLS"
          },
          "KHMER": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KHMER"
          },
          "LINEAR_B_IDEOGRAMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LINEAR_B_IDEOGRAMS"
          },
          "VARIATION_SELECTORS_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#VARIATION_SELECTORS_SUPPLEMENT"
          },
          "KANA_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KANA_SUPPLEMENT"
          },
          "OLD_SOUTH_ARABIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OLD_SOUTH_ARABIAN"
          },
          "OPTICAL_CHARACTER_RECOGNITION": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OPTICAL_CHARACTER_RECOGNITION"
          },
          "TAI_VIET": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAI_VIET"
          },
          "JAVANESE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#JAVANESE"
          },
          "ETHIOPIC_EXTENDED_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ETHIOPIC_EXTENDED_A"
          },
          "COMBINING_DIACRITICAL_MARKS_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS_SUPPLEMENT"
          },
          "SPACING_MODIFIER_LETTERS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SPACING_MODIFIER_LETTERS"
          },
          "RUNIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#RUNIC"
          },
          "TAI_XUAN_JING_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAI_XUAN_JING_SYMBOLS"
          },
          "MALAYALAM": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MALAYALAM"
          },
          "CJK_UNIFIED_IDEOGRAPHS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS"
          },
          "SAURASHTRA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SAURASHTRA"
          },
          "DEVANAGARI_EXTENDED": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#DEVANAGARI_EXTENDED"
          },
          "COPTIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COPTIC"
          },
          "INSCRIPTIONAL_PARTHIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#INSCRIPTIONAL_PARTHIAN"
          },
          "ENCLOSED_CJK_LETTERS_AND_MONTHS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ENCLOSED_CJK_LETTERS_AND_MONTHS"
          },
          "GOTHIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GOTHIC"
          },
          "LATIN_1_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LATIN_1_SUPPLEMENT"
          },
          "YIJING_HEXAGRAM_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#YIJING_HEXAGRAM_SYMBOLS"
          },
          "BUGINESE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BUGINESE"
          },
          "UGARITIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#UGARITIC"
          },
          "LYDIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LYDIAN"
          },
          "YI_SYLLABLES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#YI_SYLLABLES"
          },
          "MATHEMATICAL_OPERATORS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MATHEMATICAL_OPERATORS"
          },
          "PHONETIC_EXTENSIONS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PHONETIC_EXTENSIONS"
          },
          "SUPPLEMENTAL_PUNCTUATION": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUPPLEMENTAL_PUNCTUATION"
          },
          "MODIFIER_TONE_LETTERS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MODIFIER_TONE_LETTERS"
          },
          "KHMER_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KHMER_SYMBOLS"
          },
          "VERTICAL_FORMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#VERTICAL_FORMS"
          },
          "VARIATION_SELECTORS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#VARIATION_SELECTORS"
          },
          "COMBINING_DIACRITICAL_MARKS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COMBINING_DIACRITICAL_MARKS"
          },
          "MANDAIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MANDAIC"
          },
          "EGYPTIAN_HIEROGLYPHS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#EGYPTIAN_HIEROGLYPHS"
          },
          "LIMBU": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LIMBU"
          },
          "TAGBANWA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAGBANWA"
          },
          "CJK_RADICALS_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_RADICALS_SUPPLEMENT"
          },
          "CJK_COMPATIBILITY_IDEOGRAPHS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_COMPATIBILITY_IDEOGRAPHS"
          },
          "OLD_PERSIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OLD_PERSIAN"
          },
          "KAYAH_LI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#KAYAH_LI"
          },
          "LATIN_EXTENDED_D": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LATIN_EXTENDED_D"
          },
          "LATIN_EXTENDED_C": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LATIN_EXTENDED_C"
          },
          "HIRAGANA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HIRAGANA"
          },
          "LATIN_EXTENDED_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LATIN_EXTENDED_B"
          },
          "LATIN_EXTENDED_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LATIN_EXTENDED_A"
          },
          "TAGALOG": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAGALOG"
          },
          "EMOTICONS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#EMOTICONS"
          },
          "INSCRIPTIONAL_PAHLAVI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#INSCRIPTIONAL_PAHLAVI"
          },
          "GLAGOLITIC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GLAGOLITIC"
          },
          "BOX_DRAWING": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BOX_DRAWING"
          },
          "ANCIENT_GREEK_NUMBERS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ANCIENT_GREEK_NUMBERS"
          },
          "LETTERLIKE_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LETTERLIKE_SYMBOLS"
          },
          "AEGEAN_NUMBERS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#AEGEAN_NUMBERS"
          },
          "SMALL_FORM_VARIANTS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SMALL_FORM_VARIANTS"
          },
          "ALPHABETIC_PRESENTATION_FORMS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ALPHABETIC_PRESENTATION_FORMS"
          },
          "PRIVATE_USE_AREA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PRIVATE_USE_AREA"
          },
          "MUSICAL_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MUSICAL_SYMBOLS"
          },
          "VAI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#VAI"
          },
          "BLOCK_ELEMENTS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BLOCK_ELEMENTS"
          },
          "GEORGIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GEORGIAN"
          },
          "HIGH_SURROGATES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HIGH_SURROGATES"
          },
          "ENCLOSED_ALPHANUMERIC_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ENCLOSED_ALPHANUMERIC_SUPPLEMENT"
          },
          "ARABIC_SUPPLEMENT": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ARABIC_SUPPLEMENT"
          },
          "HIGH_PRIVATE_USE_SURROGATES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HIGH_PRIVATE_USE_SURROGATES"
          },
          "COMBINING_HALF_MARKS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COMBINING_HALF_MARKS"
          },
          "BYZANTINE_MUSICAL_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BYZANTINE_MUSICAL_SYMBOLS"
          },
          "COUNTING_ROD_NUMERALS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#COUNTING_ROD_NUMERALS"
          },
          "THAANA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#THAANA"
          },
          "LAO": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LAO"
          },
          "GREEK": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GREEK"
          },
          "OL_CHIKI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OL_CHIKI"
          },
          "UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED"
          },
          "ANCIENT_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ANCIENT_SYMBOLS"
          },
          "LATIN_EXTENDED_ADDITIONAL": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LATIN_EXTENDED_ADDITIONAL"
          },
          "DEVANAGARI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#DEVANAGARI"
          },
          "MISCELLANEOUS_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MISCELLANEOUS_SYMBOLS"
          },
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D"
          },
          "TAI_THAM": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TAI_THAM"
          },
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C"
          },
          "MAHJONG_TILES": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MAHJONG_TILES"
          },
          "RUMI_NUMERAL_SYMBOLS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#RUMI_NUMERAL_SYMBOLS"
          },
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B"
          },
          "CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A"
          },
          "HEBREW": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#HEBREW"
          },
          "GUJARATI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#GUJARATI"
          },
          "IPA_EXTENSIONS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#IPA_EXTENSIONS"
          },
          "SUNDANESE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#SUNDANESE"
          },
          "OSMANYA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OSMANYA"
          },
          "BRAHMI": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BRAHMI"
          },
          "TIFINAGH": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#TIFINAGH"
          },
          "LINEAR_B_SYLLABARY": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#LINEAR_B_SYLLABARY"
          },
          "ORIYA": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ORIYA"
          },
          "NEW_TAI_LUE": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#NEW_TAI_LUE"
          },
          "AVESTAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#AVESTAN"
          },
          "MONGOLIAN": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MONGOLIAN"
          },
          "ARROWS": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#ARROWS"
          },
          "MEETEI_MAYEK": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#MEETEI_MAYEK"
          },
          "CUNEIFORM": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CUNEIFORM"
          },
          "CYPRIOT_SYLLABARY": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#CYPRIOT_SYLLABARY"
          },
          "OGHAM": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#OGHAM"
          },
          "PHAISTOS_DISC": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#PHAISTOS_DISC"
          },
          "BOPOMOFO": {
            "!type": "+java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#BOPOMOFO"
          },
          "forName": {
            "!type": "fn(blockName: string) -> +java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#forName(java.lang.String)"
          },
          "of": {
            "!type": "fn(c: +java.lang.Char) -> +java.lang.Character.UnicodeBlock",
            "!url": "http://developer.android.com/reference/java/lang/Character.UnicodeBlock.html#of(char)"
          },
          "prototype": {
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html#hashCode()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(object: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Character.Subset.html#toString()"
            }
          }
        },
        "MAX_VALUE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MAX_VALUE"
        },
        "SPACE_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#SPACE_SEPARATOR"
        },
        "DASH_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DASH_PUNCTUATION"
        },
        "DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING"
        },
        "OTHER_SYMBOL": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#OTHER_SYMBOL"
        },
        "ENCLOSING_MARK": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#ENCLOSING_MARK"
        },
        "MAX_HIGH_SURROGATE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MAX_HIGH_SURROGATE"
        },
        "FORMAT": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#FORMAT"
        },
        "DIRECTIONALITY_EUROPEAN_NUMBER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_EUROPEAN_NUMBER"
        },
        "DIRECTIONALITY_RIGHT_TO_LEFT": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_RIGHT_TO_LEFT"
        },
        "PARAGRAPH_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#PARAGRAPH_SEPARATOR"
        },
        "LETTER_NUMBER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#LETTER_NUMBER"
        },
        "MODIFIER_LETTER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MODIFIER_LETTER"
        },
        "MAX_LOW_SURROGATE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MAX_LOW_SURROGATE"
        },
        "DIRECTIONALITY_PARAGRAPH_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_PARAGRAPH_SEPARATOR"
        },
        "DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC"
        },
        "DIRECTIONALITY_OTHER_NEUTRALS": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_OTHER_NEUTRALS"
        },
        "DIRECTIONALITY_BOUNDARY_NEUTRAL": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_BOUNDARY_NEUTRAL"
        },
        "DIRECTIONALITY_UNDEFINED": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_UNDEFINED"
        },
        "MIN_RADIX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_RADIX"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#TYPE"
        },
        "INITIAL_QUOTE_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#INITIAL_QUOTE_PUNCTUATION"
        },
        "DIRECTIONALITY_SEGMENT_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_SEGMENT_SEPARATOR"
        },
        "DIRECTIONALITY_LEFT_TO_RIGHT": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_LEFT_TO_RIGHT"
        },
        "MODIFIER_SYMBOL": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MODIFIER_SYMBOL"
        },
        "DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR"
        },
        "SURROGATE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#SURROGATE"
        },
        "DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR"
        },
        "CONNECTOR_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#CONNECTOR_PUNCTUATION"
        },
        "MAX_CODE_POINT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MAX_CODE_POINT"
        },
        "MIN_SURROGATE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_SURROGATE"
        },
        "DIRECTIONALITY_WHITESPACE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_WHITESPACE"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#SIZE"
        },
        "NON_SPACING_MARK": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#NON_SPACING_MARK"
        },
        "START_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#START_PUNCTUATION"
        },
        "TITLECASE_LETTER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#TITLECASE_LETTER"
        },
        "MAX_SURROGATE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MAX_SURROGATE"
        },
        "CURRENCY_SYMBOL": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#CURRENCY_SYMBOL"
        },
        "MIN_VALUE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_VALUE"
        },
        "MATH_SYMBOL": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MATH_SYMBOL"
        },
        "DECIMAL_DIGIT_NUMBER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DECIMAL_DIGIT_NUMBER"
        },
        "DIRECTIONALITY_POP_DIRECTIONAL_FORMAT": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_POP_DIRECTIONAL_FORMAT"
        },
        "MIN_CODE_POINT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_CODE_POINT"
        },
        "DIRECTIONALITY_ARABIC_NUMBER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_ARABIC_NUMBER"
        },
        "MIN_SUPPLEMENTARY_CODE_POINT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_SUPPLEMENTARY_CODE_POINT"
        },
        "END_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#END_PUNCTUATION"
        },
        "MAX_RADIX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MAX_RADIX"
        },
        "PRIVATE_USE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#PRIVATE_USE"
        },
        "MIN_LOW_SURROGATE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_LOW_SURROGATE"
        },
        "OTHER_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#OTHER_PUNCTUATION"
        },
        "DIRECTIONALITY_NONSPACING_MARK": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_NONSPACING_MARK"
        },
        "LOWERCASE_LETTER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#LOWERCASE_LETTER"
        },
        "COMBINING_SPACING_MARK": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#COMBINING_SPACING_MARK"
        },
        "MIN_HIGH_SURROGATE": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#MIN_HIGH_SURROGATE"
        },
        "OTHER_NUMBER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#OTHER_NUMBER"
        },
        "DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE"
        },
        "LINE_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#LINE_SEPARATOR"
        },
        "DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE"
        },
        "FINAL_QUOTE_PUNCTUATION": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#FINAL_QUOTE_PUNCTUATION"
        },
        "UNASSIGNED": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#UNASSIGNED"
        },
        "DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING"
        },
        "OTHER_LETTER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#OTHER_LETTER"
        },
        "UPPERCASE_LETTER": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#UPPERCASE_LETTER"
        },
        "CONTROL": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#CONTROL"
        },
        "DIRECTIONALITY_COMMON_NUMBER_SEPARATOR": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#DIRECTIONALITY_COMMON_NUMBER_SEPARATOR"
        },
        "isIdeographic": {
          "!type": "fn(codePoint: number) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isIdeographic(int)"
        },
        "isMirrored": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isMirrored(char)"
        },
        "isUnicodeIdentifierPart": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isUnicodeIdentifierPart(char)"
        },
        "isLetter": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isLetter(char)"
        },
        "toString": {
          "!type": "fn(value: +java.lang.Char) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#toString(char)"
        },
        "isHighSurrogate": {
          "!type": "fn(ch: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isHighSurrogate(char)"
        },
        "isSurrogate": {
          "!type": "fn(ch: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isSurrogate(char)"
        },
        "isSpaceChar": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isSpaceChar(char)"
        },
        "compare": {
          "!type": "fn(lhs: +java.lang.Char, rhs: +java.lang.Char) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#compare(char, char)"
        },
        "forDigit": {
          "!type": "fn(digit: number, radix: number) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#forDigit(int, int)"
        },
        "offsetByCodePoints": {
          "!type": "fn(seq: +java.lang.CharSequence, index: number, codePointOffset: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#offsetByCodePoints(java.lang.CharSequence, int, int)"
        },
        "isJavaIdentifierPart": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isJavaIdentifierPart(char)"
        },
        "isSpace": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isSpace(char)"
        },
        "toChars": {
          "!type": "fn(codePoint: number, dst: +java.newArray, dstIndex: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#toChars(int, char[], int)"
        },
        "isAlphabetic": {
          "!type": "fn(codePoint: number) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isAlphabetic(int)"
        },
        "valueOf": {
          "!type": "fn(c: +java.lang.Char) -> +java.lang.Character",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#valueOf(char)"
        },
        "isSupplementaryCodePoint": {
          "!type": "fn(codePoint: number) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isSupplementaryCodePoint(int)"
        },
        "digit": {
          "!type": "fn(c: +java.lang.Char, radix: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#digit(char, int)"
        },
        "isUnicodeIdentifierStart": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isUnicodeIdentifierStart(char)"
        },
        "isIdentifierIgnorable": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isIdentifierIgnorable(char)"
        },
        "getIcuDirectionality": {
          "!type": "fn(codePoint: number) -> +java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#getIcuDirectionality(int)"
        },
        "reverseBytes": {
          "!type": "fn(c: +java.lang.Char) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#reverseBytes(char)"
        },
        "highSurrogate": {
          "!type": "fn(codePoint: number) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#highSurrogate(int)"
        },
        "isDefined": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isDefined(char)"
        },
        "getType": {
          "!type": "fn(c: +java.lang.Char) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#getType(char)"
        },
        "isJavaIdentifierStart": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isJavaIdentifierStart(char)"
        },
        "toUpperCase": {
          "!type": "fn(c: +java.lang.Char) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#toUpperCase(char)"
        },
        "getNumericValue": {
          "!type": "fn(c: +java.lang.Char) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#getNumericValue(char)"
        },
        "isJavaLetter": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isJavaLetter(char)"
        },
        "isUpperCase": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isUpperCase(char)"
        },
        "isLetterOrDigit": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isLetterOrDigit(char)"
        },
        "isBmpCodePoint": {
          "!type": "fn(codePoint: number) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isBmpCodePoint(int)"
        },
        "toLowerCase": {
          "!type": "fn(c: +java.lang.Char) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#toLowerCase(char)"
        },
        "isDigit": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isDigit(char)"
        },
        "getDirectionality": {
          "!type": "fn(c: +java.lang.Char) -> +java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#getDirectionality(char)"
        },
        "isWhitespace": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isWhitespace(char)"
        },
        "isLowerCase": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isLowerCase(char)"
        },
        "toCodePoint": {
          "!type": "fn(high: +java.lang.Char, low: +java.lang.Char) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#toCodePoint(char, char)"
        },
        "isLowSurrogate": {
          "!type": "fn(ch: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isLowSurrogate(char)"
        },
        "isSurrogatePair": {
          "!type": "fn(high: +java.lang.Char, low: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isSurrogatePair(char, char)"
        },
        "lowSurrogate": {
          "!type": "fn(codePoint: number) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#lowSurrogate(int)"
        },
        "toTitleCase": {
          "!type": "fn(c: +java.lang.Char) -> +java.lang.Char",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#toTitleCase(char)"
        },
        "isValidCodePoint": {
          "!type": "fn(codePoint: number) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isValidCodePoint(int)"
        },
        "getName": {
          "!type": "fn(codePoint: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#getName(int)"
        },
        "isTitleCase": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isTitleCase(char)"
        },
        "codePointBefore": {
          "!type": "fn(seq: +java.lang.CharSequence, index: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#codePointBefore(java.lang.CharSequence, int)"
        },
        "codePointCount": {
          "!type": "fn(seq: +java.lang.CharSequence, beginIndex: number, endIndex: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#codePointCount(java.lang.CharSequence, int, int)"
        },
        "codePointAt": {
          "!type": "fn(seq: +java.lang.CharSequence, index: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#codePointAt(java.lang.CharSequence, int)"
        },
        "isISOControl": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isISOControl(char)"
        },
        "isJavaLetterOrDigit": {
          "!type": "fn(c: +java.lang.Char) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#isJavaLetterOrDigit(char)"
        },
        "charCount": {
          "!type": "fn(codePoint: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Character.html#charCount(int)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Character.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Character.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(c: +java.lang.Character) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Character.html#compareTo(java.lang.Character)"
          },
          "charValue": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/lang/Character.html#charValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Character.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Long": {
        "!url": "http://developer.android.com/reference/java/lang/Long.html",
        "!type": "fn(value: +java.lang.Long)",
        "MAX_VALUE": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#MAX_VALUE"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#SIZE"
        },
        "MIN_VALUE": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#MIN_VALUE"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#TYPE"
        },
        "reverseBytes": {
          "!type": "fn(v: +java.lang.Long) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#reverseBytes(long)"
        },
        "numberOfTrailingZeros": {
          "!type": "fn(v: +java.lang.Long) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#numberOfTrailingZeros(long)"
        },
        "parsePositiveLong": {
          "!type": "fn(string: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#parsePositiveLong(java.lang.String)"
        },
        "rotateLeft": {
          "!type": "fn(v: +java.lang.Long, distance: number) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#rotateLeft(long, int)"
        },
        "getLong": {
          "!type": "fn(string: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#getLong(java.lang.String)"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#valueOf(java.lang.String)"
        },
        "reverse": {
          "!type": "fn(v: +java.lang.Long) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#reverse(long)"
        },
        "bitCount": {
          "!type": "fn(v: +java.lang.Long) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#bitCount(long)"
        },
        "rotateRight": {
          "!type": "fn(v: +java.lang.Long, distance: number) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#rotateRight(long, int)"
        },
        "decode": {
          "!type": "fn(string: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#decode(java.lang.String)"
        },
        "signum": {
          "!type": "fn(v: +java.lang.Long) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#signum(long)"
        },
        "highestOneBit": {
          "!type": "fn(v: +java.lang.Long) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#highestOneBit(long)"
        },
        "toString": {
          "!type": "fn(n: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#toString(long)"
        },
        "lowestOneBit": {
          "!type": "fn(v: +java.lang.Long) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#lowestOneBit(long)"
        },
        "toOctalString": {
          "!type": "fn(v: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#toOctalString(long)"
        },
        "parseLong": {
          "!type": "fn(string: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#parseLong(java.lang.String)"
        },
        "toBinaryString": {
          "!type": "fn(v: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#toBinaryString(long)"
        },
        "toHexString": {
          "!type": "fn(v: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#toHexString(long)"
        },
        "numberOfLeadingZeros": {
          "!type": "fn(v: +java.lang.Long) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#numberOfLeadingZeros(long)"
        },
        "compare": {
          "!type": "fn(lhs: +java.lang.Long, rhs: +java.lang.Long) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Long.html#compare(long, long)"
        },
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(object: +java.lang.Long) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#compareTo(java.lang.Long)"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#shortValue()"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#byteValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#floatValue()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#doubleValue()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#longValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Long.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NoClassDefFoundError": {
        "!url": "http://developer.android.com/reference/java/lang/NoClassDefFoundError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ClassFormatError": {
        "!url": "http://developer.android.com/reference/java/lang/ClassFormatError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NoSuchMethodError": {
        "!url": "http://developer.android.com/reference/java/lang/NoSuchMethodError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "TypeNotPresentException": {
        "!url": "http://developer.android.com/reference/java/lang/TypeNotPresentException.html",
        "!type": "fn(typeName: string, cause: +java.lang.Throwable)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "typeName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/TypeNotPresentException.html#typeName()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "UnsupportedClassVersionError": {
        "!url": "http://developer.android.com/reference/java/lang/UnsupportedClassVersionError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NoSuchMethodException": {
        "!url": "http://developer.android.com/reference/java/lang/NoSuchMethodException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IllegalStateException": {
        "!url": "http://developer.android.com/reference/java/lang/IllegalStateException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Void": {
        "!url": "http://developer.android.com/reference/java/lang/Void.html",
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Void.html#TYPE"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "OutOfMemoryError": {
        "!url": "http://developer.android.com/reference/java/lang/OutOfMemoryError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ThreadLocal": {
        "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "get": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html#get()"
          },
          "remove": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html#remove()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "set": {
            "!type": "fn(value: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadLocal.html#set(T)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ArrayStoreException": {
        "!url": "http://developer.android.com/reference/java/lang/ArrayStoreException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "CloneNotSupportedException": {
        "!url": "http://developer.android.com/reference/java/lang/CloneNotSupportedException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AssertionError": {
        "!url": "http://developer.android.com/reference/java/lang/AssertionError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "VerifyError": {
        "!url": "http://developer.android.com/reference/java/lang/VerifyError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ClassCircularityError": {
        "!url": "http://developer.android.com/reference/java/lang/ClassCircularityError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "String": {
        "!url": "http://developer.android.com/reference/java/lang/String.html",
        "!type": "fn()",
        "CASE_INSENSITIVE_ORDER": {
          "!type": "+java.util.Comparator",
          "!url": "http://developer.android.com/reference/java/lang/String.html#CASE_INSENSITIVE_ORDER"
        },
        "valueOf": {
          "!type": "fn(data: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/lang/String.html#valueOf(char[])"
        },
        "format": {
          "!type": "fn(format: string, args: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/lang/String.html#format(java.lang.String, java.lang.Object[])"
        },
        "copyValueOf": {
          "!type": "fn(data: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/lang/String.html#copyValueOf(char[])"
        },
        "prototype": {
          "trim": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#trim()"
          },
          "matches": {
            "!type": "fn(regularExpression: string) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#matches(java.lang.String)"
          },
          "compareToIgnoreCase": {
            "!type": "fn(string: string) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#compareToIgnoreCase(java.lang.String)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getBytes": {
            "!type": "fn(start: number, end: number, data: +java.newArray, index: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/String.html#getBytes(int, int, byte[], int)"
          },
          "startsWith": {
            "!type": "fn(prefix: string) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#startsWith(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "offsetByCodePoints": {
            "!type": "fn(index: number, codePointOffset: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#offsetByCodePoints(int, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#hashCode()"
          },
          "replaceAll": {
            "!type": "fn(regularExpression: string, replacement: string) -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#replaceAll(java.lang.String, java.lang.String)"
          },
          "contentEquals": {
            "!type": "fn(sb: +java.lang.StringBuffer) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#contentEquals(java.lang.StringBuffer)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "toCharArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/String.html#toCharArray()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#isEmpty()"
          },
          "indexOf": {
            "!type": "fn(c: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#indexOf(int)"
          },
          "length": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#length()"
          },
          "replace": {
            "!type": "fn(oldChar: +java.lang.Char, newChar: +java.lang.Char) -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#replace(char, char)"
          },
          "split": {
            "!type": "fn(regularExpression: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/String.html#split(java.lang.String)"
          },
          "concat": {
            "!type": "fn(string: string) -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#concat(java.lang.String)"
          },
          "equals": {
            "!type": "fn(other: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#equals(java.lang.Object)"
          },
          "toUpperCase": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#toUpperCase()"
          },
          "contains": {
            "!type": "fn(cs: +java.lang.CharSequence) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#contains(java.lang.CharSequence)"
          },
          "intern": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#intern()"
          },
          "substring": {
            "!type": "fn(start: number) -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#substring(int)"
          },
          "lastIndexOf": {
            "!type": "fn(c: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#lastIndexOf(int)"
          },
          "toLowerCase": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#toLowerCase()"
          },
          "subSequence": {
            "!type": "fn(start: number, end: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/java/lang/String.html#subSequence(int, int)"
          },
          "equalsIgnoreCase": {
            "!type": "fn(string: string) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#equalsIgnoreCase(java.lang.String)"
          },
          "replaceFirst": {
            "!type": "fn(regularExpression: string, replacement: string) -> string",
            "!url": "http://developer.android.com/reference/java/lang/String.html#replaceFirst(java.lang.String, java.lang.String)"
          },
          "charAt": {
            "!type": "fn(index: number) -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/lang/String.html#charAt(int)"
          },
          "codePointBefore": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#codePointBefore(int)"
          },
          "codePointCount": {
            "!type": "fn(start: number, end: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#codePointCount(int, int)"
          },
          "codePointAt": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#codePointAt(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getChars": {
            "!type": "fn(start: number, end: number, buffer: +java.newArray, index: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/String.html#getChars(int, int, char[], int)"
          },
          "endsWith": {
            "!type": "fn(suffix: string) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#endsWith(java.lang.String)"
          },
          "compareTo": {
            "!type": "fn(string: string) -> number",
            "!url": "http://developer.android.com/reference/java/lang/String.html#compareTo(java.lang.String)"
          },
          "regionMatches": {
            "!type": "fn(thisStart: number, string: string, start: number, length: number) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/String.html#regionMatches(int, java.lang.String, int, int)"
          }
        }
      },
      "LinkageError": {
        "!url": "http://developer.android.com/reference/java/lang/LinkageError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ClassNotFoundException": {
        "!url": "http://developer.android.com/reference/java/lang/ClassNotFoundException.html",
        "!type": "fn()",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getException": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/ClassNotFoundException.html#getException()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/ClassNotFoundException.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "NullPointerException": {
        "!url": "http://developer.android.com/reference/java/lang/NullPointerException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IllegalAccessError": {
        "!url": "http://developer.android.com/reference/java/lang/IllegalAccessError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Runtime": {
        "!url": "http://developer.android.com/reference/java/lang/Runtime.html",
        "runFinalizersOnExit": {
          "!type": "fn(run: bool) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Runtime.html#runFinalizersOnExit(boolean)"
        },
        "getRuntime": {
          "!type": "fn() -> +java.lang.Runtime",
          "!url": "http://developer.android.com/reference/java/lang/Runtime.html#getRuntime()"
        },
        "prototype": {
          "traceInstructions": {
            "!type": "fn(enable: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#traceInstructions(boolean)"
          },
          "availableProcessors": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#availableProcessors()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeShutdownHook": {
            "!type": "fn(hook: +java.lang.Thread) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#removeShutdownHook(java.lang.Thread)"
          },
          "getLocalizedOutputStream": {
            "!type": "fn(stream: +java.io.OutputStream) -> +java.io.OutputStream",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#getLocalizedOutputStream(java.io.OutputStream)"
          },
          "load": {
            "!type": "fn(absolutePath: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#load(java.lang.String)"
          },
          "halt": {
            "!type": "fn(code: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#halt(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "freeMemory": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#freeMemory()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "addShutdownHook": {
            "!type": "fn(hook: +java.lang.Thread) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#addShutdownHook(java.lang.Thread)"
          },
          "loadLibrary": {
            "!type": "fn(nickname: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#loadLibrary(java.lang.String)"
          },
          "maxMemory": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#maxMemory()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "exec": {
            "!type": "fn(progArray: +java.newArray) -> +java.lang.Process",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#exec(java.lang.String[])"
          },
          "exit": {
            "!type": "fn(code: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#exit(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "runFinalization": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#runFinalization()"
          },
          "traceMethodCalls": {
            "!type": "fn(enable: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#traceMethodCalls(boolean)"
          },
          "totalMemory": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#totalMemory()"
          },
          "getLocalizedInputStream": {
            "!type": "fn(stream: +java.io.InputStream) -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#getLocalizedInputStream(java.io.InputStream)"
          },
          "gc": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Runtime.html#gc()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "StringIndexOutOfBoundsException": {
        "!url": "http://developer.android.com/reference/java/lang/StringIndexOutOfBoundsException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "UnknownError": {
        "!url": "http://developer.android.com/reference/java/lang/UnknownError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InstantiationError": {
        "!url": "http://developer.android.com/reference/java/lang/InstantiationError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NumberFormatException": {
        "!url": "http://developer.android.com/reference/java/lang/NumberFormatException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ThreadDeath": {
        "!url": "http://developer.android.com/reference/java/lang/ThreadDeath.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IllegalThreadStateException": {
        "!url": "http://developer.android.com/reference/java/lang/IllegalThreadStateException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Short": {
        "!url": "http://developer.android.com/reference/java/lang/Short.html",
        "!type": "fn(string: string)",
        "MAX_VALUE": {
          "!type": "+java.lang.Short",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#MAX_VALUE"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#SIZE"
        },
        "MIN_VALUE": {
          "!type": "+java.lang.Short",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#MIN_VALUE"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#TYPE"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Short",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#valueOf(java.lang.String)"
        },
        "parseShort": {
          "!type": "fn(string: string) -> +java.lang.Short",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#parseShort(java.lang.String)"
        },
        "compare": {
          "!type": "fn(lhs: +java.lang.Short, rhs: +java.lang.Short) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#compare(short, short)"
        },
        "toString": {
          "!type": "fn(value: +java.lang.Short) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#toString(short)"
        },
        "decode": {
          "!type": "fn(string: string) -> +java.lang.Short",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#decode(java.lang.String)"
        },
        "reverseBytes": {
          "!type": "fn(s: +java.lang.Short) -> +java.lang.Short",
          "!url": "http://developer.android.com/reference/java/lang/Short.html#reverseBytes(short)"
        },
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(object: +java.lang.Short) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#compareTo(java.lang.Short)"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#shortValue()"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#byteValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#floatValue()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#doubleValue()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#longValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Short.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Exception": {
        "!url": "http://developer.android.com/reference/java/lang/Exception.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ClassLoader": {
        "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html",
        "getSystemResources": {
          "!type": "fn(resName: string) -> +java.util.Enumeration",
          "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getSystemResources(java.lang.String)"
        },
        "getSystemResource": {
          "!type": "fn(resName: string) -> +java.net.URL",
          "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getSystemResource(java.lang.String)"
        },
        "getSystemResourceAsStream": {
          "!type": "fn(resName: string) -> +java.io.InputStream",
          "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getSystemResourceAsStream(java.lang.String)"
        },
        "getSystemClassLoader": {
          "!type": "fn() -> +java.lang.ClassLoader",
          "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getSystemClassLoader()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "loadClass": {
            "!type": "fn(className: string) -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#loadClass(java.lang.String)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "clearAssertionStatus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#clearAssertionStatus()"
          },
          "getParent": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getParent()"
          },
          "setPackageAssertionStatus": {
            "!type": "fn(pname: string, enable: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#setPackageAssertionStatus(java.lang.String, boolean)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setDefaultAssertionStatus": {
            "!type": "fn(enable: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#setDefaultAssertionStatus(boolean)"
          },
          "setClassAssertionStatus": {
            "!type": "fn(cname: string, enable: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#setClassAssertionStatus(java.lang.String, boolean)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getResources": {
            "!type": "fn(resName: string) -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getResources(java.lang.String)"
          },
          "getResource": {
            "!type": "fn(resName: string) -> +java.net.URL",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getResource(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getResourceAsStream": {
            "!type": "fn(resName: string) -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/java/lang/ClassLoader.html#getResourceAsStream(java.lang.String)"
          }
        }
      },
      "System": {
        "!url": "http://developer.android.com/reference/java/lang/System.html",
        "in": {
          "!type": "+java.io.InputStream",
          "!url": "http://developer.android.com/reference/java/lang/System.html#in"
        },
        "out": {
          "!type": "+java.io.PrintStream",
          "!url": "http://developer.android.com/reference/java/lang/System.html#out"
        },
        "err": {
          "!type": "+java.io.PrintStream",
          "!url": "http://developer.android.com/reference/java/lang/System.html#err"
        },
        "logE": {
          "!type": "fn(message: string) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#logE(java.lang.String)"
        },
        "identityHashCode": {
          "!type": "fn(anObject: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/java/lang/System.html#identityHashCode(java.lang.Object)"
        },
        "currentTimeMillis": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/System.html#currentTimeMillis()"
        },
        "setErr": {
          "!type": "fn(newErr: +java.io.PrintStream) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setErr(java.io.PrintStream)"
        },
        "getProperty": {
          "!type": "fn(propertyName: string) -> string",
          "!url": "http://developer.android.com/reference/java/lang/System.html#getProperty(java.lang.String)"
        },
        "load": {
          "!type": "fn(pathName: string) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#load(java.lang.String)"
        },
        "clearProperty": {
          "!type": "fn(name: string) -> string",
          "!url": "http://developer.android.com/reference/java/lang/System.html#clearProperty(java.lang.String)"
        },
        "setProperty": {
          "!type": "fn(name: string, value: string) -> string",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setProperty(java.lang.String, java.lang.String)"
        },
        "loadLibrary": {
          "!type": "fn(libName: string) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#loadLibrary(java.lang.String)"
        },
        "getSecurityManager": {
          "!type": "fn() -> +java.lang.SecurityManager",
          "!url": "http://developer.android.com/reference/java/lang/System.html#getSecurityManager()"
        },
        "getProperties": {
          "!type": "fn() -> +java.util.Properties",
          "!url": "http://developer.android.com/reference/java/lang/System.html#getProperties()"
        },
        "mapLibraryName": {
          "!type": "fn(nickname: string) -> string",
          "!url": "http://developer.android.com/reference/java/lang/System.html#mapLibraryName(java.lang.String)"
        },
        "runFinalizersOnExit": {
          "!type": "fn(flag: bool) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#runFinalizersOnExit(boolean)"
        },
        "setIn": {
          "!type": "fn(newIn: +java.io.InputStream) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setIn(java.io.InputStream)"
        },
        "logW": {
          "!type": "fn(message: string) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#logW(java.lang.String)"
        },
        "exit": {
          "!type": "fn(code: number) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#exit(int)"
        },
        "nanoTime": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/System.html#nanoTime()"
        },
        "setProperties": {
          "!type": "fn(p: +java.util.Properties) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setProperties(java.util.Properties)"
        },
        "console": {
          "!type": "fn() -> +java.io.Console",
          "!url": "http://developer.android.com/reference/java/lang/System.html#console()"
        },
        "runFinalization": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#runFinalization()"
        },
        "setOut": {
          "!type": "fn(newOut: +java.io.PrintStream) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setOut(java.io.PrintStream)"
        },
        "setUnchangeableSystemProperty": {
          "!type": "fn(name: string, value: string) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setUnchangeableSystemProperty(java.lang.String, java.lang.String)"
        },
        "lineSeparator": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/java/lang/System.html#lineSeparator()"
        },
        "setSecurityManager": {
          "!type": "fn(sm: +java.lang.SecurityManager) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#setSecurityManager(java.lang.SecurityManager)"
        },
        "arraycopy": {
          "!type": "fn(src: +java.lang.Object, srcPos: number, dst: +java.lang.Object, dstPos: number, length: number) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#arraycopy(java.lang.Object, int, java.lang.Object, int, int)"
        },
        "inheritedChannel": {
          "!type": "fn() -> +java.nio.channels.Channel",
          "!url": "http://developer.android.com/reference/java/lang/System.html#inheritedChannel()"
        },
        "gc": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#gc()"
        },
        "logI": {
          "!type": "fn(message: string) -> void",
          "!url": "http://developer.android.com/reference/java/lang/System.html#logI(java.lang.String)"
        },
        "getenv": {
          "!type": "fn(name: string) -> string",
          "!url": "http://developer.android.com/reference/java/lang/System.html#getenv(java.lang.String)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "InstantiationException": {
        "!url": "http://developer.android.com/reference/java/lang/InstantiationException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ArithmeticException": {
        "!url": "http://developer.android.com/reference/java/lang/ArithmeticException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Byte": {
        "!url": "http://developer.android.com/reference/java/lang/Byte.html",
        "!type": "fn(value: +java.lang.Byte)",
        "MAX_VALUE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#MAX_VALUE"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#SIZE"
        },
        "MIN_VALUE": {
          "!type": "+java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#MIN_VALUE"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#TYPE"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#valueOf(java.lang.String)"
        },
        "toHexString": {
          "!type": "fn(b: +java.lang.Byte, upperCase: bool) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#toHexString(byte, boolean)"
        },
        "compare": {
          "!type": "fn(lhs: +java.lang.Byte, rhs: +java.lang.Byte) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#compare(byte, byte)"
        },
        "toString": {
          "!type": "fn(value: +java.lang.Byte) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#toString(byte)"
        },
        "parseByte": {
          "!type": "fn(string: string) -> +java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#parseByte(java.lang.String)"
        },
        "decode": {
          "!type": "fn(string: string) -> +java.lang.Byte",
          "!url": "http://developer.android.com/reference/java/lang/Byte.html#decode(java.lang.String)"
        },
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(object: +java.lang.Byte) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#compareTo(java.lang.Byte)"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#shortValue()"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#byteValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#floatValue()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#doubleValue()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#longValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Byte.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ThreadGroup": {
        "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html",
        "!type": "fn(name: string)",
        "prototype": {
          "activeGroupCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#activeGroupCount()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "resume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#resume()"
          },
          "allowThreadSuspension": {
            "!type": "fn(b: bool) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#allowThreadSuspension(boolean)"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#isDestroyed()"
          },
          "isDaemon": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#isDaemon()"
          },
          "getParent": {
            "!type": "fn() -> +java.lang.ThreadGroup",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#getParent()"
          },
          "getMaxPriority": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#getMaxPriority()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setDaemon": {
            "!type": "fn(isDaemon: bool) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#setDaemon(boolean)"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#getName()"
          },
          "enumerate": {
            "!type": "fn(threads: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#enumerate(java.lang.Thread[])"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#toString()"
          },
          "stop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#stop()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "suspend": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#suspend()"
          },
          "activeCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#activeCount()"
          },
          "parentOf": {
            "!type": "fn(g: +java.lang.ThreadGroup) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#parentOf(java.lang.ThreadGroup)"
          },
          "uncaughtException": {
            "!type": "fn(t: +java.lang.Thread, e: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#uncaughtException(java.lang.Thread, java.lang.Throwable)"
          },
          "list": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#list()"
          },
          "setMaxPriority": {
            "!type": "fn(newMax: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#setMaxPriority(int)"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#destroy()"
          },
          "checkAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#checkAccess()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "interrupt": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/ThreadGroup.html#interrupt()"
          }
        }
      },
      "Math": {
        "!url": "http://developer.android.com/reference/java/lang/Math.html",
        "E": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#E"
        },
        "PI": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#PI"
        },
        "ulp": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#ulp(double)"
        },
        "nextUp": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#nextUp(double)"
        },
        "sinh": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#sinh(double)"
        },
        "asin": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#asin(double)"
        },
        "cos": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#cos(double)"
        },
        "toDegrees": {
          "!type": "fn(angrad: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#toDegrees(double)"
        },
        "floor": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#floor(double)"
        },
        "cosh": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#cosh(double)"
        },
        "log": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#log(double)"
        },
        "sin": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#sin(double)"
        },
        "IEEEremainder": {
          "!type": "fn(x: +java.lang.Double, y: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#IEEEremainder(double, double)"
        },
        "tanh": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#tanh(double)"
        },
        "atan2": {
          "!type": "fn(y: +java.lang.Double, x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#atan2(double, double)"
        },
        "nextAfter": {
          "!type": "fn(start: +java.lang.Double, direction: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#nextAfter(double, double)"
        },
        "max": {
          "!type": "fn(d1: +java.lang.Double, d2: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#max(double, double)"
        },
        "randomIntInternal": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#randomIntInternal()"
        },
        "setRandomSeedInternal": {
          "!type": "fn(seed: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#setRandomSeedInternal(long)"
        },
        "random": {
          "!type": "fn() -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#random()"
        },
        "rint": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#rint(double)"
        },
        "ceil": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#ceil(double)"
        },
        "pow": {
          "!type": "fn(x: +java.lang.Double, y: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#pow(double, double)"
        },
        "expm1": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#expm1(double)"
        },
        "abs": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#abs(double)"
        },
        "atan": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#atan(double)"
        },
        "log10": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#log10(double)"
        },
        "scalb": {
          "!type": "fn(d: +java.lang.Double, scaleFactor: number) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#scalb(double, int)"
        },
        "sqrt": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#sqrt(double)"
        },
        "tan": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#tan(double)"
        },
        "toRadians": {
          "!type": "fn(angdeg: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#toRadians(double)"
        },
        "hypot": {
          "!type": "fn(x: +java.lang.Double, y: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#hypot(double, double)"
        },
        "signum": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#signum(double)"
        },
        "copySign": {
          "!type": "fn(magnitude: +java.lang.Double, sign: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#copySign(double, double)"
        },
        "getExponent": {
          "!type": "fn(f: +java.lang.Float) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#getExponent(float)"
        },
        "round": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#round(double)"
        },
        "cbrt": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#cbrt(double)"
        },
        "log1p": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#log1p(double)"
        },
        "acos": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#acos(double)"
        },
        "min": {
          "!type": "fn(d1: +java.lang.Double, d2: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#min(double, double)"
        },
        "exp": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Math.html#exp(double)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "SecurityException": {
        "!url": "http://developer.android.com/reference/java/lang/SecurityException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StringBuilder": {
        "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html",
        "!type": "fn()",
        "prototype": {
          "getChars": {
            "!type": "fn(start: number, end: number, dst: +java.newArray, dstStart: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#getChars(int, int, char[], int)"
          },
          "capacity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#capacity()"
          },
          "codePointBefore": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#codePointBefore(int)"
          },
          "insert": {
            "!type": "fn(offset: number, b: bool) -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#insert(int, boolean)"
          },
          "indexOf": {
            "!type": "fn(string: string) -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#indexOf(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setCharAt": {
            "!type": "fn(index: number, ch: +java.lang.Char) -> void",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#setCharAt(int, char)"
          },
          "length": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#length()"
          },
          "trimToSize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#trimToSize()"
          },
          "reverse": {
            "!type": "fn() -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#reverse()"
          },
          "charAt": {
            "!type": "fn(index: number) -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#charAt(int)"
          },
          "subSequence": {
            "!type": "fn(start: number, end: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#subSequence(int, int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "codePointAt": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#codePointAt(int)"
          },
          "ensureCapacity": {
            "!type": "fn(min: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#ensureCapacity(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "appendCodePoint": {
            "!type": "fn(codePoint: number) -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#appendCodePoint(int)"
          },
          "deleteCharAt": {
            "!type": "fn(index: number) -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#deleteCharAt(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "lastIndexOf": {
            "!type": "fn(string: string) -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#lastIndexOf(java.lang.String)"
          },
          "append": {
            "!type": "fn(b: bool) -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#append(boolean)"
          },
          "codePointCount": {
            "!type": "fn(start: number, end: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#codePointCount(int, int)"
          },
          "delete": {
            "!type": "fn(start: number, end: number) -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#delete(int, int)"
          },
          "offsetByCodePoints": {
            "!type": "fn(index: number, codePointOffset: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#offsetByCodePoints(int, int)"
          },
          "setLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#setLength(int)"
          },
          "replace": {
            "!type": "fn(start: number, end: number, string: string) -> +java.lang.StringBuilder",
            "!url": "http://developer.android.com/reference/java/lang/StringBuilder.html#replace(int, int, java.lang.String)"
          },
          "substring": {
            "!type": "fn(start: number) -> string",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#substring(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "StackTraceElement": {
        "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html",
        "!type": "fn(cls: string, method: string, file: string, line: number)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "isNativeMethod": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#isNativeMethod()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#toString()"
          },
          "equals": {
            "!type": "fn(obj: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#equals(java.lang.Object)"
          },
          "getClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#getClassName()"
          },
          "getMethodName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#getMethodName()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getLineNumber": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#getLineNumber()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getFileName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/StackTraceElement.html#getFileName()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "RuntimeException": {
        "!url": "http://developer.android.com/reference/java/lang/RuntimeException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "VirtualMachineError": {
        "!url": "http://developer.android.com/reference/java/lang/VirtualMachineError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IntegralToString": {
        "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html",
        "appendByteAsHex": {
          "!type": "fn(sb: +java.lang.StringBuilder, b: +java.lang.Byte, upperCase: bool) -> +java.lang.StringBuilder",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#appendByteAsHex(java.lang.StringBuilder, byte, boolean)"
        },
        "longToString": {
          "!type": "fn(v: +java.lang.Long, radix: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#longToString(long, int)"
        },
        "intToBinaryString": {
          "!type": "fn(i: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#intToBinaryString(int)"
        },
        "longToBinaryString": {
          "!type": "fn(v: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#longToBinaryString(long)"
        },
        "appendInt": {
          "!type": "fn(sb: +java.lang.AbstractStringBuilder, i: number) -> void",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#appendInt(java.lang.AbstractStringBuilder, int)"
        },
        "intToHexString": {
          "!type": "fn(i: number, upperCase: bool, minWidth: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#intToHexString(int, boolean, int)"
        },
        "intToOctalString": {
          "!type": "fn(i: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#intToOctalString(int)"
        },
        "byteToHexString": {
          "!type": "fn(b: +java.lang.Byte, upperCase: bool) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#byteToHexString(byte, boolean)"
        },
        "bytesToHexString": {
          "!type": "fn(bytes: +java.newArray, upperCase: bool) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#bytesToHexString(byte[], boolean)"
        },
        "longToOctalString": {
          "!type": "fn(v: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#longToOctalString(long)"
        },
        "intToString": {
          "!type": "fn(i: number, radix: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#intToString(int, int)"
        },
        "appendLong": {
          "!type": "fn(sb: +java.lang.AbstractStringBuilder, l: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#appendLong(java.lang.AbstractStringBuilder, long)"
        },
        "longToHexString": {
          "!type": "fn(v: +java.lang.Long) -> string",
          "!url": "http://developer.android.com/reference/java/lang/IntegralToString.html#longToHexString(long)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "UnsatisfiedLinkError": {
        "!url": "http://developer.android.com/reference/java/lang/UnsatisfiedLinkError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ClassCastException": {
        "!url": "http://developer.android.com/reference/java/lang/ClassCastException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StringFactory": {
        "!url": "http://developer.android.com/reference/java/lang/StringFactory.html",
        "!type": "fn()",
        "newStringFromString": {
          "!type": "fn(toCopy: string) -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newStringFromString(java.lang.String)"
        },
        "newStringFromChars": {
          "!type": "fn(data: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newStringFromChars(char[])"
        },
        "newStringFromCodePoints": {
          "!type": "fn(codePoints: +java.newArray, offset: number, count: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newStringFromCodePoints(int[], int, int)"
        },
        "newStringFromStringBuffer": {
          "!type": "fn(stringBuffer: +java.lang.StringBuffer) -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newStringFromStringBuffer(java.lang.StringBuffer)"
        },
        "newStringFromStringBuilder": {
          "!type": "fn(stringBuilder: +java.lang.StringBuilder) -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newStringFromStringBuilder(java.lang.StringBuilder)"
        },
        "newStringFromBytes": {
          "!type": "fn(data: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newStringFromBytes(byte[])"
        },
        "newEmptyString": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/java/lang/StringFactory.html#newEmptyString()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Double": {
        "!url": "http://developer.android.com/reference/java/lang/Double.html",
        "!type": "fn(value: +java.lang.Double)",
        "MIN_VALUE": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#MIN_VALUE"
        },
        "MAX_EXPONENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#MAX_EXPONENT"
        },
        "MIN_NORMAL": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#MIN_NORMAL"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#TYPE"
        },
        "POSITIVE_INFINITY": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#POSITIVE_INFINITY"
        },
        "NaN": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#NaN"
        },
        "NEGATIVE_INFINITY": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#NEGATIVE_INFINITY"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#SIZE"
        },
        "MIN_EXPONENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#MIN_EXPONENT"
        },
        "MAX_VALUE": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#MAX_VALUE"
        },
        "compare": {
          "!type": "fn(double1: +java.lang.Double, double2: +java.lang.Double) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#compare(double, double)"
        },
        "toString": {
          "!type": "fn(d: +java.lang.Double) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#toString(double)"
        },
        "longBitsToDouble": {
          "!type": "fn(bits: +java.lang.Long) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#longBitsToDouble(long)"
        },
        "doubleToRawLongBits": {
          "!type": "fn(value: +java.lang.Double) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#doubleToRawLongBits(double)"
        },
        "doubleToLongBits": {
          "!type": "fn(value: +java.lang.Double) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#doubleToLongBits(double)"
        },
        "isNaN": {
          "!type": "fn(d: +java.lang.Double) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#isNaN(double)"
        },
        "toHexString": {
          "!type": "fn(d: +java.lang.Double) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#toHexString(double)"
        },
        "isInfinite": {
          "!type": "fn(d: +java.lang.Double) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#isInfinite(double)"
        },
        "parseDouble": {
          "!type": "fn(string: string) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#parseDouble(java.lang.String)"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/Double.html#valueOf(java.lang.String)"
        },
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(object: +java.lang.Double) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#compareTo(java.lang.Double)"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#shortValue()"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#byteValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#floatValue()"
          },
          "isNaN": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#isNaN()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#doubleValue()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#longValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isInfinite": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Double.html#isInfinite()"
          }
        }
      },
      "UnsupportedOperationException": {
        "!url": "http://developer.android.com/reference/java/lang/UnsupportedOperationException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NoSuchFieldError": {
        "!url": "http://developer.android.com/reference/java/lang/NoSuchFieldError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Package": {
        "!url": "http://developer.android.com/reference/java/lang/Package.html",
        "getPackages": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/lang/Package.html#getPackages()"
        },
        "getPackage": {
          "!type": "fn(packageName: string) -> +java.lang.Package",
          "!url": "http://developer.android.com/reference/java/lang/Package.html#getPackage(java.lang.String)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getAnnotations": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getAnnotations()"
          },
          "isCompatibleWith": {
            "!type": "fn(version: string) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#isCompatibleWith(java.lang.String)"
          },
          "isAnnotationPresent": {
            "!type": "fn(annotationType: +java.lang.Class) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#isAnnotationPresent(java.lang.Class)"
          },
          "isSealed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#isSealed()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getAnnotation": {
            "!type": "fn(annotationType: +java.lang.Class) -> +java.lang.annotation.Annotation",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getAnnotation(java.lang.Class)"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getName()"
          },
          "getImplementationVersion": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getImplementationVersion()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#hashCode()"
          },
          "getImplementationVendor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getImplementationVendor()"
          },
          "getImplementationTitle": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getImplementationTitle()"
          },
          "getDeclaredAnnotations": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getDeclaredAnnotations()"
          },
          "getSpecificationVersion": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getSpecificationVersion()"
          },
          "getSpecificationTitle": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getSpecificationTitle()"
          },
          "getSpecificationVendor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Package.html#getSpecificationVendor()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "ArrayIndexOutOfBoundsException": {
        "!url": "http://developer.android.com/reference/java/lang/ArrayIndexOutOfBoundsException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InterruptedException": {
        "!url": "http://developer.android.com/reference/java/lang/InterruptedException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Integer": {
        "!url": "http://developer.android.com/reference/java/lang/Integer.html",
        "!type": "fn(value: number)",
        "MAX_VALUE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#MAX_VALUE"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#SIZE"
        },
        "MIN_VALUE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#MIN_VALUE"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#TYPE"
        },
        "reverseBytes": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#reverseBytes(int)"
        },
        "numberOfTrailingZeros": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#numberOfTrailingZeros(int)"
        },
        "rotateLeft": {
          "!type": "fn(i: number, distance: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#rotateLeft(int, int)"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Integer",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#valueOf(java.lang.String)"
        },
        "reverse": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#reverse(int)"
        },
        "getInteger": {
          "!type": "fn(string: string) -> +java.lang.Integer",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#getInteger(java.lang.String)"
        },
        "bitCount": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#bitCount(int)"
        },
        "rotateRight": {
          "!type": "fn(i: number, distance: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#rotateRight(int, int)"
        },
        "parseInt": {
          "!type": "fn(string: string) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#parseInt(java.lang.String)"
        },
        "decode": {
          "!type": "fn(string: string) -> +java.lang.Integer",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#decode(java.lang.String)"
        },
        "signum": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#signum(int)"
        },
        "highestOneBit": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#highestOneBit(int)"
        },
        "toString": {
          "!type": "fn(i: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#toString(int)"
        },
        "lowestOneBit": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#lowestOneBit(int)"
        },
        "toOctalString": {
          "!type": "fn(i: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#toOctalString(int)"
        },
        "parsePositiveInt": {
          "!type": "fn(string: string) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#parsePositiveInt(java.lang.String)"
        },
        "toBinaryString": {
          "!type": "fn(i: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#toBinaryString(int)"
        },
        "toHexString": {
          "!type": "fn(i: number) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#toHexString(int)"
        },
        "numberOfLeadingZeros": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#numberOfLeadingZeros(int)"
        },
        "compare": {
          "!type": "fn(lhs: number, rhs: number) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Integer.html#compare(int, int)"
        },
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(object: +java.lang.Integer) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#compareTo(java.lang.Integer)"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#shortValue()"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#byteValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#floatValue()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#doubleValue()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#longValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Integer.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Process": {
        "!url": "http://developer.android.com/reference/java/lang/Process.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getInputStream": {
            "!type": "fn() -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/java/lang/Process.html#getInputStream()"
          },
          "exitValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Process.html#exitValue()"
          },
          "getOutputStream": {
            "!type": "fn() -> +java.io.OutputStream",
            "!url": "http://developer.android.com/reference/java/lang/Process.html#getOutputStream()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "waitFor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Process.html#waitFor()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "destroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Process.html#destroy()"
          },
          "getErrorStream": {
            "!type": "fn() -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/java/lang/Process.html#getErrorStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Compiler": {
        "!url": "http://developer.android.com/reference/java/lang/Compiler.html",
        "compileClasses": {
          "!type": "fn(nameRoot: string) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Compiler.html#compileClasses(java.lang.String)"
        },
        "compileClass": {
          "!type": "fn(classToCompile: +java.lang.Class) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Compiler.html#compileClass(java.lang.Class)"
        },
        "enable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Compiler.html#enable()"
        },
        "disable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Compiler.html#disable()"
        },
        "command": {
          "!type": "fn(cmd: +java.lang.Object) -> +java.lang.Object",
          "!url": "http://developer.android.com/reference/java/lang/Compiler.html#command(java.lang.Object)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "ReflectiveOperationException": {
        "!url": "http://developer.android.com/reference/java/lang/ReflectiveOperationException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Object": {
        "!url": "http://developer.android.com/reference/java/lang/Object.html",
        "!type": "fn()",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "IllegalAccessException": {
        "!url": "http://developer.android.com/reference/java/lang/IllegalAccessException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InternalError": {
        "!url": "http://developer.android.com/reference/java/lang/InternalError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Error": {
        "!url": "http://developer.android.com/reference/java/lang/Error.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Enum": {
        "!url": "http://developer.android.com/reference/java/lang/Enum.html",
        "valueOf": {
          "!type": "fn(enumType: +java.lang.Class, name: string) -> +java.lang.Enum",
          "!url": "http://developer.android.com/reference/java/lang/Enum.html#valueOf(java.lang.Class, java.lang.String)"
        },
        "getSharedConstants": {
          "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
        },
        "prototype": {
          "name": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
          },
          "equals": {
            "!type": "fn(other: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(o: +java.lang.Enum) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDeclaringClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
          },
          "ordinal": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Float": {
        "!url": "http://developer.android.com/reference/java/lang/Float.html",
        "!type": "fn(value: +java.lang.Float)",
        "MIN_VALUE": {
          "!type": "+java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#MIN_VALUE"
        },
        "MAX_EXPONENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#MAX_EXPONENT"
        },
        "MIN_NORMAL": {
          "!type": "+java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#MIN_NORMAL"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#TYPE"
        },
        "POSITIVE_INFINITY": {
          "!type": "+java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#POSITIVE_INFINITY"
        },
        "NaN": {
          "!type": "+java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#NaN"
        },
        "NEGATIVE_INFINITY": {
          "!type": "+java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#NEGATIVE_INFINITY"
        },
        "SIZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#SIZE"
        },
        "MIN_EXPONENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#MIN_EXPONENT"
        },
        "MAX_VALUE": {
          "!type": "+java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#MAX_VALUE"
        },
        "compare": {
          "!type": "fn(float1: +java.lang.Float, float2: +java.lang.Float) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#compare(float, float)"
        },
        "toString": {
          "!type": "fn(f: +java.lang.Float) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#toString(float)"
        },
        "intBitsToFloat": {
          "!type": "fn(bits: number) -> +java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#intBitsToFloat(int)"
        },
        "isNaN": {
          "!type": "fn(f: +java.lang.Float) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#isNaN(float)"
        },
        "floatToRawIntBits": {
          "!type": "fn(value: +java.lang.Float) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#floatToRawIntBits(float)"
        },
        "floatToIntBits": {
          "!type": "fn(value: +java.lang.Float) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#floatToIntBits(float)"
        },
        "toHexString": {
          "!type": "fn(f: +java.lang.Float) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#toHexString(float)"
        },
        "parseFloat": {
          "!type": "fn(string: string) -> +java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#parseFloat(java.lang.String)"
        },
        "isInfinite": {
          "!type": "fn(f: +java.lang.Float) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#isInfinite(float)"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Float",
          "!url": "http://developer.android.com/reference/java/lang/Float.html#valueOf(java.lang.String)"
        },
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(object: +java.lang.Float) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#compareTo(java.lang.Float)"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#shortValue()"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#byteValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#floatValue()"
          },
          "isNaN": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#isNaN()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#doubleValue()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#longValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isInfinite": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Float.html#isInfinite()"
          }
        }
      },
      "ExceptionInInitializerError": {
        "!url": "http://developer.android.com/reference/java/lang/ExceptionInInitializerError.html",
        "!type": "fn()",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getException": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/ExceptionInInitializerError.html#getException()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/ExceptionInInitializerError.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "SecurityManager": {
        "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html",
        "!type": "fn()",
        "prototype": {
          "getInCheck": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#getInCheck()"
          },
          "checkListen": {
            "!type": "fn(port: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkListen(int)"
          },
          "checkExec": {
            "!type": "fn(cmd: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkExec(java.lang.String)"
          },
          "checkExit": {
            "!type": "fn(status: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkExit(int)"
          },
          "checkConnect": {
            "!type": "fn(host: string, port: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkConnect(java.lang.String, int)"
          },
          "checkTopLevelWindow": {
            "!type": "fn(window: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkTopLevelWindow(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "checkRead": {
            "!type": "fn(fd: +java.io.FileDescriptor) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkRead(java.io.FileDescriptor)"
          },
          "checkMemberAccess": {
            "!type": "fn(cls: +java.lang.Class, type: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkMemberAccess(java.lang.Class, int)"
          },
          "checkPropertiesAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkPropertiesAccess()"
          },
          "checkWrite": {
            "!type": "fn(fd: +java.io.FileDescriptor) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkWrite(java.io.FileDescriptor)"
          },
          "checkSetFactory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkSetFactory()"
          },
          "checkPackageDefinition": {
            "!type": "fn(packageName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkPackageDefinition(java.lang.String)"
          },
          "checkCreateClassLoader": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkCreateClassLoader()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "checkMulticast": {
            "!type": "fn(maddr: +java.net.InetAddress) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkMulticast(java.net.InetAddress)"
          },
          "checkDelete": {
            "!type": "fn(file: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkDelete(java.lang.String)"
          },
          "getSecurityContext": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#getSecurityContext()"
          },
          "checkPropertyAccess": {
            "!type": "fn(key: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkPropertyAccess(java.lang.String)"
          },
          "checkPrintJobAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkPrintJobAccess()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "checkPermission": {
            "!type": "fn(permission: +java.security.Permission) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkPermission(java.security.Permission)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkLink": {
            "!type": "fn(libName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkLink(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "checkSecurityAccess": {
            "!type": "fn(target: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkSecurityAccess(java.lang.String)"
          },
          "getThreadGroup": {
            "!type": "fn() -> +java.lang.ThreadGroup",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#getThreadGroup()"
          },
          "checkPackageAccess": {
            "!type": "fn(packageName: string) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkPackageAccess(java.lang.String)"
          },
          "checkAccept": {
            "!type": "fn(host: string, port: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkAccept(java.lang.String, int)"
          },
          "checkSystemClipboardAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkSystemClipboardAccess()"
          },
          "checkAccess": {
            "!type": "fn(thread: +java.lang.Thread) -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkAccess(java.lang.Thread)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "checkAwtEventQueueAccess": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/SecurityManager.html#checkAwtEventQueueAccess()"
          }
        }
      },
      "NoSuchFieldException": {
        "!url": "http://developer.android.com/reference/java/lang/NoSuchFieldException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Throwable": {
        "!url": "http://developer.android.com/reference/java/lang/Throwable.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StackOverflowError": {
        "!url": "http://developer.android.com/reference/java/lang/StackOverflowError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StrictMath": {
        "!url": "http://developer.android.com/reference/java/lang/StrictMath.html",
        "E": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#E"
        },
        "PI": {
          "!type": "+java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#PI"
        },
        "ulp": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#ulp(double)"
        },
        "nextUp": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#nextUp(double)"
        },
        "sinh": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#sinh(double)"
        },
        "asin": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#asin(double)"
        },
        "cos": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#cos(double)"
        },
        "toDegrees": {
          "!type": "fn(angrad: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#toDegrees(double)"
        },
        "floor": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#floor(double)"
        },
        "cosh": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#cosh(double)"
        },
        "log": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#log(double)"
        },
        "sin": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#sin(double)"
        },
        "IEEEremainder": {
          "!type": "fn(x: +java.lang.Double, y: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#IEEEremainder(double, double)"
        },
        "tanh": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#tanh(double)"
        },
        "atan2": {
          "!type": "fn(y: +java.lang.Double, x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#atan2(double, double)"
        },
        "nextAfter": {
          "!type": "fn(start: +java.lang.Double, direction: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#nextAfter(double, double)"
        },
        "max": {
          "!type": "fn(d1: +java.lang.Double, d2: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#max(double, double)"
        },
        "random": {
          "!type": "fn() -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#random()"
        },
        "rint": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#rint(double)"
        },
        "ceil": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#ceil(double)"
        },
        "pow": {
          "!type": "fn(x: +java.lang.Double, y: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#pow(double, double)"
        },
        "expm1": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#expm1(double)"
        },
        "abs": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#abs(double)"
        },
        "atan": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#atan(double)"
        },
        "log10": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#log10(double)"
        },
        "scalb": {
          "!type": "fn(d: +java.lang.Double, scaleFactor: number) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#scalb(double, int)"
        },
        "sqrt": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#sqrt(double)"
        },
        "tan": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#tan(double)"
        },
        "toRadians": {
          "!type": "fn(angdeg: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#toRadians(double)"
        },
        "hypot": {
          "!type": "fn(x: +java.lang.Double, y: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#hypot(double, double)"
        },
        "signum": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#signum(double)"
        },
        "copySign": {
          "!type": "fn(magnitude: +java.lang.Double, sign: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#copySign(double, double)"
        },
        "getExponent": {
          "!type": "fn(f: +java.lang.Float) -> number",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#getExponent(float)"
        },
        "round": {
          "!type": "fn(d: +java.lang.Double) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#round(double)"
        },
        "cbrt": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#cbrt(double)"
        },
        "log1p": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#log1p(double)"
        },
        "acos": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#acos(double)"
        },
        "min": {
          "!type": "fn(d1: +java.lang.Double, d2: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#min(double, double)"
        },
        "exp": {
          "!type": "fn(x: +java.lang.Double) -> +java.lang.Double",
          "!url": "http://developer.android.com/reference/java/lang/StrictMath.html#exp(double)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Number": {
        "!url": "http://developer.android.com/reference/java/lang/Number.html",
        "!type": "fn()",
        "prototype": {
          "intValue": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Number.html#intValue()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "byteValue": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/lang/Number.html#byteValue()"
          },
          "shortValue": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/lang/Number.html#shortValue()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "floatValue": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/lang/Number.html#floatValue()"
          },
          "doubleValue": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/lang/Number.html#doubleValue()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "longValue": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/lang/Number.html#longValue()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Daemons": {
        "!url": "http://developer.android.com/reference/java/lang/Daemons.html",
        "!type": "fn()",
        "requestGC": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Daemons.html#requestGC()"
        },
        "stop": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Daemons.html#stop()"
        },
        "requestHeapTrim": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Daemons.html#requestHeapTrim()"
        },
        "start": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/lang/Daemons.html#start()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "EnumConstantNotPresentException": {
        "!url": "http://developer.android.com/reference/java/lang/EnumConstantNotPresentException.html",
        "!type": "fn(enumType: +java.lang.Class, constantName: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "constantName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/EnumConstantNotPresentException.html#constantName()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "enumType": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/EnumConstantNotPresentException.html#enumType()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Class": {
        "!url": "http://developer.android.com/reference/java/lang/Class.html",
        "forName": {
          "!type": "fn(className: string) -> +java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Class.html#forName(java.lang.String)"
        },
        "prototype": {
          "getClasses": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getClasses()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isArray": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isArray()"
          },
          "isAnonymousClass": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isAnonymousClass()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getConstructor": {
            "!type": "fn(parameterTypes: +java.newArray) -> +java.lang.reflect.Constructor",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getConstructor(java.lang.Class[])"
          },
          "getSimpleName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getSimpleName()"
          },
          "getSuperclass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getSuperclass()"
          },
          "desiredAssertionStatus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#desiredAssertionStatus()"
          },
          "getEnclosingConstructor": {
            "!type": "fn() -> +java.lang.reflect.Constructor",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getEnclosingConstructor()"
          },
          "getPackageName$": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getPackageName$()"
          },
          "asSubclass": {
            "!type": "fn(c: +java.lang.Class) -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#asSubclass(java.lang.Class)"
          },
          "getDeclaredConstructors": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredConstructors()"
          },
          "getFields": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getFields()"
          },
          "getDexCacheType": {
            "!type": "fn(dex: +com.android.dex.Dex, dexTypeIndex: number) -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDexCacheType(com.android.dex.Dex, int)"
          },
          "cast": {
            "!type": "fn(obj: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#cast(java.lang.Object)"
          },
          "isMemberClass": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isMemberClass()"
          },
          "getEnclosingMethod": {
            "!type": "fn() -> +java.lang.reflect.Method",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getEnclosingMethod()"
          },
          "isAnnotationPresent": {
            "!type": "fn(annotationType: +java.lang.Class) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isAnnotationPresent(java.lang.Class)"
          },
          "getResourceAsStream": {
            "!type": "fn(resourceName: string) -> +java.io.InputStream",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getResourceAsStream(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getName()"
          },
          "isLocalClass": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isLocalClass()"
          },
          "getDeclaredAnnotations": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredAnnotations()"
          },
          "getCanonicalName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getCanonicalName()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDeclaringClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaringClass()"
          },
          "isInterface": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isInterface()"
          },
          "isFinalizable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isFinalizable()"
          },
          "isInstance": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isInstance(java.lang.Object)"
          },
          "getModifiers": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getModifiers()"
          },
          "isEnum": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isEnum()"
          },
          "getConstructors": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getConstructors()"
          },
          "getDeclaredMethods": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredMethods()"
          },
          "getField": {
            "!type": "fn(name: string) -> +java.lang.reflect.Field",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getField(java.lang.String)"
          },
          "getDeclaredConstructor": {
            "!type": "fn(parameterTypes: +java.newArray) -> +java.lang.reflect.Constructor",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredConstructor(java.lang.Class[])"
          },
          "isPrimitive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isPrimitive()"
          },
          "getMethods": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getMethods()"
          },
          "getTypeParameters": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getTypeParameters()"
          },
          "isProxy": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isProxy()"
          },
          "isAssignableFrom": {
            "!type": "fn(c: +java.lang.Class) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isAssignableFrom(java.lang.Class)"
          },
          "getDeclaredMethodsUnchecked": {
            "!type": "fn(publicOnly: bool) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredMethodsUnchecked(boolean)"
          },
          "getPackage": {
            "!type": "fn() -> +java.lang.Package",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getPackage()"
          },
          "getResource": {
            "!type": "fn(resourceName: string) -> +java.net.URL",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getResource(java.lang.String)"
          },
          "getGenericInterfaces": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getGenericInterfaces()"
          },
          "getDeclaredMethod": {
            "!type": "fn(name: string, parameterTypes: +java.newArray) -> +java.lang.reflect.Method",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredMethod(java.lang.String, java.lang.Class[])"
          },
          "newInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#newInstance()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#toString()"
          },
          "getSigners": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getSigners()"
          },
          "getDexAnnotationDirectoryOffset": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDexAnnotationDirectoryOffset()"
          },
          "getComponentType": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getComponentType()"
          },
          "getInterfaces": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getInterfaces()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getClassLoader()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getProtectionDomain": {
            "!type": "fn() -> +java.security.ProtectionDomain",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getProtectionDomain()"
          },
          "getAnnotations": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getAnnotations()"
          },
          "getDeclaredFieldsUnchecked": {
            "!type": "fn(publicOnly: bool) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredFieldsUnchecked(boolean)"
          },
          "getDexClassDefIndex": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDexClassDefIndex()"
          },
          "getDexCacheString": {
            "!type": "fn(dex: +com.android.dex.Dex, dexStringIndex: number) -> string",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDexCacheString(com.android.dex.Dex, int)"
          },
          "getEnumConstants": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getEnumConstants()"
          },
          "getDexTypeIndex": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDexTypeIndex()"
          },
          "isSynthetic": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isSynthetic()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getEnclosingClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getEnclosingClass()"
          },
          "getMethod": {
            "!type": "fn(name: string, parameterTypes: +java.newArray) -> +java.lang.reflect.Method",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getMethod(java.lang.String, java.lang.Class[])"
          },
          "isAnnotation": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#isAnnotation()"
          },
          "getDex": {
            "!type": "fn() -> +com.android.dex.Dex",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDex()"
          },
          "getAnnotation": {
            "!type": "fn(annotationType: +java.lang.Class) -> +java.lang.annotation.Annotation",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getAnnotation(java.lang.Class)"
          },
          "getDeclaredField": {
            "!type": "fn(name: string) -> +java.lang.reflect.Field",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredField(java.lang.String)"
          },
          "getDeclaredClasses": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredClasses()"
          },
          "getGenericSuperclass": {
            "!type": "fn() -> +java.lang.reflect.Type",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getGenericSuperclass()"
          },
          "getDeclaredFields": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Class.html#getDeclaredFields()"
          }
        }
      },
      "IllegalArgumentException": {
        "!url": "http://developer.android.com/reference/java/lang/IllegalArgumentException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "NegativeArraySizeException": {
        "!url": "http://developer.android.com/reference/java/lang/NegativeArraySizeException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "StringBuffer": {
        "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html",
        "!type": "fn()",
        "prototype": {
          "capacity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#capacity()"
          },
          "getChars": {
            "!type": "fn(start: number, end: number, buffer: +java.newArray, idx: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#getChars(int, int, char[], int)"
          },
          "insert": {
            "!type": "fn(index: number, ch: +java.lang.Char) -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#insert(int, char)"
          },
          "codePointBefore": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#codePointBefore(int)"
          },
          "indexOf": {
            "!type": "fn(subString: string, start: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#indexOf(java.lang.String, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setCharAt": {
            "!type": "fn(index: number, ch: +java.lang.Char) -> void",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#setCharAt(int, char)"
          },
          "length": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/AbstractStringBuilder.html#length()"
          },
          "trimToSize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#trimToSize()"
          },
          "reverse": {
            "!type": "fn() -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#reverse()"
          },
          "charAt": {
            "!type": "fn(index: number) -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#charAt(int)"
          },
          "subSequence": {
            "!type": "fn(start: number, end: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#subSequence(int, int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "codePointAt": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#codePointAt(int)"
          },
          "ensureCapacity": {
            "!type": "fn(min: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#ensureCapacity(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "appendCodePoint": {
            "!type": "fn(codePoint: number) -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#appendCodePoint(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#toString()"
          },
          "deleteCharAt": {
            "!type": "fn(location: number) -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#deleteCharAt(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "lastIndexOf": {
            "!type": "fn(subString: string, start: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#lastIndexOf(java.lang.String, int)"
          },
          "append": {
            "!type": "fn(b: bool) -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#append(boolean)"
          },
          "delete": {
            "!type": "fn(start: number, end: number) -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#delete(int, int)"
          },
          "codePointCount": {
            "!type": "fn(beginIndex: number, endIndex: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#codePointCount(int, int)"
          },
          "offsetByCodePoints": {
            "!type": "fn(index: number, codePointOffset: number) -> number",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#offsetByCodePoints(int, int)"
          },
          "setLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#setLength(int)"
          },
          "replace": {
            "!type": "fn(start: number, end: number, string: string) -> +java.lang.StringBuffer",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#replace(int, int, java.lang.String)"
          },
          "substring": {
            "!type": "fn(start: number) -> string",
            "!url": "http://developer.android.com/reference/java/lang/StringBuffer.html#substring(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "IllegalMonitorStateException": {
        "!url": "http://developer.android.com/reference/java/lang/IllegalMonitorStateException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "RuntimePermission": {
        "!url": "http://developer.android.com/reference/java/lang/RuntimePermission.html",
        "!type": "fn(permissionName: string)",
        "prototype": {
          "getActions": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/RuntimePermission.html#getActions()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#getName()"
          },
          "implies": {
            "!type": "fn(permission: +java.security.Permission) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/RuntimePermission.html#implies(java.security.Permission)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkGuard": {
            "!type": "fn(obj: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#checkGuard(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "newPermissionCollection": {
            "!type": "fn() -> +java.security.PermissionCollection",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#newPermissionCollection()"
          }
        }
      },
      "JavaClass": {
        "!url": "http://developer.android.com/reference/java/lang/JavaClass.html",
        "!type": "fn()",
        "test": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/java/lang/JavaClass.html#test"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "IndexOutOfBoundsException": {
        "!url": "http://developer.android.com/reference/java/lang/IndexOutOfBoundsException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IncompatibleClassChangeError": {
        "!url": "http://developer.android.com/reference/java/lang/IncompatibleClassChangeError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Boolean": {
        "!url": "http://developer.android.com/reference/java/lang/Boolean.html",
        "!type": "fn(string: string)",
        "TRUE": {
          "!type": "+java.lang.Boolean",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#TRUE"
        },
        "FALSE": {
          "!type": "+java.lang.Boolean",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#FALSE"
        },
        "TYPE": {
          "!type": "+java.lang.Class",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#TYPE"
        },
        "valueOf": {
          "!type": "fn(string: string) -> +java.lang.Boolean",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#valueOf(java.lang.String)"
        },
        "parseBoolean": {
          "!type": "fn(s: string) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#parseBoolean(java.lang.String)"
        },
        "getBoolean": {
          "!type": "fn(string: string) -> bool",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#getBoolean(java.lang.String)"
        },
        "compare": {
          "!type": "fn(lhs: bool, rhs: bool) -> number",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#compare(boolean, boolean)"
        },
        "toString": {
          "!type": "fn(value: bool) -> string",
          "!url": "http://developer.android.com/reference/java/lang/Boolean.html#toString(boolean)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Boolean.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Boolean.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(that: +java.lang.Boolean) -> number",
            "!url": "http://developer.android.com/reference/java/lang/Boolean.html#compareTo(java.lang.Boolean)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Boolean.html#hashCode()"
          },
          "booleanValue": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Boolean.html#booleanValue()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ProcessBuilder": {
        "!url": "http://developer.android.com/reference/java/lang/ProcessBuilder.html",
        "!type": "fn(command: +java.newArray)",
        "prototype": {
          "redirectErrorStream": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/lang/ProcessBuilder.html#redirectErrorStream()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "start": {
            "!type": "fn() -> +java.lang.Process",
            "!url": "http://developer.android.com/reference/java/lang/ProcessBuilder.html#start()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "command": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/lang/ProcessBuilder.html#command()"
          },
          "environment": {
            "!type": "fn() -> +java.util.Map",
            "!url": "http://developer.android.com/reference/java/lang/ProcessBuilder.html#environment()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "directory": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/java/lang/ProcessBuilder.html#directory()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AbstractMethodError": {
        "!url": "http://developer.android.com/reference/java/lang/AbstractMethodError.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      }
    }
  }
}